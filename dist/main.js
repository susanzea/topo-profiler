/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@google/earthengine/build/browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/@google/earthengine/build/browser.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar isChrome87, $jscomp = $jscomp || {};\n$jscomp.scope = {};\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    return index < array.length ? {done:!1, value:array[index++],} : {done:!0};\n  };\n};\n$jscomp.arrayIterator = function(array) {\n  return {next:$jscomp.arrayIteratorImpl(array)};\n};\n$jscomp.ASSUME_ES5 = !1;\n$jscomp.ASSUME_NO_NATIVE_MAP = !1;\n$jscomp.ASSUME_NO_NATIVE_SET = !1;\n$jscomp.SIMPLE_FROUND_POLYFILL = !1;\n$jscomp.ISOLATE_POLYFILLS = !1;\n$jscomp.FORCE_POLYFILL_PROMISE = !1;\n$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;\n$jscomp.defineProperty = $jscomp.ASSUME_ES5 || \"function\" == typeof Object.defineProperties ? Object.defineProperty : function(target, property, descriptor) {\n  if (target == Array.prototype || target == Object.prototype) {\n    return target;\n  }\n  target[property] = descriptor.value;\n  return target;\n};\n$jscomp.getGlobal = function(passedInThis) {\n  for (var possibleGlobals = [\"object\" == typeof globalThis && globalThis, passedInThis, \"object\" == typeof window && window, \"object\" == typeof self && self, \"object\" == typeof __webpack_require__.g && __webpack_require__.g,], i = 0; i < possibleGlobals.length; ++i) {\n    var maybeGlobal = possibleGlobals[i];\n    if (maybeGlobal && maybeGlobal.Math == Math) {\n      return maybeGlobal;\n    }\n  }\n  return function() {\n    throw Error(\"Cannot find global object\");\n  }();\n};\n$jscomp.global = $jscomp.getGlobal(this);\n$jscomp.IS_SYMBOL_NATIVE = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol(\"x\");\n$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;\n$jscomp.polyfills = {};\n$jscomp.propertyToPolyfillSymbol = {};\n$jscomp.POLYFILL_PREFIX = \"$jscp$\";\nvar $jscomp$lookupPolyfilledValue = function(target, property) {\n  var obfuscatedName = $jscomp.propertyToPolyfillSymbol[property];\n  if (null == obfuscatedName) {\n    return target[property];\n  }\n  var polyfill = target[obfuscatedName];\n  return void 0 !== polyfill ? polyfill : target[property];\n};\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  polyfill && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(target, polyfill, fromLang, toLang) : $jscomp.polyfillUnisolated(target, polyfill, fromLang, toLang));\n};\n$jscomp.polyfillUnisolated = function(target, polyfill, fromLang, toLang) {\n  for (var obj = $jscomp.global, split = target.split(\".\"), i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) {\n      return;\n    }\n    obj = obj[key];\n  }\n  var property = split[split.length - 1], orig = obj[property], impl = polyfill(orig);\n  impl != orig && null != impl && $jscomp.defineProperty(obj, property, {configurable:!0, writable:!0, value:impl});\n};\n$jscomp.polyfillIsolated = function(target, polyfill, fromLang, toLang) {\n  var split = target.split(\".\"), isSimpleName = 1 === split.length, root = split[0];\n  var ownerObject = !isSimpleName && root in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in ownerObject)) {\n      return;\n    }\n    ownerObject = ownerObject[key];\n  }\n  var property = split[split.length - 1], nativeImpl = $jscomp.IS_SYMBOL_NATIVE && \"es6\" === fromLang ? ownerObject[property] : null, impl = polyfill(nativeImpl);\n  if (null != impl) {\n    if (isSimpleName) {\n      $jscomp.defineProperty($jscomp.polyfills, property, {configurable:!0, writable:!0, value:impl});\n    } else {\n      if (impl !== nativeImpl) {\n        if (void 0 === $jscomp.propertyToPolyfillSymbol[property]) {\n          var BIN_ID = 1e9 * Math.random() >>> 0;\n          $jscomp.propertyToPolyfillSymbol[property] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(property) : $jscomp.POLYFILL_PREFIX + BIN_ID + \"$\" + property;\n        }\n        $jscomp.defineProperty(ownerObject, $jscomp.propertyToPolyfillSymbol[property], {configurable:!0, writable:!0, value:impl});\n      }\n    }\n  }\n};\n$jscomp.initSymbol = function() {\n};\n$jscomp.polyfill(\"Symbol\", function(orig) {\n  if (orig) {\n    return orig;\n  }\n  var SymbolClass = function(id, opt_description) {\n    this.$jscomp$symbol$id_ = id;\n    $jscomp.defineProperty(this, \"description\", {configurable:!0, writable:!0, value:opt_description});\n  };\n  SymbolClass.prototype.toString = function() {\n    return this.$jscomp$symbol$id_;\n  };\n  var SYMBOL_PREFIX = \"jscomp_symbol_\" + (1e9 * Math.random() >>> 0) + \"_\", counter = 0, symbolPolyfill = function(opt_description) {\n    if (this instanceof symbolPolyfill) {\n      throw new TypeError(\"Symbol is not a constructor\");\n    }\n    return new SymbolClass(SYMBOL_PREFIX + (opt_description || \"\") + \"_\" + counter++, opt_description);\n  };\n  return symbolPolyfill;\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Symbol.iterator\", function(orig) {\n  if (orig) {\n    return orig;\n  }\n  for (var symbolIterator = Symbol(\"Symbol.iterator\"), arrayLikes = \"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"), i = 0; i < arrayLikes.length; i++) {\n    var ArrayLikeCtor = $jscomp.global[arrayLikes[i]];\n    \"function\" === typeof ArrayLikeCtor && \"function\" != typeof ArrayLikeCtor.prototype[symbolIterator] && $jscomp.defineProperty(ArrayLikeCtor.prototype, symbolIterator, {configurable:!0, writable:!0, value:function() {\n      return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));\n    }});\n  }\n  return symbolIterator;\n}, \"es6\", \"es3\");\n$jscomp.iteratorPrototype = function(next) {\n  var iterator = {next:next};\n  iterator[Symbol.iterator] = function() {\n    return this;\n  };\n  return iterator;\n};\n$jscomp.createTemplateTagFirstArg = function(arrayStrings) {\n  return arrayStrings.raw = arrayStrings;\n};\n$jscomp.createTemplateTagFirstArgWithRaw = function(arrayStrings, rawArrayStrings) {\n  arrayStrings.raw = rawArrayStrings;\n  return arrayStrings;\n};\n$jscomp.makeIterator = function(iterable) {\n  var iteratorFunction = \"undefined\" != typeof Symbol && Symbol.iterator && iterable[Symbol.iterator];\n  return iteratorFunction ? iteratorFunction.call(iterable) : $jscomp.arrayIterator(iterable);\n};\n$jscomp.arrayFromIterator = function(iterator) {\n  for (var i, arr = []; !(i = iterator.next()).done;) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n$jscomp.arrayFromIterable = function(iterable) {\n  return iterable instanceof Array ? iterable : $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n};\n$jscomp.objectCreate = $jscomp.ASSUME_ES5 || \"function\" == typeof Object.create ? Object.create : function(prototype) {\n  var ctor = function() {\n  };\n  ctor.prototype = prototype;\n  return new ctor();\n};\n$jscomp.getConstructImplementation = function() {\n  function reflectConstructWorks() {\n    function Base() {\n    }\n    new Base();\n    Reflect.construct(Base, [], function Derived() {\n    });\n    return new Base() instanceof Base;\n  }\n  if ($jscomp.TRUST_ES6_POLYFILLS && \"undefined\" != typeof Reflect && Reflect.construct) {\n    if (reflectConstructWorks()) {\n      return Reflect.construct;\n    }\n    var brokenConstruct = Reflect.construct;\n    return function(target, argList, opt_newTarget) {\n      var out = brokenConstruct(target, argList);\n      opt_newTarget && Reflect.setPrototypeOf(out, opt_newTarget.prototype);\n      return out;\n    };\n  }\n  return function construct(target, argList, opt_newTarget) {\n    void 0 === opt_newTarget && (opt_newTarget = target);\n    var obj = $jscomp.objectCreate(opt_newTarget.prototype || Object.prototype);\n    return Function.prototype.apply.call(target, obj, argList) || obj;\n  };\n};\n$jscomp.construct = {valueOf:$jscomp.getConstructImplementation}.valueOf();\n$jscomp.underscoreProtoCanBeSet = function() {\n  var x = {a:!0}, y = {};\n  try {\n    return y.__proto__ = x, y.a;\n  } catch (e) {\n  }\n  return !1;\n};\n$jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && \"function\" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(target, proto) {\n  target.__proto__ = proto;\n  if (target.__proto__ !== proto) {\n    throw new TypeError(target + \" is not extensible\");\n  }\n  return target;\n} : null;\n$jscomp.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = $jscomp.objectCreate(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n  if ($jscomp.setPrototypeOf) {\n    var setPrototypeOf = $jscomp.setPrototypeOf;\n    setPrototypeOf(childCtor, parentCtor);\n  } else {\n    for (var p in parentCtor) {\n      if (\"prototype\" != p) {\n        if (Object.defineProperties) {\n          var descriptor = Object.getOwnPropertyDescriptor(parentCtor, p);\n          descriptor && Object.defineProperty(childCtor, p, descriptor);\n        } else {\n          childCtor[p] = parentCtor[p];\n        }\n      }\n    }\n  }\n  childCtor.superClass_ = parentCtor.prototype;\n};\n$jscomp.generator = {};\n$jscomp.generator.ensureIteratorResultIsObject_ = function(result) {\n  if (!(result instanceof Object)) {\n    throw new TypeError(\"Iterator result \" + result + \" is not an object\");\n  }\n};\n$jscomp.generator.Context = function() {\n  this.isRunning_ = !1;\n  this.yieldAllIterator_ = null;\n  this.yieldResult = void 0;\n  this.nextAddress = 1;\n  this.finallyAddress_ = this.catchAddress_ = 0;\n  this.finallyContexts_ = this.abruptCompletion_ = null;\n};\n$jscomp.generator.Context.prototype.start_ = function() {\n  if (this.isRunning_) {\n    throw new TypeError(\"Generator is already running\");\n  }\n  this.isRunning_ = !0;\n};\n$jscomp.generator.Context.prototype.stop_ = function() {\n  this.isRunning_ = !1;\n};\n$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {\n  this.nextAddress = this.catchAddress_ || this.finallyAddress_;\n};\n$jscomp.generator.Context.prototype.next_ = function(value) {\n  this.yieldResult = value;\n};\n$jscomp.generator.Context.prototype.throw_ = function(e) {\n  this.abruptCompletion_ = {exception:e, isException:!0};\n  this.jumpToErrorHandler_();\n};\n$jscomp.generator.Context.prototype.return = function(value) {\n  this.abruptCompletion_ = {return:value};\n  this.nextAddress = this.finallyAddress_;\n};\n$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(nextAddress) {\n  this.abruptCompletion_ = {jumpTo:nextAddress};\n  this.nextAddress = this.finallyAddress_;\n};\n$jscomp.generator.Context.prototype.yield = function(value, resumeAddress) {\n  this.nextAddress = resumeAddress;\n  return {value:value};\n};\n$jscomp.generator.Context.prototype.yieldAll = function(iterable, resumeAddress) {\n  var iterator = $jscomp.makeIterator(iterable), result = iterator.next();\n  $jscomp.generator.ensureIteratorResultIsObject_(result);\n  if (result.done) {\n    this.yieldResult = result.value, this.nextAddress = resumeAddress;\n  } else {\n    return this.yieldAllIterator_ = iterator, this.yield(result.value, resumeAddress);\n  }\n};\n$jscomp.generator.Context.prototype.jumpTo = function(nextAddress) {\n  this.nextAddress = nextAddress;\n};\n$jscomp.generator.Context.prototype.jumpToEnd = function() {\n  this.nextAddress = 0;\n};\n$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(catchAddress, finallyAddress) {\n  this.catchAddress_ = catchAddress;\n  void 0 != finallyAddress && (this.finallyAddress_ = finallyAddress);\n};\n$jscomp.generator.Context.prototype.setFinallyBlock = function(finallyAddress) {\n  this.catchAddress_ = 0;\n  this.finallyAddress_ = finallyAddress || 0;\n};\n$jscomp.generator.Context.prototype.leaveTryBlock = function(nextAddress, catchAddress) {\n  this.nextAddress = nextAddress;\n  this.catchAddress_ = catchAddress || 0;\n};\n$jscomp.generator.Context.prototype.enterCatchBlock = function(nextCatchBlockAddress) {\n  this.catchAddress_ = nextCatchBlockAddress || 0;\n  var exception = this.abruptCompletion_.exception;\n  this.abruptCompletion_ = null;\n  return exception;\n};\n$jscomp.generator.Context.prototype.enterFinallyBlock = function(nextCatchAddress, nextFinallyAddress, finallyDepth) {\n  finallyDepth ? this.finallyContexts_[finallyDepth] = this.abruptCompletion_ : this.finallyContexts_ = [this.abruptCompletion_];\n  this.catchAddress_ = nextCatchAddress || 0;\n  this.finallyAddress_ = nextFinallyAddress || 0;\n};\n$jscomp.generator.Context.prototype.leaveFinallyBlock = function(nextAddress, finallyDepth) {\n  var preservedContext = this.finallyContexts_.splice(finallyDepth || 0)[0], abruptCompletion = this.abruptCompletion_ = this.abruptCompletion_ || preservedContext;\n  if (abruptCompletion) {\n    if (abruptCompletion.isException) {\n      return this.jumpToErrorHandler_();\n    }\n    void 0 != abruptCompletion.jumpTo && this.finallyAddress_ < abruptCompletion.jumpTo ? (this.nextAddress = abruptCompletion.jumpTo, this.abruptCompletion_ = null) : this.nextAddress = this.finallyAddress_;\n  } else {\n    this.nextAddress = nextAddress;\n  }\n};\n$jscomp.generator.Context.prototype.forIn = function(object) {\n  return new $jscomp.generator.Context.PropertyIterator(object);\n};\n$jscomp.generator.Context.PropertyIterator = function(object) {\n  this.object_ = object;\n  this.properties_ = [];\n  for (var property in object) {\n    this.properties_.push(property);\n  }\n  this.properties_.reverse();\n};\n$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {\n  for (; 0 < this.properties_.length;) {\n    var property = this.properties_.pop();\n    if (property in this.object_) {\n      return property;\n    }\n  }\n  return null;\n};\n$jscomp.generator.Engine_ = function(program) {\n  this.context_ = new $jscomp.generator.Context();\n  this.program_ = program;\n};\n$jscomp.generator.Engine_.prototype.next_ = function(value) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(this.context_.yieldAllIterator_.next, value, this.context_.next_);\n  }\n  this.context_.next_(value);\n  return this.nextStep_();\n};\n$jscomp.generator.Engine_.prototype.return_ = function(value) {\n  this.context_.start_();\n  var yieldAllIterator = this.context_.yieldAllIterator_;\n  if (yieldAllIterator) {\n    return this.yieldAllStep_(\"return\" in yieldAllIterator ? yieldAllIterator[\"return\"] : function(v) {\n      return {value:v, done:!0};\n    }, value, this.context_.return);\n  }\n  this.context_.return(value);\n  return this.nextStep_();\n};\n$jscomp.generator.Engine_.prototype.throw_ = function(exception) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(this.context_.yieldAllIterator_[\"throw\"], exception, this.context_.next_);\n  }\n  this.context_.throw_(exception);\n  return this.nextStep_();\n};\n$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(action, value, nextAction) {\n  try {\n    var result = action.call(this.context_.yieldAllIterator_, value);\n    $jscomp.generator.ensureIteratorResultIsObject_(result);\n    if (!result.done) {\n      return this.context_.stop_(), result;\n    }\n    var resultValue = result.value;\n  } catch (e) {\n    return this.context_.yieldAllIterator_ = null, this.context_.throw_(e), this.nextStep_();\n  }\n  this.context_.yieldAllIterator_ = null;\n  nextAction.call(this.context_, resultValue);\n  return this.nextStep_();\n};\n$jscomp.generator.Engine_.prototype.nextStep_ = function() {\n  for (; this.context_.nextAddress;) {\n    try {\n      var yieldValue = this.program_(this.context_);\n      if (yieldValue) {\n        return this.context_.stop_(), {value:yieldValue.value, done:!1};\n      }\n    } catch (e) {\n      this.context_.yieldResult = void 0, this.context_.throw_(e);\n    }\n  }\n  this.context_.stop_();\n  if (this.context_.abruptCompletion_) {\n    var abruptCompletion = this.context_.abruptCompletion_;\n    this.context_.abruptCompletion_ = null;\n    if (abruptCompletion.isException) {\n      throw abruptCompletion.exception;\n    }\n    return {value:abruptCompletion.return, done:!0};\n  }\n  return {value:void 0, done:!0};\n};\n$jscomp.generator.Generator_ = function(engine) {\n  this.next = function(opt_value) {\n    return engine.next_(opt_value);\n  };\n  this.throw = function(exception) {\n    return engine.throw_(exception);\n  };\n  this.return = function(value) {\n    return engine.return_(value);\n  };\n  this[Symbol.iterator] = function() {\n    return this;\n  };\n};\n$jscomp.generator.createGenerator = function(generator, program) {\n  var result = new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(program));\n  $jscomp.setPrototypeOf && generator.prototype && $jscomp.setPrototypeOf(result, generator.prototype);\n  return result;\n};\n$jscomp.asyncExecutePromiseGenerator = function(generator) {\n  function passValueToGenerator(value) {\n    return generator.next(value);\n  }\n  function passErrorToGenerator(error) {\n    return generator.throw(error);\n  }\n  return new Promise(function(resolve, reject) {\n    function handleGeneratorRecord(genRec) {\n      genRec.done ? resolve(genRec.value) : Promise.resolve(genRec.value).then(passValueToGenerator, passErrorToGenerator).then(handleGeneratorRecord, reject);\n    }\n    handleGeneratorRecord(generator.next());\n  });\n};\n$jscomp.asyncExecutePromiseGeneratorFunction = function(generatorFunction) {\n  return $jscomp.asyncExecutePromiseGenerator(generatorFunction());\n};\n$jscomp.asyncExecutePromiseGeneratorProgram = function(program) {\n  return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(program)));\n};\n$jscomp.getRestArguments = function() {\n  for (var startIndex = Number(this), restArgs = [], i = startIndex; i < arguments.length; i++) {\n    restArgs[i - startIndex] = arguments[i];\n  }\n  return restArgs;\n};\n$jscomp.polyfill(\"Reflect\", function(orig) {\n  return orig ? orig : {};\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Reflect.construct\", function(orig) {\n  return $jscomp.construct;\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Reflect.setPrototypeOf\", function(orig) {\n  if (orig) {\n    return orig;\n  }\n  if ($jscomp.setPrototypeOf) {\n    var setPrototypeOf = $jscomp.setPrototypeOf;\n    return function(target, proto) {\n      try {\n        return setPrototypeOf(target, proto), !0;\n      } catch (e) {\n        return !1;\n      }\n    };\n  }\n  return null;\n}, \"es6\", \"es5\");\n$jscomp.polyfill(\"Promise\", function(NativePromise) {\n  function platformSupportsPromiseRejectionEvents() {\n    return \"undefined\" !== typeof $jscomp.global.PromiseRejectionEvent;\n  }\n  function globalPromiseIsNative() {\n    return $jscomp.global.Promise && -1 !== $jscomp.global.Promise.toString().indexOf(\"[native code]\");\n  }\n  function shouldForcePolyfillPromise() {\n    return ($jscomp.FORCE_POLYFILL_PROMISE || $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION && !platformSupportsPromiseRejectionEvents()) && globalPromiseIsNative();\n  }\n  function AsyncExecutor() {\n    this.batch_ = null;\n  }\n  function isObject(value) {\n    switch(typeof value) {\n      case \"object\":\n        return null != value;\n      case \"function\":\n        return !0;\n      default:\n        return !1;\n    }\n  }\n  function resolvingPromise(opt_value) {\n    return opt_value instanceof PolyfillPromise ? opt_value : new PolyfillPromise(function(resolve, reject) {\n      resolve(opt_value);\n    });\n  }\n  if (NativePromise && !shouldForcePolyfillPromise()) {\n    return NativePromise;\n  }\n  AsyncExecutor.prototype.asyncExecute = function(f) {\n    if (null == this.batch_) {\n      this.batch_ = [];\n      var self = this;\n      this.asyncExecuteFunction(function() {\n        self.executeBatch_();\n      });\n    }\n    this.batch_.push(f);\n  };\n  var nativeSetTimeout = $jscomp.global.setTimeout;\n  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {\n    nativeSetTimeout(f, 0);\n  };\n  AsyncExecutor.prototype.executeBatch_ = function() {\n    for (; this.batch_ && this.batch_.length;) {\n      var executingBatch = this.batch_;\n      this.batch_ = [];\n      for (var i = 0; i < executingBatch.length; ++i) {\n        var f = executingBatch[i];\n        executingBatch[i] = null;\n        try {\n          f();\n        } catch (error) {\n          this.asyncThrow_(error);\n        }\n      }\n    }\n    this.batch_ = null;\n  };\n  AsyncExecutor.prototype.asyncThrow_ = function(exception) {\n    this.asyncExecuteFunction(function() {\n      throw exception;\n    });\n  };\n  var PromiseState = {PENDING:0, FULFILLED:1, REJECTED:2}, PolyfillPromise = function(executor) {\n    this.state_ = PromiseState.PENDING;\n    this.result_ = void 0;\n    this.onSettledCallbacks_ = [];\n    this.isRejectionHandled_ = !1;\n    var resolveAndReject = this.createResolveAndReject_();\n    try {\n      executor(resolveAndReject.resolve, resolveAndReject.reject);\n    } catch (e) {\n      resolveAndReject.reject(e);\n    }\n  };\n  PolyfillPromise.prototype.createResolveAndReject_ = function() {\n    function firstCallWins(method) {\n      return function(x) {\n        alreadyCalled || (alreadyCalled = !0, method.call(thisPromise, x));\n      };\n    }\n    var thisPromise = this, alreadyCalled = !1;\n    return {resolve:firstCallWins(this.resolveTo_), reject:firstCallWins(this.reject_)};\n  };\n  PolyfillPromise.prototype.resolveTo_ = function(value) {\n    value === this ? this.reject_(new TypeError(\"A Promise cannot resolve to itself\")) : value instanceof PolyfillPromise ? this.settleSameAsPromise_(value) : isObject(value) ? this.resolveToNonPromiseObj_(value) : this.fulfill_(value);\n  };\n  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {\n    var thenMethod = void 0;\n    try {\n      thenMethod = obj.then;\n    } catch (error) {\n      this.reject_(error);\n      return;\n    }\n    \"function\" == typeof thenMethod ? this.settleSameAsThenable_(thenMethod, obj) : this.fulfill_(obj);\n  };\n  PolyfillPromise.prototype.reject_ = function(reason) {\n    this.settle_(PromiseState.REJECTED, reason);\n  };\n  PolyfillPromise.prototype.fulfill_ = function(value) {\n    this.settle_(PromiseState.FULFILLED, value);\n  };\n  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {\n    if (this.state_ != PromiseState.PENDING) {\n      throw Error(\"Cannot settle(\" + settledState + \", \" + valueOrReason + \"): Promise already settled in state\" + this.state_);\n    }\n    this.state_ = settledState;\n    this.result_ = valueOrReason;\n    this.state_ === PromiseState.REJECTED && this.scheduleUnhandledRejectionCheck_();\n    this.executeOnSettledCallbacks_();\n  };\n  PolyfillPromise.prototype.scheduleUnhandledRejectionCheck_ = function() {\n    var self = this;\n    nativeSetTimeout(function() {\n      if (self.notifyUnhandledRejection_()) {\n        var nativeConsole = $jscomp.global.console;\n        \"undefined\" !== typeof nativeConsole && nativeConsole.error(self.result_);\n      }\n    }, 1);\n  };\n  PolyfillPromise.prototype.notifyUnhandledRejection_ = function() {\n    if (this.isRejectionHandled_) {\n      return !1;\n    }\n    var NativeCustomEvent = $jscomp.global.CustomEvent, NativeEvent = $jscomp.global.Event, nativeDispatchEvent = $jscomp.global.dispatchEvent;\n    if (\"undefined\" === typeof nativeDispatchEvent) {\n      return !0;\n    }\n    if (\"function\" === typeof NativeCustomEvent) {\n      var event = new NativeCustomEvent(\"unhandledrejection\", {cancelable:!0});\n    } else {\n      \"function\" === typeof NativeEvent ? event = new NativeEvent(\"unhandledrejection\", {cancelable:!0}) : (event = $jscomp.global.document.createEvent(\"CustomEvent\"), event.initCustomEvent(\"unhandledrejection\", !1, !0, event));\n    }\n    event.promise = this;\n    event.reason = this.result_;\n    return nativeDispatchEvent(event);\n  };\n  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {\n    if (null != this.onSettledCallbacks_) {\n      for (var i = 0; i < this.onSettledCallbacks_.length; ++i) {\n        asyncExecutor.asyncExecute(this.onSettledCallbacks_[i]);\n      }\n      this.onSettledCallbacks_ = null;\n    }\n  };\n  var asyncExecutor = new AsyncExecutor();\n  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {\n    var methods = this.createResolveAndReject_();\n    promise.callWhenSettled_(methods.resolve, methods.reject);\n  };\n  PolyfillPromise.prototype.settleSameAsThenable_ = function(thenMethod, thenable) {\n    var methods = this.createResolveAndReject_();\n    try {\n      thenMethod.call(thenable, methods.resolve, methods.reject);\n    } catch (error) {\n      methods.reject(error);\n    }\n  };\n  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {\n    function createCallback(paramF, defaultF) {\n      return \"function\" == typeof paramF ? function(x) {\n        try {\n          resolveChild(paramF(x));\n        } catch (error) {\n          rejectChild(error);\n        }\n      } : defaultF;\n    }\n    var resolveChild, rejectChild, childPromise = new PolyfillPromise(function(resolve, reject) {\n      resolveChild = resolve;\n      rejectChild = reject;\n    });\n    this.callWhenSettled_(createCallback(onFulfilled, resolveChild), createCallback(onRejected, rejectChild));\n    return childPromise;\n  };\n  PolyfillPromise.prototype.catch = function(onRejected) {\n    return this.then(void 0, onRejected);\n  };\n  PolyfillPromise.prototype.callWhenSettled_ = function(onFulfilled, onRejected) {\n    function callback() {\n      switch(thisPromise.state_) {\n        case PromiseState.FULFILLED:\n          onFulfilled(thisPromise.result_);\n          break;\n        case PromiseState.REJECTED:\n          onRejected(thisPromise.result_);\n          break;\n        default:\n          throw Error(\"Unexpected state: \" + thisPromise.state_);\n      }\n    }\n    var thisPromise = this;\n    null == this.onSettledCallbacks_ ? asyncExecutor.asyncExecute(callback) : this.onSettledCallbacks_.push(callback);\n    this.isRejectionHandled_ = !0;\n  };\n  PolyfillPromise.resolve = resolvingPromise;\n  PolyfillPromise.reject = function(opt_reason) {\n    return new PolyfillPromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n  };\n  PolyfillPromise.race = function(thenablesOrValues) {\n    return new PolyfillPromise(function(resolve, reject) {\n      for (var iterator = $jscomp.makeIterator(thenablesOrValues), iterRec = iterator.next(); !iterRec.done; iterRec = iterator.next()) {\n        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);\n      }\n    });\n  };\n  PolyfillPromise.all = function(thenablesOrValues) {\n    var iterator = $jscomp.makeIterator(thenablesOrValues), iterRec = iterator.next();\n    return iterRec.done ? resolvingPromise([]) : new PolyfillPromise(function(resolveAll, rejectAll) {\n      function onFulfilled(i) {\n        return function(ithResult) {\n          resultsArray[i] = ithResult;\n          unresolvedCount--;\n          0 == unresolvedCount && resolveAll(resultsArray);\n        };\n      }\n      var resultsArray = [], unresolvedCount = 0;\n      do {\n        resultsArray.push(void 0), unresolvedCount++, resolvingPromise(iterRec.value).callWhenSettled_(onFulfilled(resultsArray.length - 1), rejectAll), iterRec = iterator.next();\n      } while (!iterRec.done);\n    });\n  };\n  return PolyfillPromise;\n}, \"es6\", \"es3\");\n$jscomp.checkEs6ConformanceViaProxy = function() {\n  try {\n    var proxied = {}, proxy = Object.create(new $jscomp.global.Proxy(proxied, {get:function(target, key, receiver) {\n      return target == proxied && \"q\" == key && receiver == proxy;\n    }}));\n    return !0 === proxy.q;\n  } catch (err) {\n    return !1;\n  }\n};\n$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = !1;\n$jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();\n$jscomp.owns = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n$jscomp.polyfill(\"WeakMap\", function(NativeWeakMap) {\n  function isConformant() {\n    if (!NativeWeakMap || !Object.seal) {\n      return !1;\n    }\n    try {\n      var x = Object.seal({}), y = Object.seal({}), map = new NativeWeakMap([[x, 2], [y, 3]]);\n      if (2 != map.get(x) || 3 != map.get(y)) {\n        return !1;\n      }\n      map.delete(x);\n      map.set(y, 4);\n      return !map.has(x) && 4 == map.get(y);\n    } catch (err) {\n      return !1;\n    }\n  }\n  function WeakMapMembership() {\n  }\n  function isValidKey(key) {\n    var type = typeof key;\n    return \"object\" === type && null !== key || \"function\" === type;\n  }\n  function insert(target) {\n    if (!$jscomp.owns(target, prop)) {\n      var obj = new WeakMapMembership();\n      $jscomp.defineProperty(target, prop, {value:obj});\n    }\n  }\n  function patch(name) {\n    if (!$jscomp.ISOLATE_POLYFILLS) {\n      var prev = Object[name];\n      prev && (Object[name] = function(target) {\n        if (target instanceof WeakMapMembership) {\n          return target;\n        }\n        Object.isExtensible(target) && insert(target);\n        return prev(target);\n      });\n    }\n  }\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeWeakMap && $jscomp.ES6_CONFORMANCE) {\n      return NativeWeakMap;\n    }\n  } else {\n    if (isConformant()) {\n      return NativeWeakMap;\n    }\n  }\n  var prop = \"$jscomp_hidden_\" + Math.random();\n  patch(\"freeze\");\n  patch(\"preventExtensions\");\n  patch(\"seal\");\n  var index = 0, PolyfillWeakMap = function(opt_iterable) {\n    this.id_ = (index += Math.random() + 1).toString();\n    if (opt_iterable) {\n      for (var iter = $jscomp.makeIterator(opt_iterable), entry; !(entry = iter.next()).done;) {\n        var item = entry.value;\n        this.set(item[0], item[1]);\n      }\n    }\n  };\n  PolyfillWeakMap.prototype.set = function(key, value) {\n    if (!isValidKey(key)) {\n      throw Error(\"Invalid WeakMap key\");\n    }\n    insert(key);\n    if (!$jscomp.owns(key, prop)) {\n      throw Error(\"WeakMap key fail: \" + key);\n    }\n    key[prop][this.id_] = value;\n    return this;\n  };\n  PolyfillWeakMap.prototype.get = function(key) {\n    return isValidKey(key) && $jscomp.owns(key, prop) ? key[prop][this.id_] : void 0;\n  };\n  PolyfillWeakMap.prototype.has = function(key) {\n    return isValidKey(key) && $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_);\n  };\n  PolyfillWeakMap.prototype.delete = function(key) {\n    return isValidKey(key) && $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_) ? delete key[prop][this.id_] : !1;\n  };\n  return PolyfillWeakMap;\n}, \"es6\", \"es3\");\n$jscomp.MapEntry = function() {\n};\n$jscomp.polyfill(\"Map\", function(NativeMap) {\n  function isConformant() {\n    if ($jscomp.ASSUME_NO_NATIVE_MAP || !NativeMap || \"function\" != typeof NativeMap || !NativeMap.prototype.entries || \"function\" != typeof Object.seal) {\n      return !1;\n    }\n    try {\n      var key = Object.seal({x:4}), map = new NativeMap($jscomp.makeIterator([[key, \"s\"]]));\n      if (\"s\" != map.get(key) || 1 != map.size || map.get({x:4}) || map.set({x:4}, \"t\") != map || 2 != map.size) {\n        return !1;\n      }\n      var iter = map.entries(), item = iter.next();\n      if (item.done || item.value[0] != key || \"s\" != item.value[1]) {\n        return !1;\n      }\n      item = iter.next();\n      return item.done || 4 != item.value[0].x || \"t\" != item.value[1] || !iter.next().done ? !1 : !0;\n    } catch (err) {\n      return !1;\n    }\n  }\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeMap && $jscomp.ES6_CONFORMANCE) {\n      return NativeMap;\n    }\n  } else {\n    if (isConformant()) {\n      return NativeMap;\n    }\n  }\n  var idMap = new WeakMap(), PolyfillMap = function(opt_iterable) {\n    this.data_ = {};\n    this.head_ = createHead();\n    this.size = 0;\n    if (opt_iterable) {\n      for (var iter = $jscomp.makeIterator(opt_iterable), entry; !(entry = iter.next()).done;) {\n        var item = entry.value;\n        this.set(item[0], item[1]);\n      }\n    }\n  };\n  PolyfillMap.prototype.set = function(key, value) {\n    key = 0 === key ? 0 : key;\n    var r = maybeGetEntry(this, key);\n    r.list || (r.list = this.data_[r.id] = []);\n    r.entry ? r.entry.value = value : (r.entry = {next:this.head_, previous:this.head_.previous, head:this.head_, key:key, value:value,}, r.list.push(r.entry), this.head_.previous.next = r.entry, this.head_.previous = r.entry, this.size++);\n    return this;\n  };\n  PolyfillMap.prototype.delete = function(key) {\n    var r = maybeGetEntry(this, key);\n    return r.entry && r.list ? (r.list.splice(r.index, 1), r.list.length || delete this.data_[r.id], r.entry.previous.next = r.entry.next, r.entry.next.previous = r.entry.previous, r.entry.head = null, this.size--, !0) : !1;\n  };\n  PolyfillMap.prototype.clear = function() {\n    this.data_ = {};\n    this.head_ = this.head_.previous = createHead();\n    this.size = 0;\n  };\n  PolyfillMap.prototype.has = function(key) {\n    return !!maybeGetEntry(this, key).entry;\n  };\n  PolyfillMap.prototype.get = function(key) {\n    var entry = maybeGetEntry(this, key).entry;\n    return entry && entry.value;\n  };\n  PolyfillMap.prototype.entries = function() {\n    return makeIterator(this, function(entry) {\n      return [entry.key, entry.value];\n    });\n  };\n  PolyfillMap.prototype.keys = function() {\n    return makeIterator(this, function(entry) {\n      return entry.key;\n    });\n  };\n  PolyfillMap.prototype.values = function() {\n    return makeIterator(this, function(entry) {\n      return entry.value;\n    });\n  };\n  PolyfillMap.prototype.forEach = function(callback, opt_thisArg) {\n    for (var iter = this.entries(), item; !(item = iter.next()).done;) {\n      var entry = item.value;\n      callback.call(opt_thisArg, entry[1], entry[0], this);\n    }\n  };\n  PolyfillMap.prototype[Symbol.iterator] = PolyfillMap.prototype.entries;\n  var maybeGetEntry = function(map, key) {\n    var id = getId(key), list = map.data_[id];\n    if (list && $jscomp.owns(map.data_, id)) {\n      for (var index = 0; index < list.length; index++) {\n        var entry = list[index];\n        if (key !== key && entry.key !== entry.key || key === entry.key) {\n          return {id:id, list:list, index:index, entry:entry};\n        }\n      }\n    }\n    return {id:id, list:list, index:-1, entry:void 0};\n  }, makeIterator = function(map, func) {\n    var entry = map.head_;\n    return $jscomp.iteratorPrototype(function() {\n      if (entry) {\n        for (; entry.head != map.head_;) {\n          entry = entry.previous;\n        }\n        for (; entry.next != entry.head;) {\n          return entry = entry.next, {done:!1, value:func(entry)};\n        }\n        entry = null;\n      }\n      return {done:!0, value:void 0};\n    });\n  }, createHead = function() {\n    var head = {};\n    return head.previous = head.next = head.head = head;\n  }, mapIndex = 0, getId = function(obj) {\n    var type = obj && typeof obj;\n    if (\"object\" == type || \"function\" == type) {\n      if (!idMap.has(obj)) {\n        var id = \"\" + ++mapIndex;\n        idMap.set(obj, id);\n        return id;\n      }\n      return idMap.get(obj);\n    }\n    return \"p_\" + obj;\n  };\n  return PolyfillMap;\n}, \"es6\", \"es3\");\n$jscomp.findInternal = function(array, callback, thisArg) {\n  array instanceof String && (array = String(array));\n  for (var len = array.length, i = 0; i < len; i++) {\n    var value = array[i];\n    if (callback.call(thisArg, value, i, array)) {\n      return {i:i, v:value};\n    }\n  }\n  return {i:-1, v:void 0};\n};\n$jscomp.polyfill(\"Array.prototype.find\", function(orig) {\n  return orig ? orig : function(callback, opt_thisArg) {\n    return $jscomp.findInternal(this, callback, opt_thisArg).v;\n  };\n}, \"es6\", \"es3\");\n$jscomp.checkStringArgs = function(thisArg, arg, func) {\n  if (null == thisArg) {\n    throw new TypeError(\"The 'this' value for String.prototype.\" + func + \" must not be null or undefined\");\n  }\n  if (arg instanceof RegExp) {\n    throw new TypeError(\"First argument to String.prototype.\" + func + \" must not be a regular expression\");\n  }\n  return thisArg + \"\";\n};\n$jscomp.polyfill(\"String.prototype.repeat\", function(orig) {\n  return orig ? orig : function(copies) {\n    var string = $jscomp.checkStringArgs(this, null, \"repeat\");\n    if (0 > copies || 1342177279 < copies) {\n      throw new RangeError(\"Invalid count value\");\n    }\n    copies |= 0;\n    for (var result = \"\"; copies;) {\n      if (copies & 1 && (result += string), copies >>>= 1) {\n        string += string;\n      }\n    }\n    return result;\n  };\n}, \"es6\", \"es3\");\n$jscomp.iteratorFromArray = function(array, transform) {\n  array instanceof String && (array += \"\");\n  var i = 0, done = !1, iter = {next:function() {\n    if (!done && i < array.length) {\n      var index = i++;\n      return {value:transform(index, array[index]), done:!1};\n    }\n    done = !0;\n    return {done:!0, value:void 0};\n  }};\n  iter[Symbol.iterator] = function() {\n    return iter;\n  };\n  return iter;\n};\n$jscomp.polyfill(\"Array.prototype.keys\", function(orig) {\n  return orig ? orig : function() {\n    return $jscomp.iteratorFromArray(this, function(i) {\n      return i;\n    });\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Array.from\", function(orig) {\n  return orig ? orig : function(arrayLike, opt_mapFn, opt_thisArg) {\n    opt_mapFn = null != opt_mapFn ? opt_mapFn : function(x) {\n      return x;\n    };\n    var result = [], iteratorFunction = \"undefined\" != typeof Symbol && Symbol.iterator && arrayLike[Symbol.iterator];\n    if (\"function\" == typeof iteratorFunction) {\n      arrayLike = iteratorFunction.call(arrayLike);\n      for (var next, k = 0; !(next = arrayLike.next()).done;) {\n        result.push(opt_mapFn.call(opt_thisArg, next.value, k++));\n      }\n    } else {\n      for (var len = arrayLike.length, i = 0; i < len; i++) {\n        result.push(opt_mapFn.call(opt_thisArg, arrayLike[i], i));\n      }\n    }\n    return result;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Array.prototype.values\", function(orig) {\n  return orig ? orig : function() {\n    return $jscomp.iteratorFromArray(this, function(k, v) {\n      return v;\n    });\n  };\n}, \"es8\", \"es3\");\n$jscomp.polyfill(\"Object.setPrototypeOf\", function(orig) {\n  return orig || $jscomp.setPrototypeOf;\n}, \"es6\", \"es5\");\n$jscomp.assign = $jscomp.TRUST_ES6_POLYFILLS && \"function\" == typeof Object.assign ? Object.assign : function(target, var_args) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    if (source) {\n      for (var key in source) {\n        $jscomp.owns(source, key) && (target[key] = source[key]);\n      }\n    }\n  }\n  return target;\n};\n$jscomp.polyfill(\"Object.assign\", function(orig) {\n  return orig || $jscomp.assign;\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"String.prototype.endsWith\", function(orig) {\n  return orig ? orig : function(searchString, opt_position) {\n    var string = $jscomp.checkStringArgs(this, searchString, \"endsWith\");\n    searchString += \"\";\n    void 0 === opt_position && (opt_position = string.length);\n    for (var i = Math.max(0, Math.min(opt_position | 0, string.length)), j = searchString.length; 0 < j && 0 < i;) {\n      if (string[--i] != searchString[--j]) {\n        return !1;\n      }\n    }\n    return 0 >= j;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"String.prototype.startsWith\", function(orig) {\n  return orig ? orig : function(searchString, opt_position) {\n    var string = $jscomp.checkStringArgs(this, searchString, \"startsWith\");\n    searchString += \"\";\n    for (var strLen = string.length, searchLen = searchString.length, i = Math.max(0, Math.min(opt_position | 0, string.length)), j = 0; j < searchLen && i < strLen;) {\n      if (string[i++] != searchString[j++]) {\n        return !1;\n      }\n    }\n    return j >= searchLen;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Number.isFinite\", function(orig) {\n  return orig ? orig : function(x) {\n    return \"number\" !== typeof x ? !1 : !isNaN(x) && Infinity !== x && -Infinity !== x;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Object.entries\", function(orig) {\n  return orig ? orig : function(obj) {\n    var result = [], key;\n    for (key in obj) {\n      $jscomp.owns(obj, key) && result.push([key, obj[key]]);\n    }\n    return result;\n  };\n}, \"es8\", \"es3\");\n$jscomp.polyfill(\"Object.is\", function(orig) {\n  return orig ? orig : function(left, right) {\n    return left === right ? 0 !== left || 1 / left === 1 / right : left !== left && right !== right;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Array.prototype.includes\", function(orig) {\n  return orig ? orig : function(searchElement, opt_fromIndex) {\n    var array = this;\n    array instanceof String && (array = String(array));\n    var len = array.length, i = opt_fromIndex || 0;\n    for (0 > i && (i = Math.max(i + len, 0)); i < len; i++) {\n      var element = array[i];\n      if (element === searchElement || Object.is(element, searchElement)) {\n        return !0;\n      }\n    }\n    return !1;\n  };\n}, \"es7\", \"es3\");\n$jscomp.polyfill(\"String.prototype.includes\", function(orig) {\n  return orig ? orig : function(searchString, opt_position) {\n    return -1 !== $jscomp.checkStringArgs(this, searchString, \"includes\").indexOf(searchString, opt_position || 0);\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"String.prototype.trimLeft\", function(orig) {\n  function polyfill() {\n    return this.replace(/^[\\s\\xa0]+/, \"\");\n  }\n  return orig || polyfill;\n}, \"es_2019\", \"es3\");\n$jscomp.polyfill(\"Array.prototype.entries\", function(orig) {\n  return orig ? orig : function() {\n    return $jscomp.iteratorFromArray(this, function(i, v) {\n      return [i, v];\n    });\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Set\", function(NativeSet) {\n  function isConformant() {\n    if ($jscomp.ASSUME_NO_NATIVE_SET || !NativeSet || \"function\" != typeof NativeSet || !NativeSet.prototype.entries || \"function\" != typeof Object.seal) {\n      return !1;\n    }\n    try {\n      var value = Object.seal({x:4}), set = new NativeSet($jscomp.makeIterator([value]));\n      if (!set.has(value) || 1 != set.size || set.add(value) != set || 1 != set.size || set.add({x:4}) != set || 2 != set.size) {\n        return !1;\n      }\n      var iter = set.entries(), item = iter.next();\n      if (item.done || item.value[0] != value || item.value[1] != value) {\n        return !1;\n      }\n      item = iter.next();\n      return item.done || item.value[0] == value || 4 != item.value[0].x || item.value[1] != item.value[0] ? !1 : iter.next().done;\n    } catch (err) {\n      return !1;\n    }\n  }\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeSet && $jscomp.ES6_CONFORMANCE) {\n      return NativeSet;\n    }\n  } else {\n    if (isConformant()) {\n      return NativeSet;\n    }\n  }\n  var PolyfillSet = function(opt_iterable) {\n    this.map_ = new Map();\n    if (opt_iterable) {\n      for (var iter = $jscomp.makeIterator(opt_iterable), entry; !(entry = iter.next()).done;) {\n        this.add(entry.value);\n      }\n    }\n    this.size = this.map_.size;\n  };\n  PolyfillSet.prototype.add = function(value) {\n    value = 0 === value ? 0 : value;\n    this.map_.set(value, value);\n    this.size = this.map_.size;\n    return this;\n  };\n  PolyfillSet.prototype.delete = function(value) {\n    var result = this.map_.delete(value);\n    this.size = this.map_.size;\n    return result;\n  };\n  PolyfillSet.prototype.clear = function() {\n    this.map_.clear();\n    this.size = 0;\n  };\n  PolyfillSet.prototype.has = function(value) {\n    return this.map_.has(value);\n  };\n  PolyfillSet.prototype.entries = function() {\n    return this.map_.entries();\n  };\n  PolyfillSet.prototype.values = function() {\n    return this.map_.values();\n  };\n  PolyfillSet.prototype.keys = PolyfillSet.prototype.values;\n  PolyfillSet.prototype[Symbol.iterator] = PolyfillSet.prototype.values;\n  PolyfillSet.prototype.forEach = function(callback, opt_thisArg) {\n    var set = this;\n    this.map_.forEach(function(value) {\n      return callback.call(opt_thisArg, value, value, set);\n    });\n  };\n  return PolyfillSet;\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Object.values\", function(orig) {\n  return orig ? orig : function(obj) {\n    var result = [], key;\n    for (key in obj) {\n      $jscomp.owns(obj, key) && result.push(obj[key]);\n    }\n    return result;\n  };\n}, \"es8\", \"es3\");\n$jscomp.stringPadding = function(padString, padLength) {\n  var padding = void 0 !== padString ? String(padString) : \" \";\n  return 0 < padLength && padding ? padding.repeat(Math.ceil(padLength / padding.length)).substring(0, padLength) : \"\";\n};\n$jscomp.polyfill(\"String.prototype.padStart\", function(orig) {\n  return orig ? orig : function(targetLength, opt_padString) {\n    var string = $jscomp.checkStringArgs(this, null, \"padStart\");\n    return $jscomp.stringPadding(opt_padString, targetLength - string.length) + string;\n  };\n}, \"es8\", \"es3\");\nvar goog = goog || {};\ngoog.global = this || self;\ngoog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {\n  var parts = name.split(\".\"), cur = objectToExportTo || goog.global;\n  parts[0] in cur || \"undefined\" == typeof cur.execScript || cur.execScript(\"var \" + parts[0]);\n  for (var part; parts.length && (part = parts.shift());) {\n    if (parts.length || void 0 === object) {\n      cur = cur[part] && cur[part] !== Object.prototype[part] ? cur[part] : cur[part] = {};\n    } else {\n      if (!overwriteImplicit && goog.isObject(object) && goog.isObject(cur[part])) {\n        for (var prop in object) {\n          object.hasOwnProperty(prop) && (cur[part][prop] = object[prop]);\n        }\n      } else {\n        cur[part] = object;\n      }\n    }\n  }\n};\ngoog.define = function(name, defaultValue) {\n  var defines, uncompiledDefines;\n  return defaultValue;\n};\ngoog.FEATURESET_YEAR = 2012;\ngoog.DEBUG = !0;\ngoog.LOCALE = \"en\";\ngoog.getLocale = function() {\n  return goog.LOCALE;\n};\ngoog.TRUSTED_SITE = !0;\ngoog.DISALLOW_TEST_ONLY_CODE = !goog.DEBUG;\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw Error(\"goog.provide cannot be used within a module.\");\n  }\n  goog.constructNamespace_(name);\n};\ngoog.constructNamespace_ = function(name, object, overwriteImplicit) {\n  var namespace;\n  goog.exportPath_(name, object, overwriteImplicit);\n};\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\ngoog.getScriptNonce_ = function(opt_window) {\n  var doc = (opt_window || goog.global).document, script = doc.querySelector && doc.querySelector(\"script[nonce]\");\n  if (script) {\n    var nonce = script.nonce || script.getAttribute(\"nonce\");\n    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return \"\";\n};\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\ngoog.module = function(name) {\n  if (\"string\" !== typeof name || !name || -1 == name.search(goog.VALID_MODULE_RE_)) {\n    throw Error(\"Invalid module identifier\");\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw Error(\"Module \" + name + \" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw Error(\"goog.module may only be called once per module.\");\n  }\n  goog.moduleLoaderState_.moduleName = name;\n};\ngoog.module.get = function(name) {\n  return goog.module.getInternal_(name);\n};\ngoog.module.getInternal_ = function(name) {\n  var ns;\n  return null;\n};\ngoog.ModuleType = {ES6:\"es6\", GOOG:\"goog\"};\ngoog.moduleLoaderState_ = null;\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\ngoog.isInEs6ModuleLoader_ = function() {\n  if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6) {\n    return !0;\n  }\n  var jscomp = goog.global.$jscomp;\n  return jscomp ? \"function\" != typeof jscomp.getCurrentModulePath ? !1 : !!jscomp.getCurrentModulePath() : !1;\n};\ngoog.module.declareLegacyNamespace = function() {\n  goog.moduleLoaderState_.declareLegacyNamespace = !0;\n};\ngoog.declareModuleId = function(namespace) {\n  if (goog.moduleLoaderState_) {\n    goog.moduleLoaderState_.moduleName = namespace;\n  } else {\n    var jscomp = goog.global.$jscomp;\n    if (!jscomp || \"function\" != typeof jscomp.getCurrentModulePath) {\n      throw Error('Module with namespace \"' + namespace + '\" has been loaded incorrectly.');\n    }\n    var exports = jscomp.require(jscomp.getCurrentModulePath());\n    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};\n  }\n};\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    throw opt_message = opt_message || \"\", Error(\"Importing test-only code into non-debug environment\" + (opt_message ? \": \" + opt_message : \".\"));\n  }\n};\ngoog.forwardDeclare = function(name) {\n};\ngoog.getObjectByName = function(name, opt_obj) {\n  for (var parts = name.split(\".\"), cur = opt_obj || goog.global, i = 0; i < parts.length; i++) {\n    if (cur = cur[parts[i]], null == cur) {\n      return null;\n    }\n  }\n  return cur;\n};\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n};\ngoog.ENABLE_DEBUG_LOADER = !0;\ngoog.logToConsole_ = function(msg) {\n  goog.global.console && goog.global.console.error(msg);\n};\ngoog.require = function(namespace) {\n  var moduleLoaderState;\n};\ngoog.requireType = function(namespace) {\n  return {};\n};\ngoog.basePath = \"\";\ngoog.nullFunction = function() {\n};\ngoog.abstractMethod = function() {\n  throw Error(\"unimplemented abstract method\");\n};\ngoog.addSingletonGetter = function(ctor) {\n  ctor.instance_ = void 0;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor);\n    return ctor.instance_ = new ctor();\n  };\n};\ngoog.instantiatedSingletons_ = [];\ngoog.LOAD_MODULE_USING_EVAL = !0;\ngoog.SEAL_MODULE_EXPORTS = goog.DEBUG;\ngoog.loadedModules_ = {};\ngoog.DEPENDENCIES_ENABLED = !1;\ngoog.TRANSPILE = \"detect\";\ngoog.ASSUME_ES_MODULES_TRANSPILED = !1;\ngoog.TRANSPILE_TO_LANGUAGE = \"\";\ngoog.TRANSPILER = \"transpile.js\";\ngoog.TRUSTED_TYPES_POLICY_NAME = \"goog\";\ngoog.hasBadLetScoping = null;\ngoog.loadModule = function(moduleDef) {\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {moduleName:\"\", declareLegacyNamespace:!1, type:goog.ModuleType.GOOG};\n    var origExports = {}, exports = origExports;\n    if (\"function\" === typeof moduleDef) {\n      exports = moduleDef.call(void 0, exports);\n    } else {\n      if (\"string\" === typeof moduleDef) {\n        exports = goog.loadModuleFromSource_.call(void 0, exports, moduleDef);\n      } else {\n        throw Error(\"Invalid module definition\");\n      }\n    }\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (\"string\" === typeof moduleName && moduleName) {\n      goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(moduleName, exports, origExports !== exports) : goog.SEAL_MODULE_EXPORTS && Object.seal && \"object\" == typeof exports && null != exports && Object.seal(exports), goog.loadedModules_[moduleName] = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};\n    } else {\n      throw Error('Invalid module name \"' + moduleName + '\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\ngoog.loadModuleFromSource_ = function(exports, JSCompiler_OptimizeArgumentsArray_p0) {\n  eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(JSCompiler_OptimizeArgumentsArray_p0));\n  return exports;\n};\ngoog.normalizePath_ = function(path) {\n  for (var components = path.split(\"/\"), i = 0; i < components.length;) {\n    \".\" == components[i] ? components.splice(i, 1) : i && \"..\" == components[i] && components[i - 1] && \"..\" != components[i - 1] ? components.splice(--i, 2) : i++;\n  }\n  return components.join(\"/\");\n};\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  }\n  try {\n    var xhr = new goog.global.XMLHttpRequest();\n    xhr.open(\"get\", src, !1);\n    xhr.send();\n    return 0 == xhr.status || 200 == xhr.status ? xhr.responseText : null;\n  } catch (err) {\n    return null;\n  }\n};\ngoog.transpile_ = function(code$jscomp$0, path$jscomp$0, target) {\n  var jscomp = goog.global.$jscomp;\n  jscomp || (goog.global.$jscomp = jscomp = {});\n  var transpile = jscomp.transpile;\n  if (!transpile) {\n    var transpilerPath = goog.basePath + goog.TRANSPILER, transpilerCode = goog.loadFileSync_(transpilerPath);\n    if (transpilerCode) {\n      (function() {\n        (0,eval)(transpilerCode + \"\\n//# sourceURL=\" + transpilerPath);\n      }).call(goog.global);\n      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {\n        throw Error('The transpiler did not properly export the \"transpile\" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));\n      }\n      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;\n      jscomp = goog.global.$jscomp;\n      transpile = jscomp.transpile;\n    }\n  }\n  if (!transpile) {\n    var suffix = \" requires transpilation but no transpiler was found.\";\n    suffix += ' Please add \"//javascript/closure:transpiler\" as a data dependency to ensure it is included.';\n    transpile = jscomp.transpile = function(code, path) {\n      goog.logToConsole_(path + suffix);\n      return code;\n    };\n  }\n  return transpile(code$jscomp$0, path$jscomp$0, target);\n};\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  return \"object\" != s ? s : value ? Array.isArray(value) ? \"array\" : s : \"null\";\n};\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  return \"array\" == type || \"object\" == type && \"number\" == typeof val.length;\n};\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && \"function\" == typeof val.getFullYear;\n};\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return \"object\" == type && null != val || \"function\" == type;\n};\ngoog.getUid = function(obj) {\n  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) && obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\ngoog.removeUid = function(obj) {\n  null !== obj && \"removeAttribute\" in obj && obj.removeAttribute(goog.UID_PROPERTY_);\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\ngoog.UID_PROPERTY_ = \"closure_uid_\" + (1e9 * Math.random() >>> 0);\ngoog.uidCounter_ = 0;\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (\"object\" == type || \"array\" == type) {\n    if (\"function\" === typeof obj.clone) {\n      return obj.clone();\n    }\n    if (\"undefined\" !== typeof Map && obj instanceof Map) {\n      return new Map(obj);\n    }\n    if (\"undefined\" !== typeof Set && obj instanceof Set) {\n      return new Set(obj);\n    }\n    var clone = \"array\" == type ? [] : {}, key;\n    for (key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n  return obj;\n};\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return fn.call.apply(fn.bind, arguments);\n};\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw Error();\n  }\n  if (2 < arguments.length) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n  }\n  return function() {\n    return fn.apply(selfObj, arguments);\n  };\n};\ngoog.bind = function(fn, selfObj, var_args) {\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\n  return goog.bind.apply(null, arguments);\n};\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n};\ngoog.now = function() {\n  return Date.now();\n};\ngoog.globalEval = function(script) {\n  (0,eval)(script);\n};\ngoog.getCssName = function(className, opt_modifier) {\n  if (\".\" == String(className).charAt(0)) {\n    throw Error('className passed in goog.getCssName must not start with \".\". You passed: ' + className);\n  }\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  }, renameByParts = function(cssName) {\n    for (var parts = cssName.split(\"-\"), mapped = [], i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join(\"-\");\n  };\n  var rename = goog.cssNameMapping_ ? \"BY_WHOLE\" == goog.cssNameMappingStyle_ ? getMapping : renameByParts : function(a) {\n    return a;\n  };\n  var result = opt_modifier ? className + \"-\" + rename(opt_modifier) : rename(className);\n  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(result) : result;\n};\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\ngoog.getMsg = function(str, opt_values, opt_options) {\n  opt_options && opt_options.html && (str = str.replace(/</g, \"&lt;\"));\n  opt_options && opt_options.unescapeHtmlEntities && (str = str.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"').replace(/&amp;/g, \"&\"));\n  opt_values && (str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n    return null != opt_values && key in opt_values ? opt_values[key] : match;\n  }));\n  return str;\n};\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\ngoog.exportSymbol = function(publicPath, object, objectToExportTo) {\n  goog.exportPath_(publicPath, object, !0, objectToExportTo);\n};\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\ngoog.inherits = function(childCtor, parentCtor) {\n  function tempCtor() {\n  }\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  childCtor.prototype.constructor = childCtor;\n  childCtor.base = function(me, methodName, var_args) {\n    for (var args = Array(arguments.length - 2), i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw Error(\"goog.scope is not supported within a module.\");\n  }\n  fn.call(goog.global);\n};\ngoog.defineClass = function(superClass, def) {\n  var constructor = def.constructor, statics = def.statics;\n  constructor && constructor != Object.prototype.constructor || (constructor = function() {\n    throw Error(\"cannot instantiate an interface (no constructor defined).\");\n  });\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  superClass && goog.inherits(cls, superClass);\n  delete def.constructor;\n  delete def.statics;\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  null != statics && (statics instanceof Function ? statics(cls) : goog.defineClass.applyProperties_(cls, statics));\n  return cls;\n};\ngoog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  return goog.defineClass.SEAL_CLASS_INSTANCES ? function() {\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n    return instance;\n  } : ctr;\n};\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.defineClass.applyProperties_ = function(target, source) {\n  for (var key in source) {\n    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n  }\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n  }\n};\ngoog.identity_ = function(s) {\n  return s;\n};\ngoog.createTrustedTypesPolicy = function(name) {\n  var policy = null, policyFactory = goog.global.trustedTypes;\n  if (!policyFactory || !policyFactory.createPolicy) {\n    return policy;\n  }\n  try {\n    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_});\n  } catch (e) {\n    goog.logToConsole_(e.message);\n  }\n  return policy;\n};\nfunction module$contents$goog$dispose_dispose(obj) {\n  obj && \"function\" == typeof obj.dispose && obj.dispose();\n}\ngoog.dispose = module$contents$goog$dispose_dispose;\nfunction module$contents$goog$disposeAll_disposeAll(var_args) {\n  for (var i = 0, len = arguments.length; i < len; ++i) {\n    var disposable = arguments[i];\n    goog.isArrayLike(disposable) ? module$contents$goog$disposeAll_disposeAll.apply(null, disposable) : module$contents$goog$dispose_dispose(disposable);\n  }\n}\ngoog.disposeAll = module$contents$goog$disposeAll_disposeAll;\ngoog.disposable = {};\ngoog.disposable.IDisposable = function() {\n};\ngoog.Disposable = function() {\n  goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF && (goog.Disposable.INCLUDE_STACK_ON_CREATION && (this.creationStack = Error().stack), goog.Disposable.instances_[goog.getUid(this)] = this);\n  this.disposed_ = this.disposed_;\n  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;\n};\ngoog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};\ngoog.Disposable.MONITORING_MODE = 0;\ngoog.Disposable.INCLUDE_STACK_ON_CREATION = !0;\ngoog.Disposable.instances_ = {};\ngoog.Disposable.getUndisposedObjects = function() {\n  var ret = [], id;\n  for (id in goog.Disposable.instances_) {\n    goog.Disposable.instances_.hasOwnProperty(id) && ret.push(goog.Disposable.instances_[Number(id)]);\n  }\n  return ret;\n};\ngoog.Disposable.clearUndisposedObjects = function() {\n  goog.Disposable.instances_ = {};\n};\ngoog.Disposable.prototype.disposed_ = !1;\ngoog.Disposable.prototype.isDisposed = function() {\n  return this.disposed_;\n};\ngoog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;\ngoog.Disposable.prototype.dispose = function() {\n  if (!this.disposed_ && (this.disposed_ = !0, this.disposeInternal(), goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF)) {\n    var uid = goog.getUid(this);\n    if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {\n      throw Error(this + \" did not call the goog.Disposable base constructor or was disposed of after a clearUndisposedObjects call\");\n    }\n    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF && this.onDisposeCallbacks_ && 0 < this.onDisposeCallbacks_.length) {\n      throw Error(this + \" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");\n    }\n    delete goog.Disposable.instances_[uid];\n  }\n};\ngoog.Disposable.prototype.registerDisposable = function(disposable) {\n  this.addOnDisposeCallback(goog.partial(module$contents$goog$dispose_dispose, disposable));\n};\ngoog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {\n  this.disposed_ ? void 0 !== opt_scope ? callback.call(opt_scope) : callback() : (this.onDisposeCallbacks_ || (this.onDisposeCallbacks_ = []), this.onDisposeCallbacks_.push(void 0 !== opt_scope ? goog.bind(callback, opt_scope) : callback));\n};\ngoog.Disposable.prototype.disposeInternal = function() {\n  if (this.onDisposeCallbacks_) {\n    for (; this.onDisposeCallbacks_.length;) {\n      this.onDisposeCallbacks_.shift()();\n    }\n  }\n};\ngoog.Disposable.isDisposed = function(obj) {\n  return obj && \"function\" == typeof obj.isDisposed ? obj.isDisposed() : !1;\n};\ngoog.events = {};\ngoog.events.EventId = function(eventId) {\n  this.id = eventId;\n};\ngoog.events.EventId.prototype.toString = function() {\n  return this.id;\n};\ngoog.events.Event = function(type, opt_target) {\n  this.type = type instanceof goog.events.EventId ? String(type) : type;\n  this.currentTarget = this.target = opt_target;\n  this.defaultPrevented = this.propagationStopped_ = !1;\n};\ngoog.events.Event.prototype.hasPropagationStopped = function() {\n  return this.propagationStopped_;\n};\ngoog.events.Event.prototype.stopPropagation = function() {\n  this.propagationStopped_ = !0;\n};\ngoog.events.Event.prototype.preventDefault = function() {\n  this.defaultPrevented = !0;\n};\ngoog.events.Event.stopPropagation = function(e) {\n  e.stopPropagation();\n};\ngoog.events.Event.preventDefault = function(e) {\n  e.preventDefault();\n};\ngoog.debug = {};\nfunction module$contents$goog$debug$Error_DebugError(msg, cause) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, module$contents$goog$debug$Error_DebugError);\n  } else {\n    var stack = Error().stack;\n    stack && (this.stack = stack);\n  }\n  msg && (this.message = String(msg));\n  void 0 !== cause && (this.cause = cause);\n  this.reportErrorToServer = !0;\n}\ngoog.inherits(module$contents$goog$debug$Error_DebugError, Error);\nmodule$contents$goog$debug$Error_DebugError.prototype.name = \"CustomError\";\ngoog.debug.Error = module$contents$goog$debug$Error_DebugError;\ngoog.dom = {};\ngoog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};\ngoog.asserts = {};\ngoog.asserts.ENABLE_ASSERTS = goog.DEBUG;\ngoog.asserts.AssertionError = function(messagePattern, messageArgs) {\n  module$contents$goog$debug$Error_DebugError.call(this, goog.asserts.subs_(messagePattern, messageArgs));\n  this.messagePattern = messagePattern;\n};\ngoog.inherits(goog.asserts.AssertionError, module$contents$goog$debug$Error_DebugError);\ngoog.asserts.AssertionError.prototype.name = \"AssertionError\";\ngoog.asserts.DEFAULT_ERROR_HANDLER = function(e) {\n  throw e;\n};\ngoog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\ngoog.asserts.subs_ = function(pattern, subs) {\n  for (var splitParts = pattern.split(\"%s\"), returnString = \"\", subLast = splitParts.length - 1, i = 0; i < subLast; i++) {\n    returnString += splitParts[i] + (i < subs.length ? subs[i] : \"%s\");\n  }\n  return returnString + splitParts[subLast];\n};\ngoog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  var message = \"Assertion failed\";\n  if (givenMessage) {\n    message += \": \" + givenMessage;\n    var args = givenArgs;\n  } else {\n    defaultMessage && (message += \": \" + defaultMessage, args = defaultArgs);\n  }\n  var e = new goog.asserts.AssertionError(\"\" + message, args || []);\n  goog.asserts.errorHandler_(e);\n};\ngoog.asserts.setErrorHandler = function(errorHandler) {\n  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = errorHandler);\n};\ngoog.asserts.assert = function(condition, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && !condition && goog.asserts.doAssertFailure_(\"\", null, opt_message, Array.prototype.slice.call(arguments, 2));\n  return condition;\n};\ngoog.asserts.assertExists = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && null == value && goog.asserts.doAssertFailure_(\"Expected to exist: %s.\", [value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.fail = function(opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\" + (opt_message ? \": \" + opt_message : \"\"), Array.prototype.slice.call(arguments, 1)));\n};\ngoog.asserts.assertNumber = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && \"number\" !== typeof value && goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertString = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && \"string\" !== typeof value && goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertFunction = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && \"function\" !== typeof value && goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertObject = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isObject(value) && goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertArray = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && !Array.isArray(value) && goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertBoolean = function(value, opt_message, var_args) {\n  goog.asserts.ENABLE_ASSERTS && \"boolean\" !== typeof value && goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertElement = function(value, opt_message, var_args) {\n  !goog.asserts.ENABLE_ASSERTS || goog.isObject(value) && value.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {\n  !goog.asserts.ENABLE_ASSERTS || value instanceof type || goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));\n  return value;\n};\ngoog.asserts.assertFinite = function(value, opt_message, var_args) {\n  !goog.asserts.ENABLE_ASSERTS || \"number\" == typeof value && isFinite(value) || goog.asserts.doAssertFailure_(\"Expected %s to be a finite number but it is not.\", [value], opt_message, Array.prototype.slice.call(arguments, 2));\n  return value;\n};\ngoog.asserts.getType_ = function(value) {\n  return value instanceof Function ? value.displayName || value.name || \"unknown type name\" : value instanceof Object ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : null === value ? \"null\" : typeof value;\n};\ngoog.debug.entryPointRegistry = {};\ngoog.debug.entryPointRegistry.EntryPointMonitor = function() {\n};\ngoog.debug.EntryPointMonitor = goog.debug.entryPointRegistry.EntryPointMonitor;\ngoog.debug.entryPointRegistry.refList_ = [];\ngoog.debug.entryPointRegistry.monitors_ = [];\ngoog.debug.entryPointRegistry.monitorsMayExist_ = !1;\ngoog.debug.entryPointRegistry.register = function(callback) {\n  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;\n  if (goog.debug.entryPointRegistry.monitorsMayExist_) {\n    for (var monitors = goog.debug.entryPointRegistry.monitors_, i = 0; i < monitors.length; i++) {\n      callback(goog.bind(monitors[i].wrap, monitors[i]));\n    }\n  }\n};\ngoog.debug.entryPointRegistry.monitorAll = function(monitor) {\n  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;\n  for (var transformer = goog.bind(monitor.wrap, monitor), i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {\n    goog.debug.entryPointRegistry.refList_[i](transformer);\n  }\n  goog.debug.entryPointRegistry.monitors_.push(monitor);\n};\ngoog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {\n  var monitors = goog.debug.entryPointRegistry.monitors_;\n  goog.asserts.assert(monitor == monitors[monitors.length - 1], \"Only the most recent monitor can be unwrapped.\");\n  for (var transformer = goog.bind(monitor.unwrap, monitor), i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {\n    goog.debug.entryPointRegistry.refList_[i](transformer);\n  }\n  monitors.length--;\n};\ngoog.array = {};\ngoog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;\nvar module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;\ngoog.array.ASSUME_NATIVE_FUNCTIONS = module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;\nfunction module$contents$goog$array_peek(array) {\n  return array[array.length - 1];\n}\ngoog.array.peek = module$contents$goog$array_peek;\ngoog.array.last = module$contents$goog$array_peek;\nvar module$contents$goog$array_indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n} : function(arr, obj, opt_fromIndex) {\n  var fromIndex = null == opt_fromIndex ? 0 : 0 > opt_fromIndex ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;\n  if (\"string\" === typeof arr) {\n    return \"string\" !== typeof obj || 1 != obj.length ? -1 : arr.indexOf(obj, fromIndex);\n  }\n  for (var i = fromIndex; i < arr.length; i++) {\n    if (i in arr && arr[i] === obj) {\n      return i;\n    }\n  }\n  return -1;\n};\ngoog.array.indexOf = module$contents$goog$array_indexOf;\nvar module$contents$goog$array_lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.lastIndexOf.call(arr, obj, null == opt_fromIndex ? arr.length - 1 : opt_fromIndex);\n} : function(arr, obj, opt_fromIndex) {\n  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;\n  0 > fromIndex && (fromIndex = Math.max(0, arr.length + fromIndex));\n  if (\"string\" === typeof arr) {\n    return \"string\" !== typeof obj || 1 != obj.length ? -1 : arr.lastIndexOf(obj, fromIndex);\n  }\n  for (var i = fromIndex; 0 <= i; i--) {\n    if (i in arr && arr[i] === obj) {\n      return i;\n    }\n  }\n  return -1;\n};\ngoog.array.lastIndexOf = module$contents$goog$array_lastIndexOf;\nvar module$contents$goog$array_forEach = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  Array.prototype.forEach.call(arr, f, opt_obj);\n} : function(arr, f, opt_obj) {\n  for (var l = arr.length, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = 0; i < l; i++) {\n    i in arr2 && f.call(opt_obj, arr2[i], i, arr);\n  }\n};\ngoog.array.forEach = module$contents$goog$array_forEach;\nfunction module$contents$goog$array_forEachRight(arr, f, opt_obj) {\n  for (var l = arr.length, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = l - 1; 0 <= i; --i) {\n    i in arr2 && f.call(opt_obj, arr2[i], i, arr);\n  }\n}\ngoog.array.forEachRight = module$contents$goog$array_forEachRight;\nvar module$contents$goog$array_filter = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.filter.call(arr, f, opt_obj);\n} : function(arr, f, opt_obj) {\n  for (var l = arr.length, res = [], resLength = 0, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = 0; i < l; i++) {\n    if (i in arr2) {\n      var val = arr2[i];\n      f.call(opt_obj, val, i, arr) && (res[resLength++] = val);\n    }\n  }\n  return res;\n};\ngoog.array.filter = module$contents$goog$array_filter;\nvar module$contents$goog$array_map = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.map.call(arr, f, opt_obj);\n} : function(arr, f, opt_obj) {\n  for (var l = arr.length, res = Array(l), arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = 0; i < l; i++) {\n    i in arr2 && (res[i] = f.call(opt_obj, arr2[i], i, arr));\n  }\n  return res;\n};\ngoog.array.map = module$contents$goog$array_map;\ngoog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  opt_obj && (f = goog.bind(f, opt_obj));\n  return Array.prototype.reduce.call(arr, f, val);\n} : function(arr, f, val$jscomp$0, opt_obj) {\n  var rval = val$jscomp$0;\n  module$contents$goog$array_forEach(arr, function(val, index) {\n    rval = f.call(opt_obj, rval, val, index, arr);\n  });\n  return rval;\n};\ngoog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  goog.asserts.assert(null != f);\n  opt_obj && (f = goog.bind(f, opt_obj));\n  return Array.prototype.reduceRight.call(arr, f, val);\n} : function(arr, f, val$jscomp$0, opt_obj) {\n  var rval = val$jscomp$0;\n  module$contents$goog$array_forEachRight(arr, function(val, index) {\n    rval = f.call(opt_obj, rval, val, index, arr);\n  });\n  return rval;\n};\nvar module$contents$goog$array_some = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.some.call(arr, f, opt_obj);\n} : function(arr, f, opt_obj) {\n  for (var l = arr.length, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = 0; i < l; i++) {\n    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {\n      return !0;\n    }\n  }\n  return !1;\n};\ngoog.array.some = module$contents$goog$array_some;\nvar module$contents$goog$array_every = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.every.call(arr, f, opt_obj);\n} : function(arr, f, opt_obj) {\n  for (var l = arr.length, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = 0; i < l; i++) {\n    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {\n      return !1;\n    }\n  }\n  return !0;\n};\ngoog.array.every = module$contents$goog$array_every;\nfunction module$contents$goog$array_count(arr$jscomp$0, f, opt_obj) {\n  var count = 0;\n  module$contents$goog$array_forEach(arr$jscomp$0, function(element, index, arr) {\n    f.call(opt_obj, element, index, arr) && ++count;\n  }, opt_obj);\n  return count;\n}\ngoog.array.count = module$contents$goog$array_count;\nfunction module$contents$goog$array_find(arr, f, opt_obj) {\n  var i = module$contents$goog$array_findIndex(arr, f, opt_obj);\n  return 0 > i ? null : \"string\" === typeof arr ? arr.charAt(i) : arr[i];\n}\ngoog.array.find = module$contents$goog$array_find;\nfunction module$contents$goog$array_findIndex(arr, f, opt_obj) {\n  for (var l = arr.length, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = 0; i < l; i++) {\n    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\ngoog.array.findIndex = module$contents$goog$array_findIndex;\ngoog.array.findRight = function module$contents$goog$array_findRight(arr, f, opt_obj) {\n  var i = module$contents$goog$array_findIndexRight(arr, f, opt_obj);\n  return 0 > i ? null : \"string\" === typeof arr ? arr.charAt(i) : arr[i];\n};\nfunction module$contents$goog$array_findIndexRight(arr, f, opt_obj) {\n  for (var l = arr.length, arr2 = \"string\" === typeof arr ? arr.split(\"\") : arr, i = l - 1; 0 <= i; i--) {\n    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\ngoog.array.findIndexRight = module$contents$goog$array_findIndexRight;\nfunction module$contents$goog$array_contains(arr, obj) {\n  return 0 <= module$contents$goog$array_indexOf(arr, obj);\n}\ngoog.array.contains = module$contents$goog$array_contains;\nfunction module$contents$goog$array_isEmpty(arr) {\n  return 0 == arr.length;\n}\ngoog.array.isEmpty = module$contents$goog$array_isEmpty;\nfunction module$contents$goog$array_clear(arr) {\n  if (!Array.isArray(arr)) {\n    for (var i = arr.length - 1; 0 <= i; i--) {\n      delete arr[i];\n    }\n  }\n  arr.length = 0;\n}\ngoog.array.clear = module$contents$goog$array_clear;\ngoog.array.insert = function module$contents$goog$array_insert(arr, obj) {\n  module$contents$goog$array_contains(arr, obj) || arr.push(obj);\n};\nfunction module$contents$goog$array_insertAt(arr, obj, opt_i) {\n  module$contents$goog$array_splice(arr, opt_i, 0, obj);\n}\ngoog.array.insertAt = module$contents$goog$array_insertAt;\ngoog.array.insertArrayAt = function module$contents$goog$array_insertArrayAt(arr, elementsToAdd, opt_i) {\n  goog.partial(module$contents$goog$array_splice, arr, opt_i, 0).apply(null, elementsToAdd);\n};\ngoog.array.insertBefore = function module$contents$goog$array_insertBefore(arr, obj, opt_obj2) {\n  var i;\n  2 == arguments.length || 0 > (i = module$contents$goog$array_indexOf(arr, opt_obj2)) ? arr.push(obj) : module$contents$goog$array_insertAt(arr, obj, i);\n};\nfunction module$contents$goog$array_remove(arr, obj) {\n  var i = module$contents$goog$array_indexOf(arr, obj), rv;\n  (rv = 0 <= i) && module$contents$goog$array_removeAt(arr, i);\n  return rv;\n}\ngoog.array.remove = module$contents$goog$array_remove;\nfunction module$contents$goog$array_removeLast(arr, obj) {\n  var i = module$contents$goog$array_lastIndexOf(arr, obj);\n  return 0 <= i ? (module$contents$goog$array_removeAt(arr, i), !0) : !1;\n}\ngoog.array.removeLast = module$contents$goog$array_removeLast;\nfunction module$contents$goog$array_removeAt(arr, i) {\n  goog.asserts.assert(null != arr.length);\n  return 1 == Array.prototype.splice.call(arr, i, 1).length;\n}\ngoog.array.removeAt = module$contents$goog$array_removeAt;\ngoog.array.removeIf = function module$contents$goog$array_removeIf(arr, f, opt_obj) {\n  var i = module$contents$goog$array_findIndex(arr, f, opt_obj);\n  return 0 <= i ? (module$contents$goog$array_removeAt(arr, i), !0) : !1;\n};\ngoog.array.removeAllIf = function module$contents$goog$array_removeAllIf(arr, f, opt_obj) {\n  var removedCount = 0;\n  module$contents$goog$array_forEachRight(arr, function(val, index) {\n    f.call(opt_obj, val, index, arr) && module$contents$goog$array_removeAt(arr, index) && removedCount++;\n  });\n  return removedCount;\n};\nfunction module$contents$goog$array_concat(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n}\ngoog.array.concat = module$contents$goog$array_concat;\ngoog.array.join = function module$contents$goog$array_join(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\nfunction module$contents$goog$array_toArray(object) {\n  var length = object.length;\n  if (0 < length) {\n    for (var rv = Array(length), i = 0; i < length; i++) {\n      rv[i] = object[i];\n    }\n    return rv;\n  }\n  return [];\n}\nvar module$contents$goog$array_clone = goog.array.toArray = module$contents$goog$array_toArray;\ngoog.array.clone = module$contents$goog$array_toArray;\nfunction module$contents$goog$array_extend(arr1, var_args) {\n  for (var i = 1; i < arguments.length; i++) {\n    var arr2 = arguments[i];\n    if (goog.isArrayLike(arr2)) {\n      var len1 = arr1.length || 0, len2 = arr2.length || 0;\n      arr1.length = len1 + len2;\n      for (var j = 0; j < len2; j++) {\n        arr1[len1 + j] = arr2[j];\n      }\n    } else {\n      arr1.push(arr2);\n    }\n  }\n}\ngoog.array.extend = module$contents$goog$array_extend;\nfunction module$contents$goog$array_splice(arr, index, howMany, var_args) {\n  goog.asserts.assert(null != arr.length);\n  return Array.prototype.splice.apply(arr, module$contents$goog$array_slice(arguments, 1));\n}\ngoog.array.splice = module$contents$goog$array_splice;\nfunction module$contents$goog$array_slice(arr, start, opt_end) {\n  goog.asserts.assert(null != arr.length);\n  return 2 >= arguments.length ? Array.prototype.slice.call(arr, start) : Array.prototype.slice.call(arr, start, opt_end);\n}\ngoog.array.slice = module$contents$goog$array_slice;\nfunction module$contents$goog$array_removeDuplicates(arr, opt_rv, opt_hashFn) {\n  for (var returnArray = opt_rv || arr, defaultHashFn = function(item) {\n    return goog.isObject(item) ? \"o\" + goog.getUid(item) : (typeof item).charAt(0) + item;\n  }, hashFn = opt_hashFn || defaultHashFn, cursorInsert = 0, cursorRead = 0, seen = {}; cursorRead < arr.length;) {\n    var current = arr[cursorRead++], key = hashFn(current);\n    Object.prototype.hasOwnProperty.call(seen, key) || (seen[key] = !0, returnArray[cursorInsert++] = current);\n  }\n  returnArray.length = cursorInsert;\n}\ngoog.array.removeDuplicates = module$contents$goog$array_removeDuplicates;\nfunction module$contents$goog$array_binarySearch(arr, target, opt_compareFn) {\n  return module$contents$goog$array_binarySearch_(arr, opt_compareFn || module$contents$goog$array_defaultCompare, !1, target);\n}\ngoog.array.binarySearch = module$contents$goog$array_binarySearch;\ngoog.array.binarySelect = function module$contents$goog$array_binarySelect(arr, evaluator, opt_obj) {\n  return module$contents$goog$array_binarySearch_(arr, evaluator, !0, void 0, opt_obj);\n};\nfunction module$contents$goog$array_binarySearch_(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n  for (var left = 0, right = arr.length, found; left < right;) {\n    var middle = left + (right - left >>> 1), compareResult = void 0;\n    compareResult = isEvaluator ? compareFn.call(opt_selfObj, arr[middle], middle, arr) : compareFn(opt_target, arr[middle]);\n    0 < compareResult ? left = middle + 1 : (right = middle, found = !compareResult);\n  }\n  return found ? left : -left - 1;\n}\nfunction module$contents$goog$array_sort(arr, opt_compareFn) {\n  arr.sort(opt_compareFn || module$contents$goog$array_defaultCompare);\n}\ngoog.array.sort = module$contents$goog$array_sort;\ngoog.array.stableSort = function module$contents$goog$array_stableSort(arr, opt_compareFn) {\n  for (var compArr = Array(arr.length), i = 0; i < arr.length; i++) {\n    compArr[i] = {index:i, value:arr[i]};\n  }\n  var valueCompareFn = opt_compareFn || module$contents$goog$array_defaultCompare;\n  module$contents$goog$array_sort(compArr, function stableCompareFn(obj1, obj2) {\n    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n  });\n  for (var i$28 = 0; i$28 < arr.length; i$28++) {\n    arr[i$28] = compArr[i$28].value;\n  }\n};\nfunction module$contents$goog$array_sortByKey(arr, keyFn, opt_compareFn) {\n  var keyCompareFn = opt_compareFn || module$contents$goog$array_defaultCompare;\n  module$contents$goog$array_sort(arr, function(a, b) {\n    return keyCompareFn(keyFn(a), keyFn(b));\n  });\n}\ngoog.array.sortByKey = module$contents$goog$array_sortByKey;\ngoog.array.sortObjectsByKey = function module$contents$goog$array_sortObjectsByKey(arr, key, opt_compareFn) {\n  module$contents$goog$array_sortByKey(arr, function(obj) {\n    return obj[key];\n  }, opt_compareFn);\n};\nfunction module$contents$goog$array_isSorted(arr, opt_compareFn, opt_strict) {\n  for (var compare = opt_compareFn || module$contents$goog$array_defaultCompare, i = 1; i < arr.length; i++) {\n    var compareResult = compare(arr[i - 1], arr[i]);\n    if (0 < compareResult || 0 == compareResult && opt_strict) {\n      return !1;\n    }\n  }\n  return !0;\n}\ngoog.array.isSorted = module$contents$goog$array_isSorted;\nfunction module$contents$goog$array_equals(arr1, arr2, opt_equalsFn) {\n  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {\n    return !1;\n  }\n  for (var l = arr1.length, equalsFn = opt_equalsFn || module$contents$goog$array_defaultCompareEquality, i = 0; i < l; i++) {\n    if (!equalsFn(arr1[i], arr2[i])) {\n      return !1;\n    }\n  }\n  return !0;\n}\ngoog.array.equals = module$contents$goog$array_equals;\ngoog.array.compare3 = function module$contents$goog$array_compare3(arr1, arr2, opt_compareFn) {\n  for (var compare = opt_compareFn || module$contents$goog$array_defaultCompare, l = Math.min(arr1.length, arr2.length), i = 0; i < l; i++) {\n    var result = compare(arr1[i], arr2[i]);\n    if (0 != result) {\n      return result;\n    }\n  }\n  return module$contents$goog$array_defaultCompare(arr1.length, arr2.length);\n};\nfunction module$contents$goog$array_defaultCompare(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\ngoog.array.defaultCompare = module$contents$goog$array_defaultCompare;\ngoog.array.inverseDefaultCompare = function module$contents$goog$array_inverseDefaultCompare(a, b) {\n  return -module$contents$goog$array_defaultCompare(a, b);\n};\nfunction module$contents$goog$array_defaultCompareEquality(a, b) {\n  return a === b;\n}\ngoog.array.defaultCompareEquality = module$contents$goog$array_defaultCompareEquality;\ngoog.array.binaryInsert = function module$contents$goog$array_binaryInsert(array, value, opt_compareFn) {\n  var index = module$contents$goog$array_binarySearch(array, value, opt_compareFn);\n  return 0 > index ? (module$contents$goog$array_insertAt(array, value, -(index + 1)), !0) : !1;\n};\ngoog.array.binaryRemove = function module$contents$goog$array_binaryRemove(array, value, opt_compareFn) {\n  var index = module$contents$goog$array_binarySearch(array, value, opt_compareFn);\n  return 0 <= index ? module$contents$goog$array_removeAt(array, index) : !1;\n};\ngoog.array.bucket = function module$contents$goog$array_bucket(array, sorter, opt_obj) {\n  for (var buckets = {}, i = 0; i < array.length; i++) {\n    var value = array[i], key = sorter.call(opt_obj, value, i, array);\n    void 0 !== key && (buckets[key] || (buckets[key] = [])).push(value);\n  }\n  return buckets;\n};\ngoog.array.bucketToMap = function module$contents$goog$array_bucketToMap(array, sorter) {\n  for (var buckets = new Map(), i = 0; i < array.length; i++) {\n    var value = array[i], key = sorter(value, i, array);\n    if (void 0 !== key) {\n      var bucket = buckets.get(key);\n      bucket || (bucket = [], buckets.set(key, bucket));\n      bucket.push(value);\n    }\n  }\n  return buckets;\n};\ngoog.array.toObject = function module$contents$goog$array_toObject(arr, keyFunc, opt_obj) {\n  var ret = {};\n  module$contents$goog$array_forEach(arr, function(element, index) {\n    ret[keyFunc.call(opt_obj, element, index, arr)] = element;\n  });\n  return ret;\n};\ngoog.array.toMap = function module$contents$goog$array_toMap(arr, keyFunc) {\n  for (var map = new Map(), i = 0; i < arr.length; i++) {\n    var element = arr[i];\n    map.set(keyFunc(element, i, arr), element);\n  }\n  return map;\n};\nfunction module$contents$goog$array_range(startOrEnd, opt_end, opt_step) {\n  var array = [], start = 0, end = startOrEnd, step = opt_step || 1;\n  void 0 !== opt_end && (start = startOrEnd, end = opt_end);\n  if (0 > step * (end - start)) {\n    return [];\n  }\n  if (0 < step) {\n    for (var i = start; i < end; i += step) {\n      array.push(i);\n    }\n  } else {\n    for (var i$29 = start; i$29 > end; i$29 += step) {\n      array.push(i$29);\n    }\n  }\n  return array;\n}\ngoog.array.range = module$contents$goog$array_range;\nfunction module$contents$goog$array_repeat(value, n) {\n  for (var array = [], i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n}\ngoog.array.repeat = module$contents$goog$array_repeat;\nfunction module$contents$goog$array_flatten(var_args) {\n  for (var result = [], i = 0; i < arguments.length; i++) {\n    var element = arguments[i];\n    if (Array.isArray(element)) {\n      for (var c = 0; c < element.length; c += 8192) {\n        for (var chunk = module$contents$goog$array_slice(element, c, c + 8192), recurseResult = module$contents$goog$array_flatten.apply(null, chunk), r = 0; r < recurseResult.length; r++) {\n          result.push(recurseResult[r]);\n        }\n      }\n    } else {\n      result.push(element);\n    }\n  }\n  return result;\n}\ngoog.array.flatten = module$contents$goog$array_flatten;\ngoog.array.rotate = function module$contents$goog$array_rotate(array, n) {\n  goog.asserts.assert(null != array.length);\n  array.length && (n %= array.length, 0 < n ? Array.prototype.unshift.apply(array, array.splice(-n, n)) : 0 > n && Array.prototype.push.apply(array, array.splice(0, -n)));\n  return array;\n};\ngoog.array.moveItem = function module$contents$goog$array_moveItem(arr, fromIndex, toIndex) {\n  goog.asserts.assert(0 <= fromIndex && fromIndex < arr.length);\n  goog.asserts.assert(0 <= toIndex && toIndex < arr.length);\n  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);\n  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n};\ngoog.array.zip = function module$contents$goog$array_zip(var_args) {\n  if (!arguments.length) {\n    return [];\n  }\n  for (var result = [], minLen = arguments[0].length, i = 1; i < arguments.length; i++) {\n    arguments[i].length < minLen && (minLen = arguments[i].length);\n  }\n  for (var i$30 = 0; i$30 < minLen; i$30++) {\n    for (var value = [], j = 0; j < arguments.length; j++) {\n      value.push(arguments[j][i$30]);\n    }\n    result.push(value);\n  }\n  return result;\n};\ngoog.array.shuffle = function module$contents$goog$array_shuffle(arr, opt_randFn) {\n  for (var randFn = opt_randFn || Math.random, i = arr.length - 1; 0 < i; i--) {\n    var j = Math.floor(randFn() * (i + 1)), tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n};\ngoog.array.copyByIndex = function module$contents$goog$array_copyByIndex(arr, index_arr) {\n  var result = [];\n  module$contents$goog$array_forEach(index_arr, function(index) {\n    result.push(arr[index]);\n  });\n  return result;\n};\ngoog.array.concatMap = function module$contents$goog$array_concatMap(arr, f, opt_obj) {\n  return module$contents$goog$array_concat.apply([], module$contents$goog$array_map(arr, f, opt_obj));\n};\ngoog.debug.errorcontext = {};\ngoog.debug.errorcontext.addErrorContext = function(err, contextKey, contextValue) {\n  err[goog.debug.errorcontext.CONTEXT_KEY_] || (err[goog.debug.errorcontext.CONTEXT_KEY_] = {});\n  err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey] = contextValue;\n};\ngoog.debug.errorcontext.getErrorContext = function(err) {\n  return err[goog.debug.errorcontext.CONTEXT_KEY_] || {};\n};\ngoog.debug.errorcontext.CONTEXT_KEY_ = \"__closure__error__context__984382\";\ngoog.debug.LOGGING_ENABLED = goog.DEBUG;\ngoog.debug.FORCE_SLOPPY_STACKS = !1;\ngoog.debug.CHECK_FOR_THROWN_EVENT = !1;\ngoog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {\n  var target = opt_target || goog.global, oldErrorHandler = target.onerror, retVal = !!opt_cancel;\n  target.onerror = function(message, url, line, opt_col, opt_error) {\n    oldErrorHandler && oldErrorHandler(message, url, line, opt_col, opt_error);\n    logFunc({message:message, fileName:url, line:line, lineNumber:line, col:opt_col, error:opt_error});\n    return retVal;\n  };\n};\ngoog.debug.expose = function(obj, opt_showFn) {\n  if (\"undefined\" == typeof obj) {\n    return \"undefined\";\n  }\n  if (null == obj) {\n    return \"NULL\";\n  }\n  var str = [], x;\n  for (x in obj) {\n    if (opt_showFn || \"function\" !== typeof obj[x]) {\n      var s = x + \" = \";\n      try {\n        s += obj[x];\n      } catch (e) {\n        s += \"*** \" + e + \" ***\";\n      }\n      str.push(s);\n    }\n  }\n  return str.join(\"\\n\");\n};\ngoog.debug.deepExpose = function(obj$jscomp$0, opt_showFn) {\n  var str$jscomp$0 = [], uidsToCleanup = [], ancestorUids = {}, helper = function(obj, space) {\n    var nestspace = space + \"  \", indentMultiline = function(str) {\n      return str.replace(/\\n/g, \"\\n\" + space);\n    };\n    try {\n      if (void 0 === obj) {\n        str$jscomp$0.push(\"undefined\");\n      } else {\n        if (null === obj) {\n          str$jscomp$0.push(\"NULL\");\n        } else {\n          if (\"string\" === typeof obj) {\n            str$jscomp$0.push('\"' + indentMultiline(obj) + '\"');\n          } else {\n            if (\"function\" === typeof obj) {\n              str$jscomp$0.push(indentMultiline(String(obj)));\n            } else {\n              if (goog.isObject(obj)) {\n                goog.hasUid(obj) || uidsToCleanup.push(obj);\n                var uid = goog.getUid(obj);\n                if (ancestorUids[uid]) {\n                  str$jscomp$0.push(\"*** reference loop detected (id=\" + uid + \") ***\");\n                } else {\n                  ancestorUids[uid] = !0;\n                  str$jscomp$0.push(\"{\");\n                  for (var x in obj) {\n                    if (opt_showFn || \"function\" !== typeof obj[x]) {\n                      str$jscomp$0.push(\"\\n\"), str$jscomp$0.push(nestspace), str$jscomp$0.push(x + \" = \"), helper(obj[x], nestspace);\n                    }\n                  }\n                  str$jscomp$0.push(\"\\n\" + space + \"}\");\n                  delete ancestorUids[uid];\n                }\n              } else {\n                str$jscomp$0.push(obj);\n              }\n            }\n          }\n        }\n      }\n    } catch (e) {\n      str$jscomp$0.push(\"*** \" + e + \" ***\");\n    }\n  };\n  helper(obj$jscomp$0, \"\");\n  for (var i = 0; i < uidsToCleanup.length; i++) {\n    goog.removeUid(uidsToCleanup[i]);\n  }\n  return str$jscomp$0.join(\"\");\n};\ngoog.debug.exposeArray = function(arr) {\n  for (var str = [], i = 0; i < arr.length; i++) {\n    Array.isArray(arr[i]) ? str.push(goog.debug.exposeArray(arr[i])) : str.push(arr[i]);\n  }\n  return \"[ \" + str.join(\", \") + \" ]\";\n};\ngoog.debug.normalizeErrorObject = function(err) {\n  var href = goog.getObjectByName(\"window.location.href\");\n  null == err && (err = 'Unknown Error of type \"null/undefined\"');\n  if (\"string\" === typeof err) {\n    return {message:err, name:\"Unknown error\", lineNumber:\"Not available\", fileName:href, stack:\"Not available\"};\n  }\n  var threwError = !1;\n  try {\n    var lineNumber = err.lineNumber || err.line || \"Not available\";\n  } catch (e) {\n    lineNumber = \"Not available\", threwError = !0;\n  }\n  try {\n    var fileName = err.fileName || err.filename || err.sourceURL || goog.global.$googDebugFname || href;\n  } catch (e$31) {\n    fileName = \"Not available\", threwError = !0;\n  }\n  var stack = goog.debug.serializeErrorStack_(err);\n  if (!(!threwError && err.lineNumber && err.fileName && err.stack && err.message && err.name)) {\n    var message = err.message;\n    if (null == message) {\n      if (err.constructor && err.constructor instanceof Function) {\n        var ctorName = err.constructor.name ? err.constructor.name : goog.debug.getFunctionName(err.constructor);\n        message = 'Unknown Error of type \"' + ctorName + '\"';\n        if (goog.debug.CHECK_FOR_THROWN_EVENT && \"Event\" == ctorName) {\n          try {\n            message = message + ' with Event.type \"' + (err.type || \"\") + '\"';\n          } catch (e$32) {\n          }\n        }\n      } else {\n        message = \"Unknown Error of unknown type\";\n      }\n      \"function\" === typeof err.toString && Object.prototype.toString !== err.toString && (message += \": \" + err.toString());\n    }\n    return {message:message, name:err.name || \"UnknownError\", lineNumber:lineNumber, fileName:fileName, stack:stack || \"Not available\"};\n  }\n  err.stack = stack;\n  return {message:err.message, name:err.name, lineNumber:err.lineNumber, fileName:err.fileName, stack:err.stack};\n};\ngoog.debug.serializeErrorStack_ = function(e, seen) {\n  seen || (seen = {});\n  seen[goog.debug.serializeErrorAsKey_(e)] = !0;\n  var stack = e.stack || \"\", cause = e.cause;\n  cause && !seen[goog.debug.serializeErrorAsKey_(cause)] && (stack += \"\\nCaused by: \", cause.stack && 0 == cause.stack.indexOf(cause.toString()) || (stack += \"string\" === typeof cause ? cause : cause.message + \"\\n\"), stack += goog.debug.serializeErrorStack_(cause, seen));\n  return stack;\n};\ngoog.debug.serializeErrorAsKey_ = function(e) {\n  var keyPrefix = \"\";\n  \"function\" === typeof e.toString && (keyPrefix = \"\" + e);\n  return keyPrefix + e.stack;\n};\ngoog.debug.enhanceError = function(err, opt_message) {\n  if (err instanceof Error) {\n    var error = err;\n  } else {\n    error = Error(err), Error.captureStackTrace && Error.captureStackTrace(error, goog.debug.enhanceError);\n  }\n  error.stack || (error.stack = goog.debug.getStacktrace(goog.debug.enhanceError));\n  if (opt_message) {\n    for (var x = 0; error[\"message\" + x];) {\n      ++x;\n    }\n    error[\"message\" + x] = String(opt_message);\n  }\n  return error;\n};\ngoog.debug.enhanceErrorWithContext = function(err, opt_context) {\n  var error = goog.debug.enhanceError(err);\n  if (opt_context) {\n    for (var key in opt_context) {\n      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);\n    }\n  }\n  return error;\n};\ngoog.debug.getStacktraceSimple = function(opt_depth) {\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);\n    if (stack) {\n      return stack;\n    }\n  }\n  for (var sb = [], fn = arguments.callee.caller, depth = 0; fn && (!opt_depth || depth < opt_depth);) {\n    sb.push(goog.debug.getFunctionName(fn));\n    sb.push(\"()\\n\");\n    try {\n      fn = fn.caller;\n    } catch (e) {\n      sb.push(\"[exception trying to get caller]\\n\");\n      break;\n    }\n    depth++;\n    if (depth >= goog.debug.MAX_STACK_DEPTH) {\n      sb.push(\"[...long stack...]\");\n      break;\n    }\n  }\n  opt_depth && depth >= opt_depth ? sb.push(\"[...reached max depth limit...]\") : sb.push(\"[end]\");\n  return sb.join(\"\");\n};\ngoog.debug.MAX_STACK_DEPTH = 50;\ngoog.debug.getNativeStackTrace_ = function(fn) {\n  var tempErr = Error();\n  if (Error.captureStackTrace) {\n    return Error.captureStackTrace(tempErr, fn), String(tempErr.stack);\n  }\n  try {\n    throw tempErr;\n  } catch (e) {\n    tempErr = e;\n  }\n  var stack = tempErr.stack;\n  return stack ? String(stack) : null;\n};\ngoog.debug.getStacktrace = function(fn) {\n  var stack;\n  goog.debug.FORCE_SLOPPY_STACKS || (stack = goog.debug.getNativeStackTrace_(fn || goog.debug.getStacktrace));\n  stack || (stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []));\n  return stack;\n};\ngoog.debug.getStacktraceHelper_ = function(fn, visited) {\n  var sb = [];\n  if (module$contents$goog$array_contains(visited, fn)) {\n    sb.push(\"[...circular reference...]\");\n  } else {\n    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {\n      sb.push(goog.debug.getFunctionName(fn) + \"(\");\n      for (var args = fn.arguments, i = 0; args && i < args.length; i++) {\n        0 < i && sb.push(\", \");\n        var arg = args[i];\n        switch(typeof arg) {\n          case \"object\":\n            var argDesc = arg ? \"object\" : \"null\";\n            break;\n          case \"string\":\n            argDesc = arg;\n            break;\n          case \"number\":\n            argDesc = String(arg);\n            break;\n          case \"boolean\":\n            argDesc = arg ? \"true\" : \"false\";\n            break;\n          case \"function\":\n            argDesc = (argDesc = goog.debug.getFunctionName(arg)) ? argDesc : \"[fn]\";\n            break;\n          default:\n            argDesc = typeof arg;\n        }\n        40 < argDesc.length && (argDesc = argDesc.substr(0, 40) + \"...\");\n        sb.push(argDesc);\n      }\n      visited.push(fn);\n      sb.push(\")\\n\");\n      try {\n        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));\n      } catch (e) {\n        sb.push(\"[exception trying to get caller]\\n\");\n      }\n    } else {\n      fn ? sb.push(\"[...long stack...]\") : sb.push(\"[end]\");\n    }\n  }\n  return sb.join(\"\");\n};\ngoog.debug.getFunctionName = function(fn) {\n  if (goog.debug.fnNameCache_[fn]) {\n    return goog.debug.fnNameCache_[fn];\n  }\n  var functionSource = String(fn);\n  if (!goog.debug.fnNameCache_[functionSource]) {\n    var matches = /function\\s+([^\\(]+)/m.exec(functionSource);\n    goog.debug.fnNameCache_[functionSource] = matches ? matches[1] : \"[Anonymous]\";\n  }\n  return goog.debug.fnNameCache_[functionSource];\n};\ngoog.debug.makeWhitespaceVisible = function(string) {\n  return string.replace(/ /g, \"[_]\").replace(/\\f/g, \"[f]\").replace(/\\n/g, \"[n]\\n\").replace(/\\r/g, \"[r]\").replace(/\\t/g, \"[t]\");\n};\ngoog.debug.runtimeType = function(value) {\n  return value instanceof Function ? value.displayName || value.name || \"unknown type name\" : value instanceof Object ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : null === value ? \"null\" : typeof value;\n};\ngoog.debug.fnNameCache_ = {};\ngoog.debug.freezeInternal_ = goog.DEBUG && Object.freeze || function(arg) {\n  return arg;\n};\ngoog.debug.freeze = function(arg) {\n  return function() {\n    return goog.debug.freezeInternal_(arg);\n  }();\n};\ngoog.events.BrowserFeature = {HAS_W3C_BUTTON:!0, HAS_W3C_EVENT_SUPPORT:!0, SET_KEY_CODE_TO_PREVENT_DEFAULT:!1, HAS_NAVIGATOR_ONLINE_PROPERTY:!0, HAS_HTML5_NETWORK_EVENT_SUPPORT:!0, HTML5_NETWORK_EVENTS_FIRE_ON_BODY:!1, TOUCH_ENABLED:\"ontouchstart\" in goog.global || !!(goog.global.document && document.documentElement && \"ontouchstart\" in document.documentElement) || !(!goog.global.navigator || !goog.global.navigator.maxTouchPoints && !goog.global.navigator.msMaxTouchPoints), POINTER_EVENTS:\"PointerEvent\" in \ngoog.global, MSPOINTER_EVENTS:\"MSPointerEvent\" in goog.global && !(!goog.global.navigator || !goog.global.navigator.msPointerEnabled), PASSIVE_EVENTS:function(fn) {\n  return {valueOf:fn}.valueOf();\n}(function() {\n  if (!goog.global.addEventListener || !Object.defineProperty) {\n    return !1;\n  }\n  var passive = !1, options = Object.defineProperty({}, \"passive\", {get:function() {\n    passive = !0;\n  }});\n  try {\n    goog.global.addEventListener(\"test\", goog.nullFunction, options), goog.global.removeEventListener(\"test\", goog.nullFunction, options);\n  } catch (e) {\n  }\n  return passive;\n})};\nvar module$exports$goog$labs$userAgent = {};\nmodule$exports$goog$labs$userAgent.USE_CLIENT_HINTS = function() {\n  return !1;\n}();\ngoog.string = {};\ngoog.string.internal = {};\ngoog.string.internal.startsWith = function(str, prefix) {\n  return 0 == str.lastIndexOf(prefix, 0);\n};\ngoog.string.internal.endsWith = function(str, suffix) {\n  var l = str.length - suffix.length;\n  return 0 <= l && str.indexOf(suffix, l) == l;\n};\ngoog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {\n  return 0 == goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length));\n};\ngoog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {\n  return 0 == goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length));\n};\ngoog.string.internal.caseInsensitiveEquals = function(str1, str2) {\n  return str1.toLowerCase() == str2.toLowerCase();\n};\ngoog.string.internal.isEmptyOrWhitespace = function(str) {\n  return /^[\\s\\xa0]*$/.test(str);\n};\ngoog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {\n  return str.trim();\n} : function(str) {\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n};\ngoog.string.internal.caseInsensitiveCompare = function(str1, str2) {\n  var test1 = String(str1).toLowerCase(), test2 = String(str2).toLowerCase();\n  return test1 < test2 ? -1 : test1 == test2 ? 0 : 1;\n};\ngoog.string.internal.newLineToBr = function(str, opt_xml) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? \"<br />\" : \"<br>\");\n};\ngoog.string.internal.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n  if (opt_isLikelyToContainHtmlChars) {\n    str = str.replace(goog.string.internal.AMP_RE_, \"&amp;\").replace(goog.string.internal.LT_RE_, \"&lt;\").replace(goog.string.internal.GT_RE_, \"&gt;\").replace(goog.string.internal.QUOT_RE_, \"&quot;\").replace(goog.string.internal.SINGLE_QUOTE_RE_, \"&#39;\").replace(goog.string.internal.NULL_RE_, \"&#0;\");\n  } else {\n    if (!goog.string.internal.ALL_RE_.test(str)) {\n      return str;\n    }\n    -1 != str.indexOf(\"&\") && (str = str.replace(goog.string.internal.AMP_RE_, \"&amp;\"));\n    -1 != str.indexOf(\"<\") && (str = str.replace(goog.string.internal.LT_RE_, \"&lt;\"));\n    -1 != str.indexOf(\">\") && (str = str.replace(goog.string.internal.GT_RE_, \"&gt;\"));\n    -1 != str.indexOf('\"') && (str = str.replace(goog.string.internal.QUOT_RE_, \"&quot;\"));\n    -1 != str.indexOf(\"'\") && (str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, \"&#39;\"));\n    -1 != str.indexOf(\"\\x00\") && (str = str.replace(goog.string.internal.NULL_RE_, \"&#0;\"));\n  }\n  return str;\n};\ngoog.string.internal.AMP_RE_ = /&/g;\ngoog.string.internal.LT_RE_ = /</g;\ngoog.string.internal.GT_RE_ = />/g;\ngoog.string.internal.QUOT_RE_ = /\"/g;\ngoog.string.internal.SINGLE_QUOTE_RE_ = /'/g;\ngoog.string.internal.NULL_RE_ = /\\x00/g;\ngoog.string.internal.ALL_RE_ = /[\\x00&<>\"']/;\ngoog.string.internal.whitespaceEscape = function(str, opt_xml) {\n  return goog.string.internal.newLineToBr(str.replace(/  /g, \" &#160;\"), opt_xml);\n};\ngoog.string.internal.contains = function(str, subString) {\n  return -1 != str.indexOf(subString);\n};\ngoog.string.internal.caseInsensitiveContains = function(str, subString) {\n  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());\n};\ngoog.string.internal.compareVersions = function(version1, version2) {\n  for (var order = 0, v1Subs = goog.string.internal.trim(String(version1)).split(\".\"), v2Subs = goog.string.internal.trim(String(version2)).split(\".\"), subCount = Math.max(v1Subs.length, v2Subs.length), subIdx = 0; 0 == order && subIdx < subCount; subIdx++) {\n    var v1Sub = v1Subs[subIdx] || \"\", v2Sub = v2Subs[subIdx] || \"\";\n    do {\n      var v1Comp = /(\\d*)(\\D*)(.*)/.exec(v1Sub) || [\"\", \"\", \"\", \"\"], v2Comp = /(\\d*)(\\D*)(.*)/.exec(v2Sub) || [\"\", \"\", \"\", \"\"];\n      if (0 == v1Comp[0].length && 0 == v2Comp[0].length) {\n        break;\n      }\n      order = goog.string.internal.compareElements_(0 == v1Comp[1].length ? 0 : parseInt(v1Comp[1], 10), 0 == v2Comp[1].length ? 0 : parseInt(v2Comp[1], 10)) || goog.string.internal.compareElements_(0 == v1Comp[2].length, 0 == v2Comp[2].length) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);\n      v1Sub = v1Comp[3];\n      v2Sub = v2Comp[3];\n    } while (0 == order);\n  }\n  return order;\n};\ngoog.string.internal.compareElements_ = function(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n};\ngoog.labs = {};\ngoog.labs.userAgent = {};\ngoog.labs.userAgent.util = {};\nfunction module$contents$goog$labs$userAgent$util_getNativeUserAgentString() {\n  var navigator = module$contents$goog$labs$userAgent$util_getNavigator();\n  if (navigator) {\n    var userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return \"\";\n}\nfunction module$contents$goog$labs$userAgent$util_getNativeUserAgentData() {\n  if (!module$exports$goog$labs$userAgent.USE_CLIENT_HINTS) {\n    return null;\n  }\n  var navigator = module$contents$goog$labs$userAgent$util_getNavigator();\n  return navigator ? navigator.userAgentData || null : null;\n}\nfunction module$contents$goog$labs$userAgent$util_getNavigator() {\n  return goog.global.navigator;\n}\nvar module$contents$goog$labs$userAgent$util_userAgentInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentString(), module$contents$goog$labs$userAgent$util_userAgentDataInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentData();\nfunction module$contents$goog$labs$userAgent$util_getUserAgent() {\n  return module$contents$goog$labs$userAgent$util_userAgentInternal;\n}\nfunction module$contents$goog$labs$userAgent$util_getUserAgentData() {\n  return module$contents$goog$labs$userAgent$util_userAgentDataInternal;\n}\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(str) {\n  var data = module$contents$goog$labs$userAgent$util_getUserAgentData();\n  return data ? data.brands.some(function($jscomp$destructuring$var0) {\n    var brand = $jscomp$destructuring$var0.brand;\n    return brand && (0,goog.string.internal.contains)(brand, str);\n  }) : !1;\n}\nfunction module$contents$goog$labs$userAgent$util_matchUserAgent(str) {\n  return (0,goog.string.internal.contains)(module$contents$goog$labs$userAgent$util_getUserAgent(), str);\n}\nfunction module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(str) {\n  return (0,goog.string.internal.caseInsensitiveContains)(module$contents$goog$labs$userAgent$util_getUserAgent(), str);\n}\nfunction module$contents$goog$labs$userAgent$util_extractVersionTuples(userAgent) {\n  for (var versionRegExp = RegExp(\"(\\\\w[\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?\", \"g\"), data = [], match; match = versionRegExp.exec(userAgent);) {\n    data.push([match[1], match[2], match[3] || void 0]);\n  }\n  return data;\n}\ngoog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT = !1;\ngoog.labs.userAgent.util.extractVersionTuples = module$contents$goog$labs$userAgent$util_extractVersionTuples;\ngoog.labs.userAgent.util.getNativeUserAgentString = module$contents$goog$labs$userAgent$util_getNativeUserAgentString;\ngoog.labs.userAgent.util.getUserAgent = module$contents$goog$labs$userAgent$util_getUserAgent;\ngoog.labs.userAgent.util.getUserAgentData = module$contents$goog$labs$userAgent$util_getUserAgentData;\ngoog.labs.userAgent.util.matchUserAgent = module$contents$goog$labs$userAgent$util_matchUserAgent;\ngoog.labs.userAgent.util.matchUserAgentDataBrand = module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;\ngoog.labs.userAgent.util.matchUserAgentIgnoreCase = module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;\ngoog.labs.userAgent.util.resetUserAgentData = function module$contents$goog$labs$userAgent$util_resetUserAgentData() {\n  module$contents$goog$labs$userAgent$util_userAgentDataInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentData();\n};\ngoog.labs.userAgent.util.setUserAgent = function module$contents$goog$labs$userAgent$util_setUserAgent(userAgent) {\n  module$contents$goog$labs$userAgent$util_userAgentInternal = \"string\" === typeof userAgent ? userAgent : module$contents$goog$labs$userAgent$util_getNativeUserAgentString();\n};\ngoog.labs.userAgent.util.setUserAgentData = function module$contents$goog$labs$userAgent$util_setUserAgentData(userAgentData) {\n  module$contents$goog$labs$userAgent$util_userAgentDataInternal = userAgentData;\n};\nvar module$exports$goog$labs$userAgent$highEntropy$highEntropyValue = {AsyncValue:function() {\n}};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.AsyncValue.prototype.getIfLoaded = function() {\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.AsyncValue.prototype.load = function() {\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue = function(key) {\n  this.key_ = key;\n  this.promise_ = this.value_ = void 0;\n  this.pending_ = !1;\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue.prototype.getIfLoaded = function() {\n  if (module$contents$goog$labs$userAgent$util_getUserAgentData()) {\n    return this.value_;\n  }\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue.prototype.load = function() {\n  var $jscomp$async$this = this, userAgentData;\n  return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context) {\n    if (1 == $jscomp$generator$context.nextAddress) {\n      userAgentData = module$contents$goog$labs$userAgent$util_getUserAgentData();\n      if (!userAgentData) {\n        return $jscomp$generator$context.return(void 0);\n      }\n      $jscomp$async$this.promise_ || ($jscomp$async$this.pending_ = !0, $jscomp$async$this.promise_ = function() {\n        var dataValues;\n        return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context$1) {\n          if (1 == $jscomp$generator$context$1.nextAddress) {\n            return $jscomp$generator$context$1.setFinallyBlock(2), $jscomp$generator$context$1.yield(userAgentData.getHighEntropyValues([$jscomp$async$this.key_]), 4);\n          }\n          if (2 != $jscomp$generator$context$1.nextAddress) {\n            return dataValues = $jscomp$generator$context$1.yieldResult, $jscomp$async$this.value_ = dataValues[$jscomp$async$this.key_], $jscomp$generator$context$1.return($jscomp$async$this.value_);\n          }\n          $jscomp$generator$context$1.enterFinallyBlock();\n          $jscomp$async$this.pending_ = !1;\n          return $jscomp$generator$context$1.leaveFinallyBlock(0);\n        });\n      }());\n      return $jscomp$generator$context.yield($jscomp$async$this.promise_, 2);\n    }\n    return $jscomp$generator$context.return($jscomp$generator$context.yieldResult);\n  });\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue.prototype.resetForTesting = function() {\n  if (this.pending_) {\n    throw Error(\"Unsafe call to resetForTesting\");\n  }\n  this.value_ = this.promise_ = void 0;\n  this.pending_ = !1;\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version = function(versionString) {\n  this.versionString_ = versionString;\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version.prototype.toVersionStringForLogging = function() {\n  return this.versionString_;\n};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version.prototype.isAtLeast = function(version) {\n  return 0 <= (0,goog.string.internal.compareVersions)(this.versionString_, version);\n};\nvar module$exports$goog$labs$userAgent$highEntropy$highEntropyData = {};\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList = new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"fullVersionList\");\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion = new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue(\"platformVersion\");\nmodule$exports$goog$labs$userAgent$highEntropy$highEntropyData.resetAllForTesting = function module$contents$goog$labs$userAgent$highEntropy$highEntropyData_resetAllForTesting() {\n  module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting();\n  module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion.resetForTesting();\n};\ngoog.labs.userAgent.browser = {};\nvar module$contents$goog$labs$userAgent$browser_Brand = {ANDROID_BROWSER:\"Android Browser\", CHROMIUM:\"Chromium\", EDGE:\"Microsoft Edge\", FIREFOX:\"Firefox\", IE:\"Internet Explorer\", OPERA:\"Opera\", SAFARI:\"Safari\", SILK:\"Silk\",};\ngoog.labs.userAgent.browser.Brand = module$contents$goog$labs$userAgent$browser_Brand;\nfunction module$contents$goog$labs$userAgent$browser_useUserAgentBrand() {\n  var userAgentData = module$contents$goog$labs$userAgent$util_getUserAgentData();\n  return !!userAgentData && 0 < userAgentData.brands.length;\n}\nfunction module$contents$goog$labs$userAgent$browser_matchOpera() {\n  return module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Opera\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchIE() {\n  return module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Trident\") || module$contents$goog$labs$userAgent$util_matchUserAgent(\"MSIE\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchEdgeHtml() {\n  return module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edge\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchEdgeChromium() {\n  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE) : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edg/\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchOperaChromium() {\n  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA) : module$contents$goog$labs$userAgent$util_matchUserAgent(\"OPR\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchFirefox() {\n  return module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Firefox\") || module$contents$goog$labs$userAgent$util_matchUserAgent(\"FxiOS\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchSafari() {\n  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Safari\") && !(module$contents$goog$labs$userAgent$browser_matchChrome() || module$contents$goog$labs$userAgent$browser_matchCoast() || module$contents$goog$labs$userAgent$browser_matchOpera() || module$contents$goog$labs$userAgent$browser_matchEdgeHtml() || module$contents$goog$labs$userAgent$browser_matchEdgeChromium() || module$contents$goog$labs$userAgent$browser_matchOperaChromium() || \n  module$contents$goog$labs$userAgent$browser_matchFirefox() || module$contents$goog$labs$userAgent$browser_isSilk() || module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\"));\n}\nfunction module$contents$goog$labs$userAgent$browser_matchCoast() {\n  return module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent(\"Coast\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchIosWebview() {\n  return module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : (module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPad\") || module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPhone\")) && !module$contents$goog$labs$userAgent$browser_matchSafari() && !module$contents$goog$labs$userAgent$browser_matchChrome() && !module$contents$goog$labs$userAgent$browser_matchCoast() && !module$contents$goog$labs$userAgent$browser_matchFirefox() && module$contents$goog$labs$userAgent$util_matchUserAgent(\"AppleWebKit\");\n}\nfunction module$contents$goog$labs$userAgent$browser_matchChrome() {\n  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM) : (module$contents$goog$labs$userAgent$util_matchUserAgent(\"Chrome\") || module$contents$goog$labs$userAgent$util_matchUserAgent(\"CriOS\")) && !module$contents$goog$labs$userAgent$browser_matchEdgeHtml();\n}\nfunction module$contents$goog$labs$userAgent$browser_matchAndroidBrowser() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\") && !(module$contents$goog$labs$userAgent$browser_matchChrome() || module$contents$goog$labs$userAgent$browser_matchFirefox() || module$contents$goog$labs$userAgent$browser_matchOpera() || module$contents$goog$labs$userAgent$browser_isSilk());\n}\nvar module$contents$goog$labs$userAgent$browser_isOpera = module$contents$goog$labs$userAgent$browser_matchOpera;\ngoog.labs.userAgent.browser.isOpera = module$contents$goog$labs$userAgent$browser_matchOpera;\nvar module$contents$goog$labs$userAgent$browser_isIE = module$contents$goog$labs$userAgent$browser_matchIE;\ngoog.labs.userAgent.browser.isIE = module$contents$goog$labs$userAgent$browser_matchIE;\nvar module$contents$goog$labs$userAgent$browser_isEdge = module$contents$goog$labs$userAgent$browser_matchEdgeHtml;\ngoog.labs.userAgent.browser.isEdge = module$contents$goog$labs$userAgent$browser_matchEdgeHtml;\nvar module$contents$goog$labs$userAgent$browser_isEdgeChromium = module$contents$goog$labs$userAgent$browser_matchEdgeChromium;\ngoog.labs.userAgent.browser.isEdgeChromium = module$contents$goog$labs$userAgent$browser_matchEdgeChromium;\nvar module$contents$goog$labs$userAgent$browser_isOperaChromium = module$contents$goog$labs$userAgent$browser_matchOperaChromium;\ngoog.labs.userAgent.browser.isOperaChromium = module$contents$goog$labs$userAgent$browser_matchOperaChromium;\nvar module$contents$goog$labs$userAgent$browser_isFirefox = module$contents$goog$labs$userAgent$browser_matchFirefox;\ngoog.labs.userAgent.browser.isFirefox = module$contents$goog$labs$userAgent$browser_matchFirefox;\nvar module$contents$goog$labs$userAgent$browser_isSafari = module$contents$goog$labs$userAgent$browser_matchSafari;\ngoog.labs.userAgent.browser.isSafari = module$contents$goog$labs$userAgent$browser_matchSafari;\nvar module$contents$goog$labs$userAgent$browser_isCoast = module$contents$goog$labs$userAgent$browser_matchCoast;\ngoog.labs.userAgent.browser.isCoast = module$contents$goog$labs$userAgent$browser_matchCoast;\nvar module$contents$goog$labs$userAgent$browser_isIosWebview = module$contents$goog$labs$userAgent$browser_matchIosWebview;\ngoog.labs.userAgent.browser.isIosWebview = module$contents$goog$labs$userAgent$browser_matchIosWebview;\nvar module$contents$goog$labs$userAgent$browser_isChrome = module$contents$goog$labs$userAgent$browser_matchChrome;\ngoog.labs.userAgent.browser.isChrome = module$contents$goog$labs$userAgent$browser_matchChrome;\nvar module$contents$goog$labs$userAgent$browser_isAndroidBrowser = module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;\ngoog.labs.userAgent.browser.isAndroidBrowser = module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;\nfunction module$contents$goog$labs$userAgent$browser_isSilk() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Silk\");\n}\ngoog.labs.userAgent.browser.isSilk = module$contents$goog$labs$userAgent$browser_isSilk;\nfunction module$contents$goog$labs$userAgent$browser_createVersionMap(versionTuples) {\n  var versionMap = {};\n  versionTuples.forEach(function(tuple) {\n    versionMap[tuple[0]] = tuple[1];\n  });\n  return function(keys) {\n    return versionMap[keys.find(function(key) {\n      return key in versionMap;\n    })] || \"\";\n  };\n}\nfunction module$contents$goog$labs$userAgent$browser_getVersion() {\n  var userAgentString = module$contents$goog$labs$userAgent$util_getUserAgent();\n  if (module$contents$goog$labs$userAgent$browser_matchIE()) {\n    return module$contents$goog$labs$userAgent$browser_getIEVersion(userAgentString);\n  }\n  var versionTuples = module$contents$goog$labs$userAgent$util_extractVersionTuples(userAgentString), lookUpValueWithKeys = module$contents$goog$labs$userAgent$browser_createVersionMap(versionTuples);\n  if (module$contents$goog$labs$userAgent$browser_matchOpera()) {\n    return lookUpValueWithKeys([\"Version\", \"Opera\"]);\n  }\n  if (module$contents$goog$labs$userAgent$browser_matchEdgeHtml()) {\n    return lookUpValueWithKeys([\"Edge\"]);\n  }\n  if (module$contents$goog$labs$userAgent$browser_matchEdgeChromium()) {\n    return lookUpValueWithKeys([\"Edg\"]);\n  }\n  if (module$contents$goog$labs$userAgent$browser_matchChrome()) {\n    return lookUpValueWithKeys([\"Chrome\", \"CriOS\", \"HeadlessChrome\"]);\n  }\n  var tuple = versionTuples[2];\n  return tuple && tuple[1] || \"\";\n}\ngoog.labs.userAgent.browser.getVersion = module$contents$goog$labs$userAgent$browser_getVersion;\ngoog.labs.userAgent.browser.isVersionOrHigher = function module$contents$goog$labs$userAgent$browser_isVersionOrHigher(version) {\n  return 0 <= (0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(), version);\n};\nfunction module$contents$goog$labs$userAgent$browser_getIEVersion(userAgent) {\n  var rv = /rv: *([\\d\\.]*)/.exec(userAgent);\n  if (rv && rv[1]) {\n    return rv[1];\n  }\n  var version = \"\", msie = /MSIE +([\\d\\.]+)/.exec(userAgent);\n  if (msie && msie[1]) {\n    var tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);\n    if (\"7.0\" == msie[1]) {\n      if (tridentVersion && tridentVersion[1]) {\n        switch(tridentVersion[1]) {\n          case \"4.0\":\n            version = \"8.0\";\n            break;\n          case \"5.0\":\n            version = \"9.0\";\n            break;\n          case \"6.0\":\n            version = \"10.0\";\n            break;\n          case \"7.0\":\n            version = \"11.0\";\n        }\n      } else {\n        version = \"7.0\";\n      }\n    } else {\n      version = msie[1];\n    }\n  }\n  return version;\n}\nfunction module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(browser) {\n  var userAgentString = module$contents$goog$labs$userAgent$util_getUserAgent();\n  if (browser === module$contents$goog$labs$userAgent$browser_Brand.IE) {\n    return module$contents$goog$labs$userAgent$browser_matchIE() ? module$contents$goog$labs$userAgent$browser_getIEVersion(userAgentString) : \"\";\n  }\n  var versionTuples = module$contents$goog$labs$userAgent$util_extractVersionTuples(userAgentString), lookUpValueWithKeys = module$contents$goog$labs$userAgent$browser_createVersionMap(versionTuples);\n  switch(browser) {\n    case module$contents$goog$labs$userAgent$browser_Brand.OPERA:\n      if (module$contents$goog$labs$userAgent$browser_matchOpera()) {\n        return lookUpValueWithKeys([\"Version\", \"Opera\"]);\n      }\n      if (module$contents$goog$labs$userAgent$browser_matchOperaChromium()) {\n        return lookUpValueWithKeys([\"OPR\"]);\n      }\n      break;\n    case module$contents$goog$labs$userAgent$browser_Brand.EDGE:\n      if (module$contents$goog$labs$userAgent$browser_matchEdgeHtml()) {\n        return lookUpValueWithKeys([\"Edge\"]);\n      }\n      if (module$contents$goog$labs$userAgent$browser_matchEdgeChromium()) {\n        return lookUpValueWithKeys([\"Edg\"]);\n      }\n      break;\n    case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:\n      if (module$contents$goog$labs$userAgent$browser_matchChrome()) {\n        return lookUpValueWithKeys([\"Chrome\", \"CriOS\", \"HeadlessChrome\"]);\n      }\n  }\n  if (browser === module$contents$goog$labs$userAgent$browser_Brand.FIREFOX && module$contents$goog$labs$userAgent$browser_matchFirefox() || browser === module$contents$goog$labs$userAgent$browser_Brand.SAFARI && module$contents$goog$labs$userAgent$browser_matchSafari() || browser === module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER && module$contents$goog$labs$userAgent$browser_matchAndroidBrowser()) {\n    var tuple = versionTuples[2];\n    return tuple && tuple[1] || \"\";\n  }\n  return \"\";\n}\nfunction module$contents$goog$labs$userAgent$browser_versionOf(browser) {\n  if (module$contents$goog$labs$userAgent$browser_useUserAgentBrand()) {\n    var matchingBrand = module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(function($jscomp$destructuring$var2) {\n      return $jscomp$destructuring$var2.brand === browser;\n    });\n    if (!matchingBrand || !matchingBrand.version) {\n      return NaN;\n    }\n    var versionParts = matchingBrand.version.split(\".\");\n  } else {\n    var fullVersion = module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(browser);\n    if (\"\" === fullVersion) {\n      return NaN;\n    }\n    versionParts = fullVersion.split(\".\");\n  }\n  return 0 === versionParts.length ? NaN : Number(versionParts[0]);\n}\ngoog.labs.userAgent.browser.versionOf = module$contents$goog$labs$userAgent$browser_versionOf;\nvar module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion = function(brand) {\n  this.brand_ = brand;\n};\nmodule$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion.prototype.getIfLoaded = function() {\n  var $jscomp$this = this, loadedVersionList = module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();\n  if (void 0 !== loadedVersionList) {\n    var matchingBrand = loadedVersionList.find(function($jscomp$destructuring$var4) {\n      return $jscomp$this.brand_ === $jscomp$destructuring$var4.brand;\n    });\n    goog.asserts.assertExists(matchingBrand);\n    return new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(matchingBrand.version);\n  }\n};\nmodule$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion.prototype.load = function() {\n  var $jscomp$async$this = this, loadedVersionList, matchingBrand;\n  return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context) {\n    if (1 == $jscomp$generator$context.nextAddress) {\n      return $jscomp$generator$context.yield(module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load(), 2);\n    }\n    loadedVersionList = $jscomp$generator$context.yieldResult;\n    matchingBrand = loadedVersionList.find(function($jscomp$destructuring$var6) {\n      return $jscomp$async$this.brand_ === $jscomp$destructuring$var6.brand;\n    });\n    goog.asserts.assertExists(matchingBrand);\n    return $jscomp$generator$context.return(new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(matchingBrand.version));\n  });\n};\nvar module$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion = function(versionString) {\n  this.version_ = new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(versionString);\n};\nmodule$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion.prototype.getIfLoaded = function() {\n  return this.version_;\n};\nmodule$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion.prototype.load = function() {\n  var $jscomp$async$this = this;\n  return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context) {\n    return $jscomp$generator$context.return($jscomp$async$this.version_);\n  });\n};\nfunction module$contents$goog$labs$userAgent$browser_fullVersionOf(browser) {\n  if (!module$contents$goog$labs$userAgent$browser_useUserAgentBrand() || 101 > module$contents$goog$labs$userAgent$browser_versionOf(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM)) {\n    var fullVersionFromUserAgentString = module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(browser);\n    return \"\" === fullVersionFromUserAgentString ? void 0 : new module$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion(fullVersionFromUserAgentString);\n  }\n  return module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(function($jscomp$destructuring$var8) {\n    return $jscomp$destructuring$var8.brand === browser;\n  }) ? new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(browser) : void 0;\n}\ngoog.labs.userAgent.browser.fullVersionOf = module$contents$goog$labs$userAgent$browser_fullVersionOf;\ngoog.labs.userAgent.browser.getVersionStringForLogging = function module$contents$goog$labs$userAgent$browser_getVersionStringForLogging(browser) {\n  if (module$contents$goog$labs$userAgent$browser_useUserAgentBrand()) {\n    var fullVersionObj = module$contents$goog$labs$userAgent$browser_fullVersionOf(browser);\n    if (fullVersionObj) {\n      var fullVersion = fullVersionObj.getIfLoaded();\n      if (fullVersion) {\n        return fullVersion.toVersionStringForLogging();\n      }\n      var matchingBrand = module$contents$goog$labs$userAgent$util_getUserAgentData().brands.find(function($jscomp$destructuring$var10) {\n        return $jscomp$destructuring$var10.brand === browser;\n      });\n      goog.asserts.assertExists(matchingBrand);\n      return matchingBrand.version;\n    }\n    return \"\";\n  }\n  return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(browser);\n};\ngoog.labs.userAgent.engine = {};\nfunction module$contents$goog$labs$userAgent$engine_isPresto() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Presto\");\n}\nfunction module$contents$goog$labs$userAgent$engine_isTrident() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Trident\") || module$contents$goog$labs$userAgent$util_matchUserAgent(\"MSIE\");\n}\nfunction module$contents$goog$labs$userAgent$engine_isEdge() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Edge\");\n}\nfunction module$contents$goog$labs$userAgent$engine_isWebKit() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(\"WebKit\") && !module$contents$goog$labs$userAgent$engine_isEdge();\n}\nfunction module$contents$goog$labs$userAgent$engine_isGecko() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Gecko\") && !module$contents$goog$labs$userAgent$engine_isWebKit() && !module$contents$goog$labs$userAgent$engine_isTrident() && !module$contents$goog$labs$userAgent$engine_isEdge();\n}\nfunction module$contents$goog$labs$userAgent$engine_getVersion() {\n  var userAgentString = module$contents$goog$labs$userAgent$util_getUserAgent();\n  if (userAgentString) {\n    var tuples = module$contents$goog$labs$userAgent$util_extractVersionTuples(userAgentString), engineTuple = module$contents$goog$labs$userAgent$engine_getEngineTuple(tuples);\n    if (engineTuple) {\n      return \"Gecko\" == engineTuple[0] ? module$contents$goog$labs$userAgent$engine_getVersionForKey(tuples, \"Firefox\") : engineTuple[1];\n    }\n    var browserTuple = tuples[0], info;\n    if (browserTuple && (info = browserTuple[2])) {\n      var match = /Trident\\/([^\\s;]+)/.exec(info);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n  return \"\";\n}\nfunction module$contents$goog$labs$userAgent$engine_getEngineTuple(tuples) {\n  if (!module$contents$goog$labs$userAgent$engine_isEdge()) {\n    return tuples[1];\n  }\n  for (var i = 0; i < tuples.length; i++) {\n    var tuple = tuples[i];\n    if (\"Edge\" == tuple[0]) {\n      return tuple;\n    }\n  }\n}\nfunction module$contents$goog$labs$userAgent$engine_getVersionForKey(tuples, key) {\n  var pair = module$contents$goog$array_find(tuples, function(pair) {\n    return key == pair[0];\n  });\n  return pair && pair[1] || \"\";\n}\ngoog.labs.userAgent.engine.getVersion = module$contents$goog$labs$userAgent$engine_getVersion;\ngoog.labs.userAgent.engine.isEdge = module$contents$goog$labs$userAgent$engine_isEdge;\ngoog.labs.userAgent.engine.isGecko = module$contents$goog$labs$userAgent$engine_isGecko;\ngoog.labs.userAgent.engine.isPresto = module$contents$goog$labs$userAgent$engine_isPresto;\ngoog.labs.userAgent.engine.isTrident = module$contents$goog$labs$userAgent$engine_isTrident;\ngoog.labs.userAgent.engine.isVersionOrHigher = function module$contents$goog$labs$userAgent$engine_isVersionOrHigher(version) {\n  return 0 <= goog.string.internal.compareVersions(module$contents$goog$labs$userAgent$engine_getVersion(), version);\n};\ngoog.labs.userAgent.engine.isWebKit = module$contents$goog$labs$userAgent$engine_isWebKit;\ngoog.labs.userAgent.platform = {};\nfunction module$contents$goog$labs$userAgent$platform_isAndroid() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Android\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isIpod() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPod\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isIphone() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPhone\") && !module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPod\") && !module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPad\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isIpad() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"iPad\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isIos() {\n  return module$contents$goog$labs$userAgent$platform_isIphone() || module$contents$goog$labs$userAgent$platform_isIpad() || module$contents$goog$labs$userAgent$platform_isIpod();\n}\nfunction module$contents$goog$labs$userAgent$platform_isMacintosh() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Macintosh\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isLinux() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Linux\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isWindows() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"Windows\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isChromeOS() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"CrOS\");\n}\nfunction module$contents$goog$labs$userAgent$platform_isKaiOS() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(\"KaiOS\");\n}\nfunction module$contents$goog$labs$userAgent$platform_getVersion() {\n  var userAgentString = module$contents$goog$labs$userAgent$util_getUserAgent(), version = \"\";\n  if (module$contents$goog$labs$userAgent$platform_isWindows()) {\n    var re = /Windows (?:NT|Phone) ([0-9.]+)/;\n    var match = re.exec(userAgentString);\n    version = match ? match[1] : \"0.0\";\n  } else {\n    if (module$contents$goog$labs$userAgent$platform_isIos()) {\n      re = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/;\n      var match$33 = re.exec(userAgentString);\n      version = match$33 && match$33[1].replace(/_/g, \".\");\n    } else {\n      if (module$contents$goog$labs$userAgent$platform_isMacintosh()) {\n        re = /Mac OS X ([0-9_.]+)/;\n        var match$34 = re.exec(userAgentString);\n        version = match$34 ? match$34[1].replace(/_/g, \".\") : \"10\";\n      } else {\n        if (module$contents$goog$labs$userAgent$platform_isKaiOS()) {\n          re = /(?:KaiOS)\\/(\\S+)/i;\n          var match$35 = re.exec(userAgentString);\n          version = match$35 && match$35[1];\n        } else {\n          if (module$contents$goog$labs$userAgent$platform_isAndroid()) {\n            re = /Android\\s+([^\\);]+)(\\)|;)/;\n            var match$36 = re.exec(userAgentString);\n            version = match$36 && match$36[1];\n          } else {\n            if (module$contents$goog$labs$userAgent$platform_isChromeOS()) {\n              re = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/;\n              var match$37 = re.exec(userAgentString);\n              version = match$37 && match$37[1];\n            }\n          }\n        }\n      }\n    }\n  }\n  return version || \"\";\n}\nvar module$contents$goog$labs$userAgent$platform_PlatformVersion = function() {\n};\nmodule$contents$goog$labs$userAgent$platform_PlatformVersion.prototype.getIfLoaded = function() {\n  if (module$contents$goog$labs$userAgent$util_getUserAgentData()) {\n    var loadedPlatformVersion = module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion.getIfLoaded();\n    if (void 0 !== loadedPlatformVersion) {\n      return new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(loadedPlatformVersion);\n    }\n  } else {\n    return new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(module$contents$goog$labs$userAgent$platform_getVersion());\n  }\n};\nmodule$contents$goog$labs$userAgent$platform_PlatformVersion.prototype.load = function() {\n  var JSCompiler_temp_const;\n  return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context) {\n    if (1 == $jscomp$generator$context.nextAddress) {\n      if (!module$contents$goog$labs$userAgent$util_getUserAgentData()) {\n        return $jscomp$generator$context.return(new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(module$contents$goog$labs$userAgent$platform_getVersion()));\n        return $jscomp$generator$context.jumpTo(0);\n      }\n      JSCompiler_temp_const = module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version;\n      return $jscomp$generator$context.yield(module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion.load(), 3);\n    }\n    return $jscomp$generator$context.return(new JSCompiler_temp_const($jscomp$generator$context.yieldResult));\n  });\n};\nvar module$contents$goog$labs$userAgent$platform_version = new module$contents$goog$labs$userAgent$platform_PlatformVersion();\ngoog.labs.userAgent.platform.getVersion = module$contents$goog$labs$userAgent$platform_getVersion;\ngoog.labs.userAgent.platform.isAndroid = module$contents$goog$labs$userAgent$platform_isAndroid;\ngoog.labs.userAgent.platform.isChromeOS = module$contents$goog$labs$userAgent$platform_isChromeOS;\ngoog.labs.userAgent.platform.isChromecast = function module$contents$goog$labs$userAgent$platform_isChromecast() {\n  return module$contents$goog$labs$userAgent$util_matchUserAgent(\"CrKey\");\n};\ngoog.labs.userAgent.platform.isIos = module$contents$goog$labs$userAgent$platform_isIos;\ngoog.labs.userAgent.platform.isIpad = module$contents$goog$labs$userAgent$platform_isIpad;\ngoog.labs.userAgent.platform.isIphone = module$contents$goog$labs$userAgent$platform_isIphone;\ngoog.labs.userAgent.platform.isIpod = module$contents$goog$labs$userAgent$platform_isIpod;\ngoog.labs.userAgent.platform.isKaiOS = module$contents$goog$labs$userAgent$platform_isKaiOS;\ngoog.labs.userAgent.platform.isLinux = module$contents$goog$labs$userAgent$platform_isLinux;\ngoog.labs.userAgent.platform.isMacintosh = module$contents$goog$labs$userAgent$platform_isMacintosh;\ngoog.labs.userAgent.platform.isVersionOrHigher = function module$contents$goog$labs$userAgent$platform_isVersionOrHigher(version) {\n  return 0 <= goog.string.internal.compareVersions(module$contents$goog$labs$userAgent$platform_getVersion(), version);\n};\ngoog.labs.userAgent.platform.isWindows = module$contents$goog$labs$userAgent$platform_isWindows;\ngoog.labs.userAgent.platform.version = module$contents$goog$labs$userAgent$platform_version;\ngoog.reflect = {};\ngoog.reflect.object = function(type, object) {\n  return object;\n};\ngoog.reflect.objectProperty = function(prop, object) {\n  return prop;\n};\ngoog.reflect.sinkValue = function(x) {\n  goog.reflect.sinkValue[\" \"](x);\n  return x;\n};\ngoog.reflect.sinkValue[\" \"] = goog.nullFunction;\ngoog.reflect.canAccessProperty = function(obj, prop) {\n  try {\n    return goog.reflect.sinkValue(obj[prop]), !0;\n  } catch (e) {\n  }\n  return !1;\n};\ngoog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {\n  var storedKey = opt_keyFn ? opt_keyFn(key) : key;\n  return Object.prototype.hasOwnProperty.call(cacheObj, storedKey) ? cacheObj[storedKey] : cacheObj[storedKey] = valueFn(key);\n};\ngoog.userAgent = {};\ngoog.userAgent.ASSUME_IE = !1;\ngoog.userAgent.ASSUME_EDGE = !1;\ngoog.userAgent.ASSUME_GECKO = !1;\ngoog.userAgent.ASSUME_WEBKIT = !1;\ngoog.userAgent.ASSUME_MOBILE_WEBKIT = !1;\ngoog.userAgent.ASSUME_OPERA = !1;\ngoog.userAgent.ASSUME_ANY_VERSION = !1;\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;\ngoog.userAgent.getUserAgentString = function() {\n  return module$contents$goog$labs$userAgent$util_getUserAgent();\n};\ngoog.userAgent.getNavigatorTyped = function() {\n  return goog.global.navigator || null;\n};\ngoog.userAgent.getNavigator = function() {\n  return goog.userAgent.getNavigatorTyped();\n};\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : module$contents$goog$labs$userAgent$browser_matchOpera();\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : module$contents$goog$labs$userAgent$browser_matchIE();\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : module$contents$goog$labs$userAgent$engine_isEdge();\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : module$contents$goog$labs$userAgent$engine_isGecko();\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : module$contents$goog$labs$userAgent$engine_isWebKit();\ngoog.userAgent.isMobile_ = function() {\n  return goog.userAgent.WEBKIT && module$contents$goog$labs$userAgent$util_matchUserAgent(\"Mobile\");\n};\ngoog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\ngoog.userAgent.determinePlatform_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || \"\";\n};\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\ngoog.userAgent.ASSUME_MAC = !1;\ngoog.userAgent.ASSUME_WINDOWS = !1;\ngoog.userAgent.ASSUME_LINUX = !1;\ngoog.userAgent.ASSUME_X11 = !1;\ngoog.userAgent.ASSUME_ANDROID = !1;\ngoog.userAgent.ASSUME_IPHONE = !1;\ngoog.userAgent.ASSUME_IPAD = !1;\ngoog.userAgent.ASSUME_IPOD = !1;\ngoog.userAgent.ASSUME_KAIOS = !1;\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : module$contents$goog$labs$userAgent$platform_isMacintosh();\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : module$contents$goog$labs$userAgent$platform_isWindows();\ngoog.userAgent.isLegacyLinux_ = function() {\n  return module$contents$goog$labs$userAgent$platform_isLinux() || module$contents$goog$labs$userAgent$platform_isChromeOS();\n};\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();\ngoog.userAgent.isX11_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator && goog.string.internal.contains(navigator.appVersion || \"\", \"X11\");\n};\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : module$contents$goog$labs$userAgent$platform_isAndroid();\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : module$contents$goog$labs$userAgent$platform_isIphone();\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : module$contents$goog$labs$userAgent$platform_isIpad();\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : module$contents$goog$labs$userAgent$platform_isIpod();\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : module$contents$goog$labs$userAgent$platform_isIos();\ngoog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : module$contents$goog$labs$userAgent$platform_isKaiOS();\ngoog.userAgent.determineVersion_ = function() {\n  var version = \"\", arr = goog.userAgent.getVersionRegexResult_();\n  arr && (version = arr ? arr[1] : \"\");\n  if (goog.userAgent.IE) {\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (null != docMode && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n  return version;\n};\ngoog.userAgent.getVersionRegexResult_ = function() {\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n};\ngoog.userAgent.getDocumentMode_ = function() {\n  var doc = goog.global.document;\n  return doc ? doc.documentMode : void 0;\n};\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\ngoog.userAgent.compare = function(v1, v2) {\n  return goog.string.internal.compareVersions(v1, v2);\n};\ngoog.userAgent.isVersionOrHigherCache_ = {};\ngoog.userAgent.isVersionOrHigher = function(version) {\n  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, version, function() {\n    return 0 <= goog.string.internal.compareVersions(goog.userAgent.VERSION, version);\n  });\n};\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\ngoog.userAgent.DOCUMENT_MODE = function() {\n  if (goog.global.document && goog.userAgent.IE) {\n    var documentMode = goog.userAgent.getDocumentMode_();\n    return documentMode ? documentMode : parseInt(goog.userAgent.VERSION, 10) || void 0;\n  }\n}();\ngoog.events.MouseEvents = {};\ngoog.events.getVendorPrefixedName_ = function(eventName) {\n  return goog.userAgent.WEBKIT ? \"webkit\" + eventName : eventName.toLowerCase();\n};\ngoog.events.EventType = {CLICK:\"click\", RIGHTCLICK:\"rightclick\", DBLCLICK:\"dblclick\", AUXCLICK:\"auxclick\", MOUSEDOWN:\"mousedown\", MOUSEUP:\"mouseup\", MOUSEOVER:\"mouseover\", MOUSEOUT:\"mouseout\", MOUSEMOVE:\"mousemove\", MOUSEENTER:\"mouseenter\", MOUSELEAVE:\"mouseleave\", MOUSECANCEL:\"mousecancel\", SELECTIONCHANGE:\"selectionchange\", SELECTSTART:\"selectstart\", WHEEL:\"wheel\", KEYPRESS:\"keypress\", KEYDOWN:\"keydown\", KEYUP:\"keyup\", BLUR:\"blur\", FOCUS:\"focus\", DEACTIVATE:\"deactivate\", FOCUSIN:\"focusin\", FOCUSOUT:\"focusout\", \nCHANGE:\"change\", RESET:\"reset\", SELECT:\"select\", SUBMIT:\"submit\", INPUT:\"input\", PROPERTYCHANGE:\"propertychange\", DRAGSTART:\"dragstart\", DRAG:\"drag\", DRAGENTER:\"dragenter\", DRAGOVER:\"dragover\", DRAGLEAVE:\"dragleave\", DROP:\"drop\", DRAGEND:\"dragend\", TOUCHSTART:\"touchstart\", TOUCHMOVE:\"touchmove\", TOUCHEND:\"touchend\", TOUCHCANCEL:\"touchcancel\", BEFOREUNLOAD:\"beforeunload\", CONSOLEMESSAGE:\"consolemessage\", CONTEXTMENU:\"contextmenu\", DEVICECHANGE:\"devicechange\", DEVICEMOTION:\"devicemotion\", DEVICEORIENTATION:\"deviceorientation\", \nDOMCONTENTLOADED:\"DOMContentLoaded\", ERROR:\"error\", HELP:\"help\", LOAD:\"load\", LOSECAPTURE:\"losecapture\", ORIENTATIONCHANGE:\"orientationchange\", READYSTATECHANGE:\"readystatechange\", RESIZE:\"resize\", SCROLL:\"scroll\", UNLOAD:\"unload\", CANPLAY:\"canplay\", CANPLAYTHROUGH:\"canplaythrough\", DURATIONCHANGE:\"durationchange\", EMPTIED:\"emptied\", ENDED:\"ended\", LOADEDDATA:\"loadeddata\", LOADEDMETADATA:\"loadedmetadata\", PAUSE:\"pause\", PLAY:\"play\", PLAYING:\"playing\", PROGRESS:\"progress\", RATECHANGE:\"ratechange\", \nSEEKED:\"seeked\", SEEKING:\"seeking\", STALLED:\"stalled\", SUSPEND:\"suspend\", TIMEUPDATE:\"timeupdate\", VOLUMECHANGE:\"volumechange\", WAITING:\"waiting\", SOURCEOPEN:\"sourceopen\", SOURCEENDED:\"sourceended\", SOURCECLOSED:\"sourceclosed\", ABORT:\"abort\", UPDATE:\"update\", UPDATESTART:\"updatestart\", UPDATEEND:\"updateend\", HASHCHANGE:\"hashchange\", PAGEHIDE:\"pagehide\", PAGESHOW:\"pageshow\", POPSTATE:\"popstate\", COPY:\"copy\", PASTE:\"paste\", CUT:\"cut\", BEFORECOPY:\"beforecopy\", BEFORECUT:\"beforecut\", BEFOREPASTE:\"beforepaste\", \nONLINE:\"online\", OFFLINE:\"offline\", MESSAGE:\"message\", CONNECT:\"connect\", INSTALL:\"install\", ACTIVATE:\"activate\", FETCH:\"fetch\", FOREIGNFETCH:\"foreignfetch\", MESSAGEERROR:\"messageerror\", STATECHANGE:\"statechange\", UPDATEFOUND:\"updatefound\", CONTROLLERCHANGE:\"controllerchange\", ANIMATIONSTART:goog.events.getVendorPrefixedName_(\"AnimationStart\"), ANIMATIONEND:goog.events.getVendorPrefixedName_(\"AnimationEnd\"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_(\"AnimationIteration\"), TRANSITIONEND:goog.events.getVendorPrefixedName_(\"TransitionEnd\"), \nPOINTERDOWN:\"pointerdown\", POINTERUP:\"pointerup\", POINTERCANCEL:\"pointercancel\", POINTERMOVE:\"pointermove\", POINTEROVER:\"pointerover\", POINTEROUT:\"pointerout\", POINTERENTER:\"pointerenter\", POINTERLEAVE:\"pointerleave\", GOTPOINTERCAPTURE:\"gotpointercapture\", LOSTPOINTERCAPTURE:\"lostpointercapture\", MSGESTURECHANGE:\"MSGestureChange\", MSGESTUREEND:\"MSGestureEnd\", MSGESTUREHOLD:\"MSGestureHold\", MSGESTURESTART:\"MSGestureStart\", MSGESTURETAP:\"MSGestureTap\", MSGOTPOINTERCAPTURE:\"MSGotPointerCapture\", MSINERTIASTART:\"MSInertiaStart\", \nMSLOSTPOINTERCAPTURE:\"MSLostPointerCapture\", MSPOINTERCANCEL:\"MSPointerCancel\", MSPOINTERDOWN:\"MSPointerDown\", MSPOINTERENTER:\"MSPointerEnter\", MSPOINTERHOVER:\"MSPointerHover\", MSPOINTERLEAVE:\"MSPointerLeave\", MSPOINTERMOVE:\"MSPointerMove\", MSPOINTEROUT:\"MSPointerOut\", MSPOINTEROVER:\"MSPointerOver\", MSPOINTERUP:\"MSPointerUp\", TEXT:\"text\", TEXTINPUT:goog.userAgent.IE ? \"textinput\" : \"textInput\", COMPOSITIONSTART:\"compositionstart\", COMPOSITIONUPDATE:\"compositionupdate\", COMPOSITIONEND:\"compositionend\", \nBEFOREINPUT:\"beforeinput\", EXIT:\"exit\", LOADABORT:\"loadabort\", LOADCOMMIT:\"loadcommit\", LOADREDIRECT:\"loadredirect\", LOADSTART:\"loadstart\", LOADSTOP:\"loadstop\", RESPONSIVE:\"responsive\", SIZECHANGED:\"sizechanged\", UNRESPONSIVE:\"unresponsive\", VISIBILITYCHANGE:\"visibilitychange\", STORAGE:\"storage\", DOMSUBTREEMODIFIED:\"DOMSubtreeModified\", DOMNODEINSERTED:\"DOMNodeInserted\", DOMNODEREMOVED:\"DOMNodeRemoved\", DOMNODEREMOVEDFROMDOCUMENT:\"DOMNodeRemovedFromDocument\", DOMNODEINSERTEDINTODOCUMENT:\"DOMNodeInsertedIntoDocument\", \nDOMATTRMODIFIED:\"DOMAttrModified\", DOMCHARACTERDATAMODIFIED:\"DOMCharacterDataModified\", BEFOREPRINT:\"beforeprint\", AFTERPRINT:\"afterprint\", BEFOREINSTALLPROMPT:\"beforeinstallprompt\", APPINSTALLED:\"appinstalled\"};\ngoog.events.getPointerFallbackEventName_ = function(pointerEventName, msPointerEventName, fallbackEventName) {\n  return goog.events.BrowserFeature.POINTER_EVENTS ? pointerEventName : goog.events.BrowserFeature.MSPOINTER_EVENTS ? msPointerEventName : fallbackEventName;\n};\ngoog.events.PointerFallbackEventType = {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.MOUSEDOWN), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.MOUSEUP), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.MOUSECANCEL), \nPOINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.MOUSEMOVE), POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER, goog.events.EventType.MOUSEOVER), POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT, goog.events.EventType.MOUSEOUT), POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER, \ngoog.events.EventType.MSPOINTERENTER, goog.events.EventType.MOUSEENTER), POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE, goog.events.EventType.MOUSELEAVE)};\ngoog.events.PointerTouchFallbackEventType = {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.TOUCHSTART), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.TOUCHEND), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.TOUCHCANCEL), \nPOINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.TOUCHMOVE)};\ngoog.events.PointerAsMouseEventType = {MOUSEDOWN:goog.events.PointerFallbackEventType.POINTERDOWN, MOUSEUP:goog.events.PointerFallbackEventType.POINTERUP, MOUSECANCEL:goog.events.PointerFallbackEventType.POINTERCANCEL, MOUSEMOVE:goog.events.PointerFallbackEventType.POINTERMOVE, MOUSEOVER:goog.events.PointerFallbackEventType.POINTEROVER, MOUSEOUT:goog.events.PointerFallbackEventType.POINTEROUT, MOUSEENTER:goog.events.PointerFallbackEventType.POINTERENTER, MOUSELEAVE:goog.events.PointerFallbackEventType.POINTERLEAVE};\ngoog.events.MouseAsMouseEventType = {MOUSEDOWN:goog.events.EventType.MOUSEDOWN, MOUSEUP:goog.events.EventType.MOUSEUP, MOUSECANCEL:goog.events.EventType.MOUSECANCEL, MOUSEMOVE:goog.events.EventType.MOUSEMOVE, MOUSEOVER:goog.events.EventType.MOUSEOVER, MOUSEOUT:goog.events.EventType.MOUSEOUT, MOUSEENTER:goog.events.EventType.MOUSEENTER, MOUSELEAVE:goog.events.EventType.MOUSELEAVE};\ngoog.events.PointerAsTouchEventType = {TOUCHCANCEL:goog.events.PointerTouchFallbackEventType.POINTERCANCEL, TOUCHEND:goog.events.PointerTouchFallbackEventType.POINTERUP, TOUCHMOVE:goog.events.PointerTouchFallbackEventType.POINTERMOVE, TOUCHSTART:goog.events.PointerTouchFallbackEventType.POINTERDOWN};\ngoog.events.USE_LAYER_XY_AS_OFFSET_XY = !1;\ngoog.events.BrowserEvent = function(opt_e, opt_currentTarget) {\n  goog.events.Event.call(this, opt_e ? opt_e.type : \"\");\n  this.relatedTarget = this.currentTarget = this.target = null;\n  this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0;\n  this.key = \"\";\n  this.charCode = this.keyCode = 0;\n  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\n  this.state = null;\n  this.platformModifierKey = !1;\n  this.pointerId = 0;\n  this.pointerType = \"\";\n  this.event_ = null;\n  opt_e && this.init(opt_e, opt_currentTarget);\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\ngoog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};\ngoog.events.BrowserEvent.PointerType = {MOUSE:\"mouse\", PEN:\"pen\", TOUCH:\"touch\"};\ngoog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([1, 4, 2]);\ngoog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH, 3:goog.events.BrowserEvent.PointerType.PEN, 4:goog.events.BrowserEvent.PointerType.MOUSE});\ngoog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {\n  var type = this.type = e.type, relevantTouch = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;\n  this.target = e.target || e.srcElement;\n  this.currentTarget = opt_currentTarget;\n  var relatedTarget = e.relatedTarget;\n  relatedTarget ? goog.userAgent.GECKO && (goog.reflect.canAccessProperty(relatedTarget, \"nodeName\") || (relatedTarget = null)) : type == goog.events.EventType.MOUSEOVER ? relatedTarget = e.fromElement : type == goog.events.EventType.MOUSEOUT && (relatedTarget = e.toElement);\n  this.relatedTarget = relatedTarget;\n  relevantTouch ? (this.clientX = void 0 !== relevantTouch.clientX ? relevantTouch.clientX : relevantTouch.pageX, this.clientY = void 0 !== relevantTouch.clientY ? relevantTouch.clientY : relevantTouch.pageY, this.screenX = relevantTouch.screenX || 0, this.screenY = relevantTouch.screenY || 0) : (goog.events.USE_LAYER_XY_AS_OFFSET_XY ? (this.offsetX = void 0 !== e.layerX ? e.layerX : e.offsetX, this.offsetY = void 0 !== e.layerY ? e.layerY : e.offsetY) : (this.offsetX = goog.userAgent.WEBKIT || void 0 !== \n  e.offsetX ? e.offsetX : e.layerX, this.offsetY = goog.userAgent.WEBKIT || void 0 !== e.offsetY ? e.offsetY : e.layerY), this.clientX = void 0 !== e.clientX ? e.clientX : e.pageX, this.clientY = void 0 !== e.clientY ? e.clientY : e.pageY, this.screenX = e.screenX || 0, this.screenY = e.screenY || 0);\n  this.button = e.button;\n  this.keyCode = e.keyCode || 0;\n  this.key = e.key || \"\";\n  this.charCode = e.charCode || (\"keypress\" == type ? e.keyCode : 0);\n  this.ctrlKey = e.ctrlKey;\n  this.altKey = e.altKey;\n  this.shiftKey = e.shiftKey;\n  this.metaKey = e.metaKey;\n  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  this.pointerId = e.pointerId || 0;\n  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);\n  this.state = e.state;\n  this.event_ = e;\n  e.defaultPrevented && goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n};\ngoog.events.BrowserEvent.prototype.isButton = function(button) {\n  return this.event_.button == button;\n};\ngoog.events.BrowserEvent.prototype.isMouseActionButton = function() {\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.MAC && this.ctrlKey);\n};\ngoog.events.BrowserEvent.prototype.stopPropagation = function() {\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  this.event_.stopPropagation ? this.event_.stopPropagation() : this.event_.cancelBubble = !0;\n};\ngoog.events.BrowserEvent.prototype.preventDefault = function() {\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be = this.event_;\n  be.preventDefault ? be.preventDefault() : be.returnValue = !1;\n};\ngoog.events.BrowserEvent.prototype.getBrowserEvent = function() {\n  return this.event_;\n};\ngoog.events.BrowserEvent.getPointerType_ = function(e) {\n  return \"string\" === typeof e.pointerType ? e.pointerType : goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || \"\";\n};\ngoog.events.Listenable = function() {\n};\ngoog.events.Listenable.IMPLEMENTED_BY_PROP = \"closure_listenable_\" + (1e6 * Math.random() | 0);\ngoog.events.Listenable.addImplementation = function(cls) {\n  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = !0;\n};\ngoog.events.Listenable.isImplementedBy = function(obj) {\n  return !(!obj || !obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);\n};\ngoog.events.Listenable.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.unlistenByKey = function(key) {\n};\ngoog.events.Listenable.prototype.dispatchEvent = function(e) {\n};\ngoog.events.Listenable.prototype.removeAllListeners = function(opt_type) {\n};\ngoog.events.Listenable.prototype.getParentEventTarget = function() {\n};\ngoog.events.Listenable.prototype.fireListeners = function(type, capture, eventObject) {\n};\ngoog.events.Listenable.prototype.getListeners = function(type, capture) {\n};\ngoog.events.Listenable.prototype.getListener = function(type, listener, capture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.hasListener = function(opt_type, opt_capture) {\n};\ngoog.events.ListenableKey = function() {\n};\ngoog.events.ListenableKey.counter_ = 0;\ngoog.events.ListenableKey.reserveKey = function() {\n  return ++goog.events.ListenableKey.counter_;\n};\ngoog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {\n  goog.events.Listener.ENABLE_MONITORING && (this.creationStack = Error().stack);\n  this.listener = listener;\n  this.proxy = proxy;\n  this.src = src;\n  this.type = type;\n  this.capture = !!capture;\n  this.handler = opt_handler;\n  this.key = goog.events.ListenableKey.reserveKey();\n  this.removed = this.callOnce = !1;\n};\ngoog.events.Listener.ENABLE_MONITORING = !1;\ngoog.events.Listener.prototype.markAsRemoved = function() {\n  this.removed = !0;\n  this.handler = this.src = this.proxy = this.listener = null;\n};\ngoog.object = {};\nfunction module$contents$goog$object_forEach(obj, f, opt_obj) {\n  for (var key in obj) {\n    f.call(opt_obj, obj[key], key, obj);\n  }\n}\nfunction module$contents$goog$object_filter(obj, f, opt_obj) {\n  var res = {}, key;\n  for (key in obj) {\n    f.call(opt_obj, obj[key], key, obj) && (res[key] = obj[key]);\n  }\n  return res;\n}\nfunction module$contents$goog$object_map(obj, f, opt_obj) {\n  var res = {}, key;\n  for (key in obj) {\n    res[key] = f.call(opt_obj, obj[key], key, obj);\n  }\n  return res;\n}\nfunction module$contents$goog$object_some(obj, f, opt_obj) {\n  for (var key in obj) {\n    if (f.call(opt_obj, obj[key], key, obj)) {\n      return !0;\n    }\n  }\n  return !1;\n}\nfunction module$contents$goog$object_getCount(obj) {\n  var rv = 0, key;\n  for (key in obj) {\n    rv++;\n  }\n  return rv;\n}\nfunction module$contents$goog$object_contains(obj, val) {\n  return module$contents$goog$object_containsValue(obj, val);\n}\nfunction module$contents$goog$object_getValues(obj) {\n  var res = [], i = 0, key;\n  for (key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n}\nfunction module$contents$goog$object_getKeys(obj) {\n  var res = [], i = 0, key;\n  for (key in obj) {\n    res[i++] = key;\n  }\n  return res;\n}\nfunction module$contents$goog$object_containsKey(obj, key) {\n  return null !== obj && key in obj;\n}\nfunction module$contents$goog$object_containsValue(obj, val) {\n  for (var key in obj) {\n    if (obj[key] == val) {\n      return !0;\n    }\n  }\n  return !1;\n}\nfunction module$contents$goog$object_findKey(obj, f, thisObj) {\n  for (var key in obj) {\n    if (f.call(thisObj, obj[key], key, obj)) {\n      return key;\n    }\n  }\n}\nfunction module$contents$goog$object_isEmpty(obj) {\n  for (var key in obj) {\n    return !1;\n  }\n  return !0;\n}\nfunction module$contents$goog$object_clear(obj) {\n  for (var i in obj) {\n    delete obj[i];\n  }\n}\nfunction module$contents$goog$object_remove(obj, key) {\n  var rv;\n  (rv = key in obj) && delete obj[key];\n  return rv;\n}\nfunction module$contents$goog$object_set(obj, key, value) {\n  obj[key] = value;\n}\nfunction module$contents$goog$object_clone(obj) {\n  var res = {}, key;\n  for (key in obj) {\n    res[key] = obj[key];\n  }\n  return res;\n}\nfunction module$contents$goog$object_unsafeClone(obj) {\n  if (!obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  if (\"function\" === typeof obj.clone) {\n    return obj.clone();\n  }\n  if (\"undefined\" !== typeof Map && obj instanceof Map) {\n    return new Map(obj);\n  }\n  if (\"undefined\" !== typeof Set && obj instanceof Set) {\n    return new Set(obj);\n  }\n  var clone = Array.isArray(obj) ? [] : \"function\" !== typeof ArrayBuffer || \"function\" !== typeof ArrayBuffer.isView || !ArrayBuffer.isView(obj) || obj instanceof DataView ? {} : new obj.constructor(obj.length), key;\n  for (key in obj) {\n    clone[key] = module$contents$goog$object_unsafeClone(obj[key]);\n  }\n  return clone;\n}\nvar module$contents$goog$object_PROTOTYPE_FIELDS = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction module$contents$goog$object_extend(target, var_args) {\n  for (var key, source, i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      target[key] = source[key];\n    }\n    for (var j = 0; j < module$contents$goog$object_PROTOTYPE_FIELDS.length; j++) {\n      key = module$contents$goog$object_PROTOTYPE_FIELDS[j], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n    }\n  }\n}\nfunction module$contents$goog$object_create(var_args) {\n  var argLength = arguments.length;\n  if (1 == argLength && Array.isArray(arguments[0])) {\n    return module$contents$goog$object_create.apply(null, arguments[0]);\n  }\n  if (argLength % 2) {\n    throw Error(\"Uneven number of arguments\");\n  }\n  for (var rv = {}, i = 0; i < argLength; i += 2) {\n    rv[arguments[i]] = arguments[i + 1];\n  }\n  return rv;\n}\nfunction module$contents$goog$object_createSet(var_args) {\n  var argLength = arguments.length;\n  if (1 == argLength && Array.isArray(arguments[0])) {\n    return module$contents$goog$object_createSet.apply(null, arguments[0]);\n  }\n  for (var rv = {}, i = 0; i < argLength; i++) {\n    rv[arguments[i]] = !0;\n  }\n  return rv;\n}\ngoog.object.add = function module$contents$goog$object_add(obj, key, val) {\n  if (null !== obj && key in obj) {\n    throw Error('The object already contains the key \"' + key + '\"');\n  }\n  module$contents$goog$object_set(obj, key, val);\n};\ngoog.object.clear = module$contents$goog$object_clear;\ngoog.object.clone = module$contents$goog$object_clone;\ngoog.object.contains = module$contents$goog$object_contains;\ngoog.object.containsKey = module$contents$goog$object_containsKey;\ngoog.object.containsValue = module$contents$goog$object_containsValue;\ngoog.object.create = module$contents$goog$object_create;\ngoog.object.createImmutableView = function module$contents$goog$object_createImmutableView(obj) {\n  var result = obj;\n  Object.isFrozen && !Object.isFrozen(obj) && (result = Object.create(obj), Object.freeze(result));\n  return result;\n};\ngoog.object.createSet = module$contents$goog$object_createSet;\ngoog.object.equals = function module$contents$goog$object_equals(a, b) {\n  for (var k in a) {\n    if (!(k in b) || a[k] !== b[k]) {\n      return !1;\n    }\n  }\n  for (var k$38 in b) {\n    if (!(k$38 in a)) {\n      return !1;\n    }\n  }\n  return !0;\n};\ngoog.object.every = function module$contents$goog$object_every(obj, f, opt_obj) {\n  for (var key in obj) {\n    if (!f.call(opt_obj, obj[key], key, obj)) {\n      return !1;\n    }\n  }\n  return !0;\n};\ngoog.object.extend = module$contents$goog$object_extend;\ngoog.object.filter = module$contents$goog$object_filter;\ngoog.object.findKey = module$contents$goog$object_findKey;\ngoog.object.findValue = function module$contents$goog$object_findValue(obj, f, thisObj) {\n  var key = module$contents$goog$object_findKey(obj, f, thisObj);\n  return key && obj[key];\n};\ngoog.object.forEach = module$contents$goog$object_forEach;\ngoog.object.get = function module$contents$goog$object_get(obj, key, val) {\n  return null !== obj && key in obj ? obj[key] : val;\n};\ngoog.object.getAllPropertyNames = function module$contents$goog$object_getAllPropertyNames(obj, includeObjectPrototype, includeFunctionPrototype) {\n  if (!obj) {\n    return [];\n  }\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n    return module$contents$goog$object_getKeys(obj);\n  }\n  for (var visitedSet = {}, proto = obj; proto && (proto !== Object.prototype || includeObjectPrototype) && (proto !== Function.prototype || includeFunctionPrototype);) {\n    for (var names = Object.getOwnPropertyNames(proto), i = 0; i < names.length; i++) {\n      visitedSet[names[i]] = !0;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return module$contents$goog$object_getKeys(visitedSet);\n};\ngoog.object.getAnyKey = function module$contents$goog$object_getAnyKey(obj) {\n  for (var key in obj) {\n    return key;\n  }\n};\ngoog.object.getAnyValue = function module$contents$goog$object_getAnyValue(obj) {\n  for (var key in obj) {\n    return obj[key];\n  }\n};\ngoog.object.getCount = module$contents$goog$object_getCount;\ngoog.object.getKeys = module$contents$goog$object_getKeys;\ngoog.object.getSuperClass = function module$contents$goog$object_getSuperClass(constructor) {\n  var proto = Object.getPrototypeOf(constructor.prototype);\n  return proto && proto.constructor;\n};\ngoog.object.getValueByKeys = function module$contents$goog$object_getValueByKeys(obj, var_args) {\n  for (var isArrayLike = goog.isArrayLike(var_args), keys = isArrayLike ? var_args : arguments, i = isArrayLike ? 0 : 1; i < keys.length; i++) {\n    if (null == obj) {\n      return;\n    }\n    obj = obj[keys[i]];\n  }\n  return obj;\n};\ngoog.object.getValues = module$contents$goog$object_getValues;\ngoog.object.isEmpty = module$contents$goog$object_isEmpty;\ngoog.object.isImmutableView = function module$contents$goog$object_isImmutableView(obj) {\n  return !!Object.isFrozen && Object.isFrozen(obj);\n};\ngoog.object.map = module$contents$goog$object_map;\ngoog.object.remove = module$contents$goog$object_remove;\ngoog.object.set = module$contents$goog$object_set;\ngoog.object.setIfUndefined = function module$contents$goog$object_setIfUndefined(obj, key, value) {\n  return key in obj ? obj[key] : obj[key] = value;\n};\ngoog.object.setWithReturnValueIfNotSet = function module$contents$goog$object_setWithReturnValueIfNotSet(obj, key, f) {\n  if (key in obj) {\n    return obj[key];\n  }\n  var val = f();\n  return obj[key] = val;\n};\ngoog.object.some = module$contents$goog$object_some;\ngoog.object.transpose = function module$contents$goog$object_transpose(obj) {\n  var transposed = {}, key;\n  for (key in obj) {\n    transposed[obj[key]] = key;\n  }\n  return transposed;\n};\ngoog.object.unsafeClone = module$contents$goog$object_unsafeClone;\ngoog.events.ListenerMap = function(src) {\n  this.src = src;\n  this.listeners = {};\n  this.typeCount_ = 0;\n};\ngoog.events.ListenerMap.prototype.getTypeCount = function() {\n  return this.typeCount_;\n};\ngoog.events.ListenerMap.prototype.getListenerCount = function() {\n  var count = 0, type;\n  for (type in this.listeners) {\n    count += this.listeners[type].length;\n  }\n  return count;\n};\ngoog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {\n  var typeStr = type.toString(), listenerArray = this.listeners[typeStr];\n  listenerArray || (listenerArray = this.listeners[typeStr] = [], this.typeCount_++);\n  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (-1 < index) {\n    var listenerObj = listenerArray[index];\n    callOnce || (listenerObj.callOnce = !1);\n  } else {\n    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope), listenerObj.callOnce = callOnce, listenerArray.push(listenerObj);\n  }\n  return listenerObj;\n};\ngoog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {\n  var typeStr = type.toString();\n  if (!(typeStr in this.listeners)) {\n    return !1;\n  }\n  var listenerArray = this.listeners[typeStr], index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);\n  return -1 < index ? (listenerArray[index].markAsRemoved(), module$contents$goog$array_removeAt(listenerArray, index), 0 == listenerArray.length && (delete this.listeners[typeStr], this.typeCount_--), !0) : !1;\n};\ngoog.events.ListenerMap.prototype.removeByKey = function(listener) {\n  var type = listener.type;\n  if (!(type in this.listeners)) {\n    return !1;\n  }\n  var removed = module$contents$goog$array_remove(this.listeners[type], listener);\n  removed && (listener.markAsRemoved(), 0 == this.listeners[type].length && (delete this.listeners[type], this.typeCount_--));\n  return removed;\n};\ngoog.events.ListenerMap.prototype.removeAll = function(opt_type) {\n  var typeStr = opt_type && opt_type.toString(), count = 0, type;\n  for (type in this.listeners) {\n    if (!typeStr || type == typeStr) {\n      for (var listenerArray = this.listeners[type], i = 0; i < listenerArray.length; i++) {\n        ++count, listenerArray[i].markAsRemoved();\n      }\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return count;\n};\ngoog.events.ListenerMap.prototype.getListeners = function(type, capture) {\n  var listenerArray = this.listeners[type.toString()], rv = [];\n  if (listenerArray) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      var listenerObj = listenerArray[i];\n      listenerObj.capture == capture && rv.push(listenerObj);\n    }\n  }\n  return rv;\n};\ngoog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {\n  var listenerArray = this.listeners[type.toString()], i = -1;\n  listenerArray && (i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope));\n  return -1 < i ? listenerArray[i] : null;\n};\ngoog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {\n  var hasType = void 0 !== opt_type, typeStr = hasType ? opt_type.toString() : \"\", hasCapture = void 0 !== opt_capture;\n  return module$contents$goog$object_some(this.listeners, function(listenerArray, type) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      if (!(hasType && listenerArray[i].type != typeStr || hasCapture && listenerArray[i].capture != opt_capture)) {\n        return !0;\n      }\n    }\n    return !1;\n  });\n};\ngoog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listenerObj = listenerArray[i];\n    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {\n      return i;\n    }\n  }\n  return -1;\n};\ngoog.events.Key = {};\ngoog.events.ListenableType = {};\ngoog.events.LISTENER_MAP_PROP_ = \"closure_lm_\" + (1e6 * Math.random() | 0);\ngoog.events.onString_ = \"on\";\ngoog.events.onStringMap_ = {};\ngoog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};\ngoog.events.CAPTURE_SIMULATION_MODE = 2;\ngoog.events.listenerCountEstimate_ = 0;\ngoog.events.listen = function(src, type, listener, opt_options, opt_handler) {\n  if (opt_options && opt_options.once) {\n    return goog.events.listenOnce(src, type, listener, opt_options, opt_handler);\n  }\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listen(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  listener = goog.events.wrapListener(listener);\n  return goog.events.Listenable.isImplementedBy(src) ? src.listen(type, listener, goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options, opt_handler) : goog.events.listen_(src, type, listener, !1, opt_options, opt_handler);\n};\ngoog.events.listen_ = function(src, type, listener, callOnce, opt_options, opt_handler) {\n  if (!type) {\n    throw Error(\"Invalid event type\");\n  }\n  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options, listenerMap = goog.events.getListenerMap_(src);\n  listenerMap || (src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src));\n  var listenerObj = listenerMap.add(type, listener, callOnce, capture, opt_handler);\n  if (listenerObj.proxy) {\n    return listenerObj;\n  }\n  var proxy = goog.events.getProxy();\n  listenerObj.proxy = proxy;\n  proxy.src = src;\n  proxy.listener = listenerObj;\n  if (src.addEventListener) {\n    goog.events.BrowserFeature.PASSIVE_EVENTS || (opt_options = capture), void 0 === opt_options && (opt_options = !1), src.addEventListener(type.toString(), proxy, opt_options);\n  } else {\n    if (src.attachEvent) {\n      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);\n    } else {\n      if (src.addListener && src.removeListener) {\n        goog.asserts.assert(\"change\" === type, \"MediaQueryList only has a change event\"), src.addListener(proxy);\n      } else {\n        throw Error(\"addEventListener and attachEvent are unavailable.\");\n      }\n    }\n  }\n  goog.events.listenerCountEstimate_++;\n  return listenerObj;\n};\ngoog.events.getProxy = function() {\n  var proxyCallbackFunction = goog.events.handleBrowserEvent_, f = function(eventObject) {\n    return proxyCallbackFunction.call(f.src, f.listener, eventObject);\n  };\n  return f;\n};\ngoog.events.listenOnce = function(src, type, listener, opt_options, opt_handler) {\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  listener = goog.events.wrapListener(listener);\n  return goog.events.Listenable.isImplementedBy(src) ? src.listenOnce(type, listener, goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options, opt_handler) : goog.events.listen_(src, type, listener, !0, opt_options, opt_handler);\n};\ngoog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.listen(src, listener, opt_capt, opt_handler);\n};\ngoog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlisten(type, listener, capture, opt_handler);\n  }\n  if (!src) {\n    return !1;\n  }\n  var listenerMap = goog.events.getListenerMap_(src);\n  if (listenerMap) {\n    var listenerObj = listenerMap.getListener(type, listener, capture, opt_handler);\n    if (listenerObj) {\n      return goog.events.unlistenByKey(listenerObj);\n    }\n  }\n  return !1;\n};\ngoog.events.unlistenByKey = function(key) {\n  if (\"number\" === typeof key || !key || key.removed) {\n    return !1;\n  }\n  var src = key.src;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlistenByKey(key);\n  }\n  var type = key.type, proxy = key.proxy;\n  src.removeEventListener ? src.removeEventListener(type, proxy, key.capture) : src.detachEvent ? src.detachEvent(goog.events.getOnString_(type), proxy) : src.addListener && src.removeListener && src.removeListener(proxy);\n  goog.events.listenerCountEstimate_--;\n  var listenerMap = goog.events.getListenerMap_(src);\n  listenerMap ? (listenerMap.removeByKey(key), 0 == listenerMap.getTypeCount() && (listenerMap.src = null, src[goog.events.LISTENER_MAP_PROP_] = null)) : key.markAsRemoved();\n  return !0;\n};\ngoog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.unlisten(src, listener, opt_capt, opt_handler);\n};\ngoog.events.removeAll = function(obj, opt_type) {\n  if (!obj) {\n    return 0;\n  }\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.removeAllListeners(opt_type);\n  }\n  var listenerMap = goog.events.getListenerMap_(obj);\n  if (!listenerMap) {\n    return 0;\n  }\n  var count = 0, typeStr = opt_type && opt_type.toString(), type;\n  for (type in listenerMap.listeners) {\n    if (!typeStr || type == typeStr) {\n      for (var listeners = listenerMap.listeners[type].concat(), i = 0; i < listeners.length; ++i) {\n        goog.events.unlistenByKey(listeners[i]) && ++count;\n      }\n    }\n  }\n  return count;\n};\ngoog.events.getListeners = function(obj, type, capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.getListeners(type, capture);\n  }\n  if (!obj) {\n    return [];\n  }\n  var listenerMap = goog.events.getListenerMap_(obj);\n  return listenerMap ? listenerMap.getListeners(type, capture) : [];\n};\ngoog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {\n  listener = goog.events.wrapListener(listener);\n  var capture = !!opt_capt;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.getListener(type, listener, capture, opt_handler);\n  }\n  if (!src) {\n    return null;\n  }\n  var listenerMap = goog.events.getListenerMap_(src);\n  return listenerMap ? listenerMap.getListener(type, listener, capture, opt_handler) : null;\n};\ngoog.events.hasListener = function(obj, opt_type, opt_capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.hasListener(opt_type, opt_capture);\n  }\n  var listenerMap = goog.events.getListenerMap_(obj);\n  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);\n};\ngoog.events.expose = function(e) {\n  var str = [], key;\n  for (key in e) {\n    e[key] && e[key].id ? str.push(key + \" = \" + e[key] + \" (\" + e[key].id + \")\") : str.push(key + \" = \" + e[key]);\n  }\n  return str.join(\"\\n\");\n};\ngoog.events.getOnString_ = function(type) {\n  return type in goog.events.onStringMap_ ? goog.events.onStringMap_[type] : goog.events.onStringMap_[type] = goog.events.onString_ + type;\n};\ngoog.events.fireListeners = function(obj, type, capture, eventObject) {\n  return goog.events.Listenable.isImplementedBy(obj) ? obj.fireListeners(type, capture, eventObject) : goog.events.fireListeners_(obj, type, capture, eventObject);\n};\ngoog.events.fireListeners_ = function(obj, type, capture, eventObject) {\n  var retval = !0, listenerMap = goog.events.getListenerMap_(obj);\n  if (listenerMap) {\n    var listenerArray = listenerMap.listeners[type.toString()];\n    if (listenerArray) {\n      listenerArray = listenerArray.concat();\n      for (var i = 0; i < listenerArray.length; i++) {\n        var listener = listenerArray[i];\n        if (listener && listener.capture == capture && !listener.removed) {\n          var result = goog.events.fireListener(listener, eventObject);\n          retval = retval && !1 !== result;\n        }\n      }\n    }\n  }\n  return retval;\n};\ngoog.events.fireListener = function(listener, eventObject) {\n  var listenerFn = listener.listener, listenerHandler = listener.handler || listener.src;\n  listener.callOnce && goog.events.unlistenByKey(listener);\n  return listenerFn.call(listenerHandler, eventObject);\n};\ngoog.events.getTotalListenerCount = function() {\n  return goog.events.listenerCountEstimate_;\n};\ngoog.events.dispatchEvent = function(src, e) {\n  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), \"Can not use goog.events.dispatchEvent with non-goog.events.Listenable instance.\");\n  return src.dispatchEvent(e);\n};\ngoog.events.protectBrowserEventEntryPoint = function(errorHandler) {\n  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);\n};\ngoog.events.handleBrowserEvent_ = function(listener, opt_evt) {\n  return listener.removed ? !0 : goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));\n};\ngoog.events.markIeEvent_ = function(e) {\n  var useReturnValue = !1;\n  if (0 == e.keyCode) {\n    try {\n      e.keyCode = -1;\n      return;\n    } catch (ex) {\n      useReturnValue = !0;\n    }\n  }\n  if (useReturnValue || void 0 == e.returnValue) {\n    e.returnValue = !0;\n  }\n};\ngoog.events.isMarkedIeEvent_ = function(e) {\n  return 0 > e.keyCode || void 0 != e.returnValue;\n};\ngoog.events.uniqueIdCounter_ = 0;\ngoog.events.getUniqueId = function(identifier) {\n  return identifier + \"_\" + goog.events.uniqueIdCounter_++;\n};\ngoog.events.getListenerMap_ = function(src) {\n  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];\n  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;\n};\ngoog.events.LISTENER_WRAPPER_PROP_ = \"__closure_events_fn_\" + (1e9 * Math.random() >>> 0);\ngoog.events.wrapListener = function(listener) {\n  goog.asserts.assert(listener, \"Listener can not be null.\");\n  if (\"function\" === typeof listener) {\n    return listener;\n  }\n  goog.asserts.assert(listener.handleEvent, \"An object listener must have handleEvent method.\");\n  listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {\n    return listener.handleEvent(e);\n  });\n  return listener[goog.events.LISTENER_WRAPPER_PROP_];\n};\ngoog.debug.entryPointRegistry.register(function(transformer) {\n  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);\n});\ngoog.events.EventTarget = function() {\n  goog.Disposable.call(this);\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n  this.actualEventTarget_ = this;\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  return this.parentEventTarget_;\n};\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  this.parentEventTarget_ = parent;\n};\ngoog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\ngoog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  this.assertInitialized_();\n  var ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    var ancestorsTree = [];\n    for (var ancestorCount = 1; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor), goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, \"infinite loop\");\n    }\n  }\n  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);\n};\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\ngoog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(String(type), listener, !1, opt_useCapture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.add(String(type), listener, !0, opt_useCapture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  return this.eventTargetListeners_.removeByKey(key);\n};\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  return this.eventTargetListeners_ ? this.eventTargetListeners_.removeAll(opt_type) : 0;\n};\ngoog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return !0;\n  }\n  listenerArray = listenerArray.concat();\n  for (var rv = !0, i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener, listenerHandler = listener.handler || listener.src;\n      listener.callOnce && this.unlistenByKey(listener);\n      rv = !1 !== listenerFn.call(listenerHandler, eventObject) && rv;\n    }\n  }\n  return rv && !eventObject.defaultPrevented;\n};\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\ngoog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {\n  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {\n  return this.eventTargetListeners_.hasListener(void 0 !== opt_type ? String(opt_type) : void 0, opt_capture);\n};\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  this.actualEventTarget_ = target;\n};\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  goog.asserts.assert(this.eventTargetListeners_, \"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?\");\n};\ngoog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {\n  var type = e.type || e;\n  if (\"string\" === typeof e) {\n    e = new goog.events.Event(e, target);\n  } else {\n    if (e instanceof goog.events.Event) {\n      e.target = e.target || target;\n    } else {\n      var oldEvent = e;\n      e = new goog.events.Event(type, target);\n      module$contents$goog$object_extend(e, oldEvent);\n    }\n  }\n  var rv = !0;\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1; !e.hasPropagationStopped() && 0 <= i; i--) {\n      var currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, !0, e) && rv;\n    }\n  }\n  e.hasPropagationStopped() || (currentTarget = e.currentTarget = target, rv = currentTarget.fireListeners(type, !0, e) && rv, e.hasPropagationStopped() || (rv = currentTarget.fireListeners(type, !1, e) && rv));\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.hasPropagationStopped() && i < opt_ancestorsTree.length; i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i], rv = currentTarget.fireListeners(type, !1, e) && rv;\n    }\n  }\n  return rv;\n};\ngoog.structs = {};\ngoog.structs.Collection = function() {\n};\ngoog.collections = {};\ngoog.collections.iters = {};\nfunction module$contents$goog$collections$iters_getIterator(iterable) {\n  return iterable[goog.global.Symbol.iterator]();\n}\ngoog.collections.iters.getIterator = module$contents$goog$collections$iters_getIterator;\ngoog.collections.iters.forEach = function(iterable, f) {\n  for (var $jscomp$iter$5 = $jscomp.makeIterator(iterable), $jscomp$key$elem = $jscomp$iter$5.next(); !$jscomp$key$elem.done; $jscomp$key$elem = $jscomp$iter$5.next()) {\n    f($jscomp$key$elem.value);\n  }\n};\nvar module$contents$goog$collections$iters_MapIterator = function(childIter, mapFn) {\n  this.childIterator_ = module$contents$goog$collections$iters_getIterator(childIter);\n  this.mapFn_ = mapFn;\n  this.nextIndex_ = 0;\n};\nmodule$contents$goog$collections$iters_MapIterator.prototype[Symbol.iterator] = function() {\n  return this;\n};\nmodule$contents$goog$collections$iters_MapIterator.prototype.next = function() {\n  var childResult = this.childIterator_.next();\n  return {value:childResult.done ? void 0 : this.mapFn_.call(void 0, childResult.value, this.nextIndex_++), done:childResult.done,};\n};\ngoog.collections.iters.map = function(iterable, f) {\n  return new module$contents$goog$collections$iters_MapIterator(iterable, f);\n};\nvar module$contents$goog$collections$iters_FilterIterator = function(childIter, filterFn) {\n  this.childIter_ = module$contents$goog$collections$iters_getIterator(childIter);\n  this.filterFn_ = filterFn;\n  this.nextIndex_ = 0;\n};\nmodule$contents$goog$collections$iters_FilterIterator.prototype[Symbol.iterator] = function() {\n  return this;\n};\nmodule$contents$goog$collections$iters_FilterIterator.prototype.next = function() {\n  for (;;) {\n    var childResult = this.childIter_.next();\n    if (childResult.done) {\n      return {done:!0, value:void 0};\n    }\n    if (this.filterFn_.call(void 0, childResult.value, this.nextIndex_++)) {\n      return childResult;\n    }\n  }\n};\ngoog.collections.iters.filter = function(iterable, f) {\n  return new module$contents$goog$collections$iters_FilterIterator(iterable, f);\n};\nvar module$contents$goog$collections$iters_ConcatIterator = function(iterators) {\n  this.iterators_ = iterators;\n  this.iterIndex_ = 0;\n};\nmodule$contents$goog$collections$iters_ConcatIterator.prototype[Symbol.iterator] = function() {\n  return this;\n};\nmodule$contents$goog$collections$iters_ConcatIterator.prototype.next = function() {\n  for (; this.iterIndex_ < this.iterators_.length;) {\n    var result = this.iterators_[this.iterIndex_].next();\n    if (!result.done) {\n      return result;\n    }\n    this.iterIndex_++;\n  }\n  return {done:!0};\n};\ngoog.collections.iters.concat = function() {\n  return new module$contents$goog$collections$iters_ConcatIterator($jscomp.getRestArguments.apply(0, arguments).map(module$contents$goog$collections$iters_getIterator));\n};\ngoog.functions = {};\ngoog.functions.constant = function(retValue) {\n  return function() {\n    return retValue;\n  };\n};\ngoog.functions.FALSE = function() {\n  return !1;\n};\ngoog.functions.TRUE = function() {\n  return !0;\n};\ngoog.functions.NULL = function() {\n  return null;\n};\ngoog.functions.UNDEFINED = function() {\n};\ngoog.functions.EMPTY = goog.functions.UNDEFINED;\ngoog.functions.identity = function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\ngoog.functions.error = function(message) {\n  return function() {\n    throw Error(message);\n  };\n};\ngoog.functions.fail = function(err) {\n  return function() {\n    throw err;\n  };\n};\ngoog.functions.lock = function(f, opt_numArgs) {\n  opt_numArgs = opt_numArgs || 0;\n  return function() {\n    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\ngoog.functions.nth = function(n) {\n  return function() {\n    return arguments[n];\n  };\n};\ngoog.functions.partialRight = function(fn, var_args) {\n  var rightArgs = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var self = this;\n    self === goog.global && (self = void 0);\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\ngoog.functions.withReturnValue = function(f, retValue) {\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\ngoog.functions.equalTo = function(value, opt_useLooseComparison) {\n  return function(other) {\n    return opt_useLooseComparison ? value == other : value === other;\n  };\n};\ngoog.functions.compose = function(fn, var_args) {\n  var functions = arguments, length = functions.length;\n  return function() {\n    var result;\n    length && (result = functions[length - 1].apply(this, arguments));\n    for (var i = length - 2; 0 <= i; i--) {\n      result = functions[i].call(this, result);\n    }\n    return result;\n  };\n};\ngoog.functions.sequence = function(var_args) {\n  var functions = arguments, length = functions.length;\n  return function() {\n    for (var result, i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\ngoog.functions.and = function(var_args) {\n  var functions = arguments, length = functions.length;\n  return function() {\n    for (var i = 0; i < length; i++) {\n      if (!functions[i].apply(this, arguments)) {\n        return !1;\n      }\n    }\n    return !0;\n  };\n};\ngoog.functions.or = function(var_args) {\n  var functions = arguments, length = functions.length;\n  return function() {\n    for (var i = 0; i < length; i++) {\n      if (functions[i].apply(this, arguments)) {\n        return !0;\n      }\n    }\n    return !1;\n  };\n};\ngoog.functions.not = function(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\ngoog.functions.create = function(constructor, var_args) {\n  var temp = function() {\n  };\n  temp.prototype = constructor.prototype;\n  var obj = new temp();\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\ngoog.functions.CACHE_RETURN_VALUE = !0;\ngoog.functions.cacheReturnValue = function(fn) {\n  var called = !1, value;\n  return function() {\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n    called || (value = fn(), called = !0);\n    return value;\n  };\n};\ngoog.functions.once = function(f) {\n  var inner = f;\n  return function() {\n    if (inner) {\n      var tmp = inner;\n      inner = null;\n      tmp();\n    }\n  };\n};\ngoog.functions.debounce = function(f, interval, opt_scope) {\n  var timeout = 0;\n  return function(var_args) {\n    goog.global.clearTimeout(timeout);\n    var args = arguments;\n    timeout = goog.global.setTimeout(function() {\n      f.apply(opt_scope, args);\n    }, interval);\n  };\n};\ngoog.functions.throttle = function(f, interval, opt_scope) {\n  var timeout = 0, shouldFire = !1, storedArgs = [], handleTimeout = function() {\n    timeout = 0;\n    shouldFire && (shouldFire = !1, fire());\n  }, fire = function() {\n    timeout = goog.global.setTimeout(handleTimeout, interval);\n    var args = storedArgs;\n    storedArgs = [];\n    f.apply(opt_scope, args);\n  };\n  return function(var_args) {\n    storedArgs = arguments;\n    timeout ? shouldFire = !0 : fire();\n  };\n};\ngoog.functions.rateLimit = function(f, interval, opt_scope) {\n  var timeout = 0, handleTimeout = function() {\n    timeout = 0;\n  };\n  return function(var_args) {\n    timeout || (timeout = goog.global.setTimeout(handleTimeout, interval), f.apply(opt_scope, arguments));\n  };\n};\ngoog.functions.isFunction = function(val) {\n  return \"function\" === typeof val;\n};\ngoog.math = {};\ngoog.math.randomInt = function(a) {\n  return Math.floor(Math.random() * a);\n};\ngoog.math.uniformRandom = function(a, b) {\n  return a + Math.random() * (b - a);\n};\ngoog.math.clamp = function(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\ngoog.math.modulo = function(a, b) {\n  var r = a % b;\n  return 0 > r * b ? r + b : r;\n};\ngoog.math.lerp = function(a, b, x) {\n  return a + x * (b - a);\n};\ngoog.math.nearlyEquals = function(a, b, opt_tolerance) {\n  return Math.abs(a - b) <= (opt_tolerance || 0.000001);\n};\ngoog.math.standardAngle = function(angle) {\n  return goog.math.modulo(angle, 360);\n};\ngoog.math.standardAngleInRadians = function(angle) {\n  return goog.math.modulo(angle, 2 * Math.PI);\n};\ngoog.math.toRadians = function(angleDegrees) {\n  return angleDegrees * Math.PI / 180;\n};\ngoog.math.toDegrees = function(angleRadians) {\n  return 180 * angleRadians / Math.PI;\n};\ngoog.math.angleDx = function(degrees, radius) {\n  return radius * Math.cos(goog.math.toRadians(degrees));\n};\ngoog.math.angleDy = function(degrees, radius) {\n  return radius * Math.sin(goog.math.toRadians(degrees));\n};\ngoog.math.angle = function(x1, y1, x2, y2) {\n  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));\n};\ngoog.math.angleDifference = function(startAngle, endAngle) {\n  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);\n  180 < d ? d -= 360 : -180 >= d && (d = 360 + d);\n  return d;\n};\ngoog.math.sign = function(x) {\n  return 0 < x ? 1 : 0 > x ? -1 : x;\n};\ngoog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {\n  for (var compare = opt_compareFn || function(a, b) {\n    return a == b;\n  }, collect = opt_collectorFn || function(i1, i2) {\n    return array1[i1];\n  }, length1 = array1.length, length2 = array2.length, arr = [], i = 0; i < length1 + 1; i++) {\n    arr[i] = [], arr[i][0] = 0;\n  }\n  for (var j = 0; j < length2 + 1; j++) {\n    arr[0][j] = 0;\n  }\n  for (i = 1; i <= length1; i++) {\n    for (j = 1; j <= length2; j++) {\n      compare(array1[i - 1], array2[j - 1]) ? arr[i][j] = arr[i - 1][j - 1] + 1 : arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);\n    }\n  }\n  var result = [];\n  i = length1;\n  for (j = length2; 0 < i && 0 < j;) {\n    compare(array1[i - 1], array2[j - 1]) ? (result.unshift(collect(i - 1, j - 1)), i--, j--) : arr[i - 1][j] > arr[i][j - 1] ? i-- : j--;\n  }\n  return result;\n};\ngoog.math.sum = function(var_args) {\n  return Array.prototype.reduce.call(arguments, function(sum, value) {\n    return sum + value;\n  }, 0);\n};\ngoog.math.average = function(var_args) {\n  return goog.math.sum.apply(null, arguments) / arguments.length;\n};\ngoog.math.sampleVariance = function(var_args) {\n  var sampleSize = arguments.length;\n  if (2 > sampleSize) {\n    return 0;\n  }\n  var mean = goog.math.average.apply(null, arguments);\n  return goog.math.sum.apply(null, Array.prototype.map.call(arguments, function(val) {\n    return Math.pow(val - mean, 2);\n  })) / (sampleSize - 1);\n};\ngoog.math.standardDeviation = function(var_args) {\n  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));\n};\ngoog.math.isInt = function(num) {\n  return isFinite(num) && 0 == num % 1;\n};\ngoog.math.isFiniteNumber = function(num) {\n  return isFinite(num);\n};\ngoog.math.isNegativeZero = function(num) {\n  return 0 == num && 0 > 1 / num;\n};\ngoog.math.log10Floor = function(num) {\n  if (0 < num) {\n    var x = Math.round(Math.log(num) * Math.LOG10E);\n    return x - (parseFloat(\"1e\" + x) > num ? 1 : 0);\n  }\n  return 0 == num ? -Infinity : NaN;\n};\ngoog.math.safeFloor = function(num, opt_epsilon) {\n  goog.asserts.assert(void 0 === opt_epsilon || 0 < opt_epsilon);\n  return Math.floor(num + (opt_epsilon || 2e-15));\n};\ngoog.math.safeCeil = function(num, opt_epsilon) {\n  goog.asserts.assert(void 0 === opt_epsilon || 0 < opt_epsilon);\n  return Math.ceil(num - (opt_epsilon || 2e-15));\n};\ngoog.iter = {};\ngoog.iter.Iterable = {};\ngoog.iter.StopIteration = \"StopIteration\" in goog.global ? goog.global.StopIteration : {message:\"StopIteration\", stack:\"\"};\ngoog.iter.Iterator = function() {\n};\ngoog.iter.Iterator.prototype.nextValueOrThrow = function() {\n  throw goog.iter.StopIteration;\n};\ngoog.iter.Iterator.prototype.next = function() {\n  return goog.iter.ES6_ITERATOR_DONE;\n};\ngoog.iter.ES6_ITERATOR_DONE = goog.debug.freeze({done:!0, value:void 0});\ngoog.iter.createEs6IteratorYield = function(value) {\n  return {value:value, done:!1};\n};\ngoog.iter.toEs4IteratorNext = function(es6NextValue) {\n  if (es6NextValue.done) {\n    throw goog.iter.StopIteration;\n  }\n  return es6NextValue.value;\n};\ngoog.iter.checkNoImplicitStopIterationInEs6 = function(ex) {\n  if (ex === goog.iter.StopIteration) {\n    throw Error(\"ES6 Iteration protocol does NOT adjust control flow when StopIteration is thrown from callback helper functions. If your code relies on this behavior, consider throwing a different error and catching it to terminate iteration.\");\n  }\n  throw ex;\n};\ngoog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {\n  return this;\n};\ngoog.iter.toIterator = function(iterable) {\n  if (iterable instanceof goog.iter.Iterator) {\n    return iterable;\n  }\n  if (\"function\" == typeof iterable.__iterator__) {\n    return iterable.__iterator__(!1);\n  }\n  if (goog.isArrayLike(iterable)) {\n    var i = 0, newIter = new goog.iter.Iterator();\n    newIter.next = function() {\n      for (;;) {\n        if (i >= iterable.length) {\n          return goog.iter.ES6_ITERATOR_DONE;\n        }\n        if (i in iterable) {\n          return goog.iter.createEs6IteratorYield(iterable[i++]);\n        }\n        i++;\n      }\n    };\n    var iterNext = newIter.next;\n    newIter.nextValueOrThrow = function() {\n      return goog.iter.toEs4IteratorNext(iterNext.call(newIter));\n    };\n    return newIter;\n  }\n  throw Error(\"Not implemented\");\n};\ngoog.iter.forEach = function(iterable, f, opt_obj) {\n  if (goog.isArrayLike(iterable)) {\n    try {\n      module$contents$goog$array_forEach(iterable, f, opt_obj);\n    } catch (ex) {\n      goog.iter.checkNoImplicitStopIterationInEs6(ex);\n    }\n  } else {\n    for (iterable = goog.iter.toIterator(iterable);;) {\n      var val = void 0;\n      try {\n        val = iterable.nextValueOrThrow();\n      } catch (ex$39) {\n        if (ex$39 === goog.iter.StopIteration) {\n          break;\n        }\n        throw ex$39;\n      }\n      try {\n        f.call(opt_obj, val, void 0, iterable);\n      } catch (ex$40) {\n        goog.iter.checkNoImplicitStopIterationInEs6(ex$40);\n      }\n    }\n  }\n};\ngoog.iter.filter = function(iterable, f, opt_obj) {\n  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator();\n  newIter.next = function() {\n    for (;;) {\n      var val = void 0;\n      try {\n        val = iterator.nextValueOrThrow();\n      } catch (ex) {\n        if (ex === goog.iter.StopIteration) {\n          return goog.iter.ES6_ITERATOR_DONE;\n        }\n        throw ex;\n      }\n      try {\n        if (f.call(opt_obj, val, void 0, iterator)) {\n          return goog.iter.createEs6IteratorYield(val);\n        }\n      } catch (ex$41) {\n        goog.iter.checkNoImplicitStopIterationInEs6(ex$41);\n      }\n    }\n  };\n  var iterNext = newIter.next;\n  newIter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(newIter));\n  };\n  return newIter;\n};\ngoog.iter.filterFalse = function(iterable, f, opt_obj) {\n  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);\n};\ngoog.iter.range = function(startOrStop, opt_stop, opt_step) {\n  var start = 0, stop = startOrStop, step = opt_step || 1;\n  1 < arguments.length && (start = startOrStop, stop = +opt_stop);\n  if (0 == step) {\n    throw Error(\"Range step argument must not be zero\");\n  }\n  var newIter = new goog.iter.Iterator();\n  newIter.next = function() {\n    if (0 < step && start >= stop || 0 > step && start <= stop) {\n      return goog.iter.ES6_ITERATOR_DONE;\n    }\n    var rv = start;\n    start += step;\n    return goog.iter.createEs6IteratorYield(rv);\n  };\n  var iterNext = newIter.next;\n  newIter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(newIter));\n  };\n  return newIter;\n};\ngoog.iter.join = function(iterable, deliminator) {\n  return goog.iter.toArray(iterable).join(deliminator);\n};\ngoog.iter.map = function(iterable, f, opt_obj) {\n  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator();\n  newIter.next = function() {\n    try {\n      var val = iterator.nextValueOrThrow();\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n    try {\n      var mappedVal = f.call(opt_obj, val, void 0, iterator);\n      return goog.iter.createEs6IteratorYield(mappedVal);\n    } catch (ex$42) {\n      goog.iter.checkNoImplicitStopIterationInEs6(ex$42);\n    }\n  };\n  var iterNext = newIter.next;\n  newIter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(newIter));\n  };\n  return newIter;\n};\ngoog.iter.reduce = function(iterable, f, val$jscomp$0, opt_obj) {\n  var rval = val$jscomp$0;\n  goog.iter.forEach(iterable, function(val) {\n    rval = f.call(opt_obj, rval, val);\n  });\n  return rval;\n};\ngoog.iter.some = function(iterable, f, opt_obj) {\n  for (iterable = goog.iter.toIterator(iterable);;) {\n    var val = void 0;\n    try {\n      val = iterable.nextValueOrThrow();\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return !1;\n      }\n      throw ex;\n    }\n    try {\n      if (f.call(opt_obj, val, void 0, iterable)) {\n        return !0;\n      }\n    } catch (ex$43) {\n      goog.iter.checkNoImplicitStopIterationInEs6(ex$43);\n    }\n  }\n};\ngoog.iter.every = function(iterable, f, opt_obj) {\n  for (iterable = goog.iter.toIterator(iterable);;) {\n    var val = void 0;\n    try {\n      val = iterable.nextValueOrThrow();\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return !0;\n      }\n      throw ex;\n    }\n    try {\n      if (!f.call(opt_obj, val, void 0, iterable)) {\n        return !1;\n      }\n    } catch (ex$44) {\n      goog.iter.checkNoImplicitStopIterationInEs6(ex$44);\n    }\n  }\n};\ngoog.iter.chain = function(var_args) {\n  return goog.iter.chainFromIterable(arguments);\n};\ngoog.iter.chainFromIterable = function(iterable) {\n  var iterator = goog.iter.toIterator(iterable), iter = new goog.iter.Iterator(), current = null;\n  iter.next = function() {\n    for (;;) {\n      if (null == current) {\n        try {\n          var it = iterator.nextValueOrThrow();\n          current = goog.iter.toIterator(it);\n        } catch (ex) {\n          if (ex === goog.iter.StopIteration) {\n            return goog.iter.ES6_ITERATOR_DONE;\n          }\n          throw ex;\n        }\n      }\n      try {\n        var value = current.nextValueOrThrow();\n        return goog.iter.createEs6IteratorYield(value);\n      } catch (ex$45) {\n        if (ex$45 !== goog.iter.StopIteration) {\n          throw ex$45;\n        }\n        current = null;\n      }\n    }\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.dropWhile = function(iterable, f, opt_obj) {\n  var iterator = goog.iter.toIterator(iterable), newIter = new goog.iter.Iterator(), dropping = !0;\n  newIter.next = function() {\n    for (;;) {\n      var val = void 0;\n      try {\n        val = iterator.nextValueOrThrow();\n      } catch (ex) {\n        if (ex === goog.iter.StopIteration) {\n          return goog.iter.ES6_ITERATOR_DONE;\n        }\n        throw ex;\n      }\n      if (!dropping || !f.call(opt_obj, val, void 0, iterator)) {\n        return dropping = !1, goog.iter.createEs6IteratorYield(val);\n      }\n    }\n  };\n  var iterNext = newIter.next;\n  newIter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(newIter));\n  };\n  return newIter;\n};\ngoog.iter.takeWhile = function(iterable, f, opt_obj) {\n  var iterator = goog.iter.toIterator(iterable), iter = new goog.iter.Iterator();\n  iter.next = function() {\n    try {\n      var val = iterator.nextValueOrThrow();\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n    try {\n      return f.call(opt_obj, val, void 0, iterator) ? goog.iter.createEs6IteratorYield(val) : goog.iter.ES6_ITERATOR_DONE;\n    } catch (ex$46) {\n      goog.iter.checkNoImplicitStopIterationInEs6(ex$46);\n    }\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.toArray = function(iterable) {\n  if (goog.isArrayLike(iterable)) {\n    return module$contents$goog$array_toArray(iterable);\n  }\n  iterable = goog.iter.toIterator(iterable);\n  var array = [];\n  goog.iter.forEach(iterable, function(val) {\n    array.push(val);\n  });\n  return array;\n};\ngoog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {\n  var pairs = goog.iter.zipLongest({}, iterable1, iterable2), equalsFn = opt_equalsFn || module$contents$goog$array_defaultCompareEquality;\n  return goog.iter.every(pairs, function(pair) {\n    return equalsFn(pair[0], pair[1]);\n  });\n};\ngoog.iter.nextOrValue = function(iterable, defaultValue) {\n  try {\n    return goog.iter.toIterator(iterable).nextValueOrThrow();\n  } catch (e) {\n    if (e != goog.iter.StopIteration) {\n      throw e;\n    }\n    return defaultValue;\n  }\n};\ngoog.iter.product = function(var_args) {\n  if (Array.prototype.some.call(arguments, function(arr) {\n    return !arr.length;\n  }) || !arguments.length) {\n    return new goog.iter.Iterator();\n  }\n  var iter = new goog.iter.Iterator(), arrays = arguments, indices = module$contents$goog$array_repeat(0, arrays.length);\n  iter.next = function() {\n    if (indices) {\n      for (var retVal = module$contents$goog$array_map(indices, function(valueIndex, arrayIndex) {\n        return arrays[arrayIndex][valueIndex];\n      }), i = indices.length - 1; 0 <= i; i--) {\n        goog.asserts.assert(indices);\n        if (indices[i] < arrays[i].length - 1) {\n          indices[i]++;\n          break;\n        }\n        if (0 == i) {\n          indices = null;\n          break;\n        }\n        indices[i] = 0;\n      }\n      return goog.iter.createEs6IteratorYield(retVal);\n    }\n    return goog.iter.ES6_ITERATOR_DONE;\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.cycle = function(iterable) {\n  var baseIterator = goog.iter.toIterator(iterable), cache = [], cacheIndex = 0, iter = new goog.iter.Iterator(), useCache = !1;\n  iter.next = function() {\n    var returnElement = null;\n    if (!useCache) {\n      try {\n        return returnElement = baseIterator.nextValueOrThrow(), cache.push(returnElement), goog.iter.createEs6IteratorYield(returnElement);\n      } catch (e) {\n        if (e != goog.iter.StopIteration) {\n          throw e;\n        }\n        if (e === goog.iter.StopIteration && module$contents$goog$array_isEmpty(cache)) {\n          return goog.iter.ES6_ITERATOR_DONE;\n        }\n        useCache = !0;\n      }\n    }\n    returnElement = cache[cacheIndex];\n    cacheIndex = (cacheIndex + 1) % cache.length;\n    return goog.iter.createEs6IteratorYield(returnElement);\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.count = function(opt_start, opt_step) {\n  var counter = opt_start || 0, step = void 0 !== opt_step ? opt_step : 1, iter = new goog.iter.Iterator();\n  iter.next = function() {\n    var returnValue = counter;\n    counter += step;\n    return goog.iter.createEs6IteratorYield(returnValue);\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.repeat = function(value) {\n  var iter = new goog.iter.Iterator();\n  iter.next = function() {\n    return goog.iter.createEs6IteratorYield(value);\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.accumulate = function(iterable) {\n  var iterator = goog.iter.toIterator(iterable), total = 0, iter = new goog.iter.Iterator();\n  iter.next = function() {\n    try {\n      total += iterator.nextValueOrThrow();\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n    return goog.iter.createEs6IteratorYield(total);\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.zip = function(var_args) {\n  var args = arguments, iter = new goog.iter.Iterator();\n  if (0 < args.length) {\n    var iterators = module$contents$goog$array_map(args, goog.iter.toIterator), allDone = !1;\n    iter.next = function() {\n      if (allDone) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      for (var arr = [], i = 0, it = void 0; it = iterators[i++];) {\n        try {\n          arr.push(it.nextValueOrThrow());\n        } catch (ex) {\n          if (ex === goog.iter.StopIteration) {\n            return allDone = !0, goog.iter.ES6_ITERATOR_DONE;\n          }\n          throw ex;\n        }\n      }\n      return goog.iter.createEs6IteratorYield(arr);\n    };\n    var iterNext = iter.next;\n    iter.nextValueOrThrow = function() {\n      return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n    };\n  }\n  return iter;\n};\ngoog.iter.zipLongest = function(fillValue, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1), iter = new goog.iter.Iterator();\n  if (0 < args.length) {\n    var iterators = module$contents$goog$array_map(args, goog.iter.toIterator), allDone = !1;\n    iter.next = function() {\n      if (allDone) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      for (var iteratorsHaveValues = !1, arr = [], i = 0, it = void 0; it = iterators[i++];) {\n        try {\n          arr.push(it.nextValueOrThrow()), iteratorsHaveValues = !0;\n        } catch (ex) {\n          if (ex !== goog.iter.StopIteration) {\n            throw ex;\n          }\n          arr.push(fillValue);\n        }\n      }\n      return iteratorsHaveValues ? goog.iter.createEs6IteratorYield(arr) : (allDone = !0, goog.iter.ES6_ITERATOR_DONE);\n    };\n    var iterNext = iter.next;\n    iter.nextValueOrThrow = function() {\n      return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n    };\n  }\n  return iter;\n};\ngoog.iter.compress = function(iterable, selectors) {\n  var valueIterator = goog.iter.toIterator(iterable), selectorIterator = goog.iter.toIterator(selectors), iter = new goog.iter.Iterator(), allDone = !1;\n  iter.next = function() {\n    if (allDone) {\n      return goog.iter.ES6_ITERATOR_DONE;\n    }\n    for (;;) {\n      var val = void 0, selectorVal = void 0;\n      try {\n        val = valueIterator.nextValueOrThrow(), selectorVal = selectorIterator.nextValueOrThrow();\n      } catch (ex) {\n        if (ex === goog.iter.StopIteration) {\n          return allDone = !0, goog.iter.ES6_ITERATOR_DONE;\n        }\n        throw ex;\n      }\n      if (selectorVal) {\n        return goog.iter.createEs6IteratorYield(val);\n      }\n    }\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {\n  this.iterator = goog.iter.toIterator(iterable);\n  this.keyFunc = opt_keyFunc || goog.functions.identity;\n};\ngoog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);\ngoog.iter.GroupByIterator_.prototype.next = function() {\n  for (; this.currentKey == this.targetKey;) {\n    try {\n      this.currentValue = this.iterator.nextValueOrThrow();\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n    this.currentKey = this.keyFunc(this.currentValue);\n  }\n  this.targetKey = this.currentKey;\n  return goog.iter.createEs6IteratorYield([this.currentKey, this.groupItems_(this.targetKey)]);\n};\ngoog.iter.GroupByIterator_.prototype.nextValueOrThrow = function() {\n  return goog.iter.toEs4IteratorNext(goog.iter.GroupByIterator_.prototype.next.call(this));\n};\ngoog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {\n  for (var arr = []; this.currentKey == targetKey;) {\n    arr.push(this.currentValue);\n    try {\n      this.currentValue = this.iterator.nextValueOrThrow();\n    } catch (ex) {\n      if (ex !== goog.iter.StopIteration) {\n        throw ex;\n      }\n      break;\n    }\n    this.currentKey = this.keyFunc(this.currentValue);\n  }\n  return arr;\n};\ngoog.iter.groupBy = function(iterable, opt_keyFunc) {\n  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);\n};\ngoog.iter.starMap = function(iterable, f, opt_obj) {\n  var iterator = goog.iter.toIterator(iterable), iter = new goog.iter.Iterator();\n  iter.next = function() {\n    try {\n      var args = goog.iter.toArray(iterator.nextValueOrThrow()), value = f.apply(opt_obj, module$contents$goog$array_concat(args, void 0, iterator));\n      return goog.iter.createEs6IteratorYield(value);\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.tee = function(iterable, opt_num) {\n  function addNextIteratorValueToBuffers() {\n    try {\n      for (var val = iterator.nextValueOrThrow(), i = 0, buffer = void 0; buffer = buffers[i++];) {\n        buffer.push(val);\n      }\n      return !0;\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return !1;\n      }\n      throw ex;\n    }\n  }\n  var iterator = goog.iter.toIterator(iterable), buffers = module$contents$goog$array_map(module$contents$goog$array_range(\"number\" === typeof opt_num ? opt_num : 2), function() {\n    return [];\n  });\n  return module$contents$goog$array_map(buffers, function createIterator(buffer) {\n    var iter = new goog.iter.Iterator();\n    iter.next = function() {\n      if (module$contents$goog$array_isEmpty(buffer) && !addNextIteratorValueToBuffers()) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      goog.asserts.assert(!module$contents$goog$array_isEmpty(buffer));\n      return goog.iter.createEs6IteratorYield(buffer.shift());\n    };\n    var iterNext = iter.next;\n    iter.nextValueOrThrow = function() {\n      return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n    };\n    return iter;\n  });\n};\ngoog.iter.enumerate = function(iterable, opt_start) {\n  return goog.iter.zip(goog.iter.count(opt_start), iterable);\n};\ngoog.iter.limit = function(iterable, limitSize) {\n  goog.asserts.assert(goog.math.isInt(limitSize) && 0 <= limitSize);\n  var iterator = goog.iter.toIterator(iterable), iter = new goog.iter.Iterator(), remaining = limitSize;\n  iter.next = function() {\n    if (0 < remaining--) {\n      try {\n        return goog.iter.createEs6IteratorYield(iterator.nextValueOrThrow());\n      } catch (ex) {\n        if (ex === goog.iter.StopIteration) {\n          return goog.iter.ES6_ITERATOR_DONE;\n        }\n        throw ex;\n      }\n    }\n    return goog.iter.ES6_ITERATOR_DONE;\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.consume = function(iterable, count) {\n  goog.asserts.assert(goog.math.isInt(count) && 0 <= count);\n  for (var iterator = goog.iter.toIterator(iterable); 0 < count--;) {\n    goog.iter.nextOrValue(iterator, null);\n  }\n  return iterator;\n};\ngoog.iter.slice = function(iterable, start, opt_end) {\n  goog.asserts.assert(goog.math.isInt(start) && 0 <= start);\n  var iterator = goog.iter.consume(iterable, start);\n  \"number\" === typeof opt_end && (goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start), iterator = goog.iter.limit(iterator, opt_end - start));\n  return iterator;\n};\ngoog.iter.hasDuplicates_ = function(arr) {\n  var deduped = [];\n  module$contents$goog$array_removeDuplicates(arr, deduped);\n  return arr.length != deduped.length;\n};\ngoog.iter.permutations = function(iterable, opt_length) {\n  var elements = goog.iter.toArray(iterable), product = goog.iter.product.apply(void 0, module$contents$goog$array_repeat(elements, \"number\" === typeof opt_length ? opt_length : elements.length));\n  return goog.iter.filter(product, function(arr) {\n    return !goog.iter.hasDuplicates_(arr);\n  });\n};\ngoog.iter.combinations = function(iterable, length) {\n  function getIndexFromElements(index) {\n    return elements[index];\n  }\n  var elements = goog.iter.toArray(iterable), indexes = goog.iter.range(elements.length), indexIterator = goog.iter.permutations(indexes, length), sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {\n    return module$contents$goog$array_isSorted(arr);\n  }), iter = new goog.iter.Iterator();\n  iter.next = function() {\n    try {\n      var nextArr = sortedIndexIterator.nextValueOrThrow();\n      return goog.iter.createEs6IteratorYield(module$contents$goog$array_map(nextArr, getIndexFromElements));\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.combinationsWithReplacement = function(iterable, length) {\n  function getIndexFromElements(index) {\n    return elements[index];\n  }\n  var elements = goog.iter.toArray(iterable), indexes = module$contents$goog$array_range(elements.length), indexIterator = goog.iter.product.apply(void 0, module$contents$goog$array_repeat(indexes, length)), sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {\n    return module$contents$goog$array_isSorted(arr);\n  }), iter = new goog.iter.Iterator();\n  iter.next = function() {\n    try {\n      return goog.iter.createEs6IteratorYield(module$contents$goog$array_map(sortedIndexIterator.nextValueOrThrow(), getIndexFromElements));\n    } catch (ex) {\n      if (ex === goog.iter.StopIteration) {\n        return goog.iter.ES6_ITERATOR_DONE;\n      }\n      throw ex;\n    }\n  };\n  var iterNext = iter.next;\n  iter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(iter));\n  };\n  return iter;\n};\ngoog.iter.es6 = {};\nvar module$contents$goog$iter$es6_ShimIterable = function() {\n};\nmodule$contents$goog$iter$es6_ShimIterable.prototype.__iterator__ = function() {\n};\nmodule$contents$goog$iter$es6_ShimIterable.prototype.toGoog = function() {\n};\nmodule$contents$goog$iter$es6_ShimIterable.prototype.toEs6 = function() {\n};\nmodule$contents$goog$iter$es6_ShimIterable.of = function(iter) {\n  if (iter instanceof module$contents$goog$iter$es6_ShimIterableImpl || iter instanceof module$contents$goog$iter$es6_ShimGoogIterator || iter instanceof module$contents$goog$iter$es6_ShimEs6Iterator) {\n    return iter;\n  }\n  if (\"function\" == typeof iter.nextValueOrThrow) {\n    return new module$contents$goog$iter$es6_ShimIterableImpl(function() {\n      return module$contents$goog$iter$es6_wrapGoog(iter);\n    });\n  }\n  if (\"function\" == typeof iter[Symbol.iterator]) {\n    return new module$contents$goog$iter$es6_ShimIterableImpl(function() {\n      return iter[Symbol.iterator]();\n    });\n  }\n  if (\"function\" == typeof iter.__iterator__) {\n    return new module$contents$goog$iter$es6_ShimIterableImpl(function() {\n      return module$contents$goog$iter$es6_wrapGoog(iter.__iterator__());\n    });\n  }\n  throw Error(\"Not an iterator or iterable.\");\n};\nvar module$contents$goog$iter$es6_wrapGoog = function(iter) {\n  if (!(iter instanceof goog.iter.Iterator)) {\n    return iter;\n  }\n  var done = !1;\n  return {next:function() {\n    for (var value; !done;) {\n      try {\n        value = iter.nextValueOrThrow();\n        break;\n      } catch (err$47) {\n        if (err$47 !== goog.iter.StopIteration) {\n          throw err$47;\n        }\n        done = !0;\n      }\n    }\n    return {value:value, done:done};\n  },};\n}, module$contents$goog$iter$es6_ShimIterableImpl = function(func) {\n  this.func_ = func;\n};\nmodule$contents$goog$iter$es6_ShimIterableImpl.prototype.__iterator__ = function() {\n  return new module$contents$goog$iter$es6_ShimGoogIterator(this.func_());\n};\nmodule$contents$goog$iter$es6_ShimIterableImpl.prototype.toGoog = function() {\n  return new module$contents$goog$iter$es6_ShimGoogIterator(this.func_());\n};\nmodule$contents$goog$iter$es6_ShimIterableImpl.prototype[Symbol.iterator] = function() {\n  return new module$contents$goog$iter$es6_ShimEs6Iterator(this.func_());\n};\nmodule$contents$goog$iter$es6_ShimIterableImpl.prototype.toEs6 = function() {\n  return new module$contents$goog$iter$es6_ShimEs6Iterator(this.func_());\n};\nvar module$contents$goog$iter$es6_ShimGoogIterator = function(iter) {\n  goog.iter.Iterator.call(this);\n  this.iter_ = iter;\n};\n$jscomp.inherits(module$contents$goog$iter$es6_ShimGoogIterator, goog.iter.Iterator);\nmodule$contents$goog$iter$es6_ShimGoogIterator.prototype.nextValueOrThrow = function() {\n  var result = this.iter_.next();\n  if (result.done) {\n    throw goog.iter.StopIteration;\n  }\n  return result.value;\n};\nmodule$contents$goog$iter$es6_ShimGoogIterator.prototype.next = function() {\n  return this.iter_.next();\n};\nmodule$contents$goog$iter$es6_ShimGoogIterator.prototype.toGoog = function() {\n  return this;\n};\nmodule$contents$goog$iter$es6_ShimGoogIterator.prototype[Symbol.iterator] = function() {\n  return new module$contents$goog$iter$es6_ShimEs6Iterator(this.iter_);\n};\nmodule$contents$goog$iter$es6_ShimGoogIterator.prototype.toEs6 = function() {\n  return new module$contents$goog$iter$es6_ShimEs6Iterator(this.iter_);\n};\nvar module$contents$goog$iter$es6_ShimEs6Iterator = function(iter) {\n  module$contents$goog$iter$es6_ShimIterableImpl.call(this, function() {\n    return iter;\n  });\n  this.iter_ = iter;\n};\n$jscomp.inherits(module$contents$goog$iter$es6_ShimEs6Iterator, module$contents$goog$iter$es6_ShimIterableImpl);\nmodule$contents$goog$iter$es6_ShimEs6Iterator.prototype.next = function() {\n  return this.iter_.next();\n};\ngoog.iter.es6.ShimIterable = module$contents$goog$iter$es6_ShimIterable;\ngoog.iter.es6.ShimEs6Iterator = module$contents$goog$iter$es6_ShimEs6Iterator;\ngoog.iter.es6.ShimGoogIterator = module$contents$goog$iter$es6_ShimGoogIterator;\ngoog.structs.Map = function(opt_map, var_args) {\n  this.map_ = {};\n  this.keys_ = [];\n  this.version_ = this.size = 0;\n  var argLength = arguments.length;\n  if (1 < argLength) {\n    if (argLength % 2) {\n      throw Error(\"Uneven number of arguments\");\n    }\n    for (var i = 0; i < argLength; i += 2) {\n      this.set(arguments[i], arguments[i + 1]);\n    }\n  } else {\n    opt_map && this.addAll(opt_map);\n  }\n};\ngoog.structs.Map.prototype.getCount = function() {\n  return this.size;\n};\ngoog.structs.Map.prototype.getValues = function() {\n  this.cleanupKeysArray_();\n  for (var rv = [], i = 0; i < this.keys_.length; i++) {\n    rv.push(this.map_[this.keys_[i]]);\n  }\n  return rv;\n};\ngoog.structs.Map.prototype.getKeys = function() {\n  this.cleanupKeysArray_();\n  return this.keys_.concat();\n};\ngoog.structs.Map.prototype.containsKey = function(key) {\n  return this.has(key);\n};\ngoog.structs.Map.prototype.has = function(key) {\n  return goog.structs.Map.hasKey_(this.map_, key);\n};\ngoog.structs.Map.prototype.containsValue = function(val) {\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {\n      return !0;\n    }\n  }\n  return !1;\n};\ngoog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {\n  if (this === otherMap) {\n    return !0;\n  }\n  if (this.size != otherMap.getCount()) {\n    return !1;\n  }\n  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;\n  this.cleanupKeysArray_();\n  for (var key, i = 0; key = this.keys_[i]; i++) {\n    if (!equalityFn(this.get(key), otherMap.get(key))) {\n      return !1;\n    }\n  }\n  return !0;\n};\ngoog.structs.Map.defaultEquals = function(a, b) {\n  return a === b;\n};\ngoog.structs.Map.prototype.isEmpty = function() {\n  return 0 == this.size;\n};\ngoog.structs.Map.prototype.clear = function() {\n  this.map_ = {};\n  this.keys_.length = 0;\n  this.setSizeInternal_(0);\n  this.version_ = 0;\n};\ngoog.structs.Map.prototype.remove = function(key) {\n  return this.delete(key);\n};\ngoog.structs.Map.prototype.delete = function(key) {\n  return goog.structs.Map.hasKey_(this.map_, key) ? (delete this.map_[key], this.setSizeInternal_(this.size - 1), this.version_++, this.keys_.length > 2 * this.size && this.cleanupKeysArray_(), !0) : !1;\n};\ngoog.structs.Map.prototype.cleanupKeysArray_ = function() {\n  if (this.size != this.keys_.length) {\n    for (var srcIndex = 0, destIndex = 0; srcIndex < this.keys_.length;) {\n      var key = this.keys_[srcIndex];\n      goog.structs.Map.hasKey_(this.map_, key) && (this.keys_[destIndex++] = key);\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n  if (this.size != this.keys_.length) {\n    var seen = {};\n    for (destIndex = srcIndex = 0; srcIndex < this.keys_.length;) {\n      key = this.keys_[srcIndex], goog.structs.Map.hasKey_(seen, key) || (this.keys_[destIndex++] = key, seen[key] = 1), srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n};\ngoog.structs.Map.prototype.get = function(key, opt_val) {\n  return goog.structs.Map.hasKey_(this.map_, key) ? this.map_[key] : opt_val;\n};\ngoog.structs.Map.prototype.set = function(key, value) {\n  goog.structs.Map.hasKey_(this.map_, key) || (this.setSizeInternal_(this.size + 1), this.keys_.push(key), this.version_++);\n  this.map_[key] = value;\n};\ngoog.structs.Map.prototype.addAll = function(map) {\n  if (map instanceof goog.structs.Map) {\n    for (var keys = map.getKeys(), i = 0; i < keys.length; i++) {\n      this.set(keys[i], map.get(keys[i]));\n    }\n  } else {\n    for (var key in map) {\n      this.set(key, map[key]);\n    }\n  }\n};\ngoog.structs.Map.prototype.forEach = function(f, opt_obj) {\n  for (var keys = this.getKeys(), i = 0; i < keys.length; i++) {\n    var key = keys[i], value = this.get(key);\n    f.call(opt_obj, value, key, this);\n  }\n};\ngoog.structs.Map.prototype.clone = function() {\n  return new goog.structs.Map(this);\n};\ngoog.structs.Map.prototype.transpose = function() {\n  for (var transposed = new goog.structs.Map(), i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    transposed.set(this.map_[key], key);\n  }\n  return transposed;\n};\ngoog.structs.Map.prototype.toObject = function() {\n  this.cleanupKeysArray_();\n  for (var obj = {}, i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    obj[key] = this.map_[key];\n  }\n  return obj;\n};\ngoog.structs.Map.prototype.getKeyIterator = function() {\n  return this.__iterator__(!0);\n};\ngoog.structs.Map.prototype.keys = function() {\n  return module$contents$goog$iter$es6_ShimIterable.of(this.getKeyIterator()).toEs6();\n};\ngoog.structs.Map.prototype.getValueIterator = function() {\n  return this.__iterator__(!1);\n};\ngoog.structs.Map.prototype.values = function() {\n  return module$contents$goog$iter$es6_ShimIterable.of(this.getValueIterator()).toEs6();\n};\ngoog.structs.Map.prototype.entries = function() {\n  var self = this;\n  return goog.collections.iters.map(this.keys(), function(key) {\n    return [key, self.get(key)];\n  });\n};\ngoog.structs.Map.prototype.__iterator__ = function(opt_keys) {\n  this.cleanupKeysArray_();\n  var i = 0, version = this.version_, selfObj = this, newIter = new goog.iter.Iterator();\n  newIter.next = function() {\n    if (version != selfObj.version_) {\n      throw Error(\"The map has changed since the iterator was created\");\n    }\n    if (i >= selfObj.keys_.length) {\n      return goog.iter.ES6_ITERATOR_DONE;\n    }\n    var key = selfObj.keys_[i++];\n    return goog.iter.createEs6IteratorYield(opt_keys ? key : selfObj.map_[key]);\n  };\n  var iterNext = newIter.next;\n  newIter.nextValueOrThrow = function() {\n    return goog.iter.toEs4IteratorNext(iterNext.call(newIter));\n  };\n  return newIter;\n};\ngoog.structs.Map.prototype.setSizeInternal_ = function(newSize) {\n  this.size = newSize;\n};\ngoog.structs.Map.hasKey_ = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\ngoog.structs.getCount = function(col) {\n  return col.getCount && \"function\" == typeof col.getCount ? col.getCount() : goog.isArrayLike(col) || \"string\" === typeof col ? col.length : module$contents$goog$object_getCount(col);\n};\ngoog.structs.getValues = function(col) {\n  if (col.getValues && \"function\" == typeof col.getValues) {\n    return col.getValues();\n  }\n  if (\"undefined\" !== typeof Map && col instanceof Map || \"undefined\" !== typeof Set && col instanceof Set) {\n    return Array.from(col.values());\n  }\n  if (\"string\" === typeof col) {\n    return col.split(\"\");\n  }\n  if (goog.isArrayLike(col)) {\n    for (var rv = [], l = col.length, i = 0; i < l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return module$contents$goog$object_getValues(col);\n};\ngoog.structs.getKeys = function(col) {\n  if (col.getKeys && \"function\" == typeof col.getKeys) {\n    return col.getKeys();\n  }\n  if (!col.getValues || \"function\" != typeof col.getValues) {\n    if (\"undefined\" !== typeof Map && col instanceof Map) {\n      return Array.from(col.keys());\n    }\n    if (!(\"undefined\" !== typeof Set && col instanceof Set)) {\n      if (goog.isArrayLike(col) || \"string\" === typeof col) {\n        for (var rv = [], l = col.length, i = 0; i < l; i++) {\n          rv.push(i);\n        }\n        return rv;\n      }\n      return module$contents$goog$object_getKeys(col);\n    }\n  }\n};\ngoog.structs.contains = function(col, val) {\n  return col.contains && \"function\" == typeof col.contains ? col.contains(val) : col.containsValue && \"function\" == typeof col.containsValue ? col.containsValue(val) : goog.isArrayLike(col) || \"string\" === typeof col ? module$contents$goog$array_contains(col, val) : module$contents$goog$object_containsValue(col, val);\n};\ngoog.structs.isEmpty = function(col) {\n  return col.isEmpty && \"function\" == typeof col.isEmpty ? col.isEmpty() : goog.isArrayLike(col) || \"string\" === typeof col ? 0 === col.length : module$contents$goog$object_isEmpty(col);\n};\ngoog.structs.clear = function(col) {\n  col.clear && \"function\" == typeof col.clear ? col.clear() : goog.isArrayLike(col) ? module$contents$goog$array_clear(col) : module$contents$goog$object_clear(col);\n};\ngoog.structs.forEach = function(col, f, opt_obj) {\n  if (col.forEach && \"function\" == typeof col.forEach) {\n    col.forEach(f, opt_obj);\n  } else {\n    if (goog.isArrayLike(col) || \"string\" === typeof col) {\n      Array.prototype.forEach.call(col, f, opt_obj);\n    } else {\n      for (var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length, i = 0; i < l; i++) {\n        f.call(opt_obj, values[i], keys && keys[i], col);\n      }\n    }\n  }\n};\ngoog.structs.filter = function(col, f, opt_obj) {\n  if (\"function\" == typeof col.filter) {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || \"string\" === typeof col) {\n    return Array.prototype.filter.call(col, f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length;\n  if (keys) {\n    var rv = {};\n    for (var i = 0; i < l; i++) {\n      f.call(opt_obj, values[i], keys[i], col) && (rv[keys[i]] = values[i]);\n    }\n  } else {\n    for (rv = [], i = 0; i < l; i++) {\n      f.call(opt_obj, values[i], void 0, col) && rv.push(values[i]);\n    }\n  }\n  return rv;\n};\ngoog.structs.map = function(col, f, opt_obj) {\n  if (\"function\" == typeof col.map) {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || \"string\" === typeof col) {\n    return Array.prototype.map.call(col, f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length;\n  if (keys) {\n    var rv = {};\n    for (var i = 0; i < l; i++) {\n      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);\n    }\n  } else {\n    for (rv = [], i = 0; i < l; i++) {\n      rv[i] = f.call(opt_obj, values[i], void 0, col);\n    }\n  }\n  return rv;\n};\ngoog.structs.some = function(col, f, opt_obj) {\n  if (\"function\" == typeof col.some) {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || \"string\" === typeof col) {\n    return Array.prototype.some.call(col, f, opt_obj);\n  }\n  for (var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length, i = 0; i < l; i++) {\n    if (f.call(opt_obj, values[i], keys && keys[i], col)) {\n      return !0;\n    }\n  }\n  return !1;\n};\ngoog.structs.every = function(col, f, opt_obj) {\n  if (\"function\" == typeof col.every) {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || \"string\" === typeof col) {\n    return Array.prototype.every.call(col, f, opt_obj);\n  }\n  for (var keys = goog.structs.getKeys(col), values = goog.structs.getValues(col), l = values.length, i = 0; i < l; i++) {\n    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {\n      return !1;\n    }\n  }\n  return !0;\n};\ngoog.structs.Set = function(opt_values) {\n  this.map_ = new goog.structs.Map();\n  this.size = 0;\n  opt_values && this.addAll(opt_values);\n};\ngoog.structs.Set.getUid_ = goog.getUid;\ngoog.structs.Set.getKey_ = function(val) {\n  var type = typeof val;\n  return \"object\" == type && val || \"function\" == type ? \"o\" + goog.getUid(val) : type.substr(0, 1) + val;\n};\ngoog.structs.Set.prototype.getCount = function() {\n  return this.map_.size;\n};\ngoog.structs.Set.prototype.add = function(element) {\n  this.map_.set(goog.structs.Set.getKey_(element), element);\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.addAll = function(col) {\n  for (var values = goog.structs.getValues(col), l = values.length, i = 0; i < l; i++) {\n    this.add(values[i]);\n  }\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.removeAll = function(col) {\n  for (var values = goog.structs.getValues(col), l = values.length, i = 0; i < l; i++) {\n    this.remove(values[i]);\n  }\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.delete = function(element) {\n  var rv = this.map_.remove(goog.structs.Set.getKey_(element));\n  this.setSizeInternal_(this.map_.size);\n  return rv;\n};\ngoog.structs.Set.prototype.remove = function(element) {\n  return this.delete(element);\n};\ngoog.structs.Set.prototype.clear = function() {\n  this.map_.clear();\n  this.setSizeInternal_(0);\n};\ngoog.structs.Set.prototype.isEmpty = function() {\n  return 0 === this.map_.size;\n};\ngoog.structs.Set.prototype.has = function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\ngoog.structs.Set.prototype.contains = function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\ngoog.structs.Set.prototype.containsAll = function(col) {\n  return goog.structs.every(col, this.contains, this);\n};\ngoog.structs.Set.prototype.intersection = function(col) {\n  for (var result = new goog.structs.Set(), values = goog.structs.getValues(col), i = 0; i < values.length; i++) {\n    var value = values[i];\n    this.contains(value) && result.add(value);\n  }\n  return result;\n};\ngoog.structs.Set.prototype.difference = function(col) {\n  var result = this.clone();\n  result.removeAll(col);\n  return result;\n};\ngoog.structs.Set.prototype.getValues = function() {\n  return this.map_.getValues();\n};\ngoog.structs.Set.prototype.values = function() {\n  return this.map_.values();\n};\ngoog.structs.Set.prototype.clone = function() {\n  return new goog.structs.Set(this);\n};\ngoog.structs.Set.prototype.equals = function(col) {\n  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);\n};\ngoog.structs.Set.prototype.isSubsetOf = function(col) {\n  var colCount = goog.structs.getCount(col);\n  if (this.getCount() > colCount) {\n    return !1;\n  }\n  !(col instanceof goog.structs.Set) && 5 < colCount && (col = new goog.structs.Set(col));\n  return goog.structs.every(this, function(value) {\n    return goog.structs.contains(col, value);\n  });\n};\ngoog.structs.Set.prototype.__iterator__ = function(opt_keys) {\n  return this.map_.__iterator__(!1);\n};\ngoog.structs.Set.prototype[Symbol.iterator] = function() {\n  return this.values();\n};\ngoog.structs.Set.prototype.setSizeInternal_ = function(newSize) {\n  this.size = newSize;\n};\nvar ee = {AbstractOverlay:function(url, mapId, token, opt_init, opt_profiler) {\n  goog.events.EventTarget.call(this);\n  this.mapId = mapId;\n  this.token = token;\n  this.tilesLoading = [];\n  this.tilesFailed = new goog.structs.Set();\n  this.tileCounter = 0;\n  this.url = url;\n}};\ngoog.inherits(ee.AbstractOverlay, goog.events.EventTarget);\ngoog.exportSymbol(\"ee.AbstractOverlay\", ee.AbstractOverlay);\nee.AbstractOverlay.EventType = {TILE_LOADED:\"tileevent\"};\nee.AbstractOverlay.prototype.getTileId = function(coord, zoom) {\n  var maxCoord = 1 << zoom, x = coord.x % maxCoord;\n  0 > x && (x += maxCoord);\n  return [this.mapId, zoom, x, coord.y].join(\"/\");\n};\nee.AbstractOverlay.prototype.getLoadingTilesCount = function() {\n  return this.tilesLoading.length;\n};\nee.AbstractOverlay.prototype.getFailedTilesCount = function() {\n  return this.tilesFailed.getCount();\n};\nee.TileEvent = function(count) {\n  goog.events.Event.call(this, ee.AbstractOverlay.EventType.TILE_LOADED);\n  this.count = count;\n};\ngoog.inherits(ee.TileEvent, goog.events.Event);\nvar module$exports$tslib = {}, module$contents$tslib_extendStatics = Object.setPrototypeOf || {__proto__:[]} instanceof Array && function(d, b) {\n  d.__proto__ = b;\n} || function(d, b) {\n  for (var p in b) {\n    b.hasOwnProperty(p) && (d[p] = b[p]);\n  }\n};\nmodule$exports$tslib.__extends = function(d, b) {\n  function __() {\n    this.constructor = d;\n  }\n  module$contents$tslib_extendStatics(d, b);\n  d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nmodule$exports$tslib.__assign = Object.assign || function(t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n    for (var p in s) {\n      Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);\n    }\n  }\n  return t;\n};\nmodule$exports$tslib.__rest = function(s, e) {\n  var t = {}, p;\n  for (p in s) {\n    Object.prototype.hasOwnProperty.call(s, p) && 0 > e.indexOf(p) && (t[p] = s[p]);\n  }\n  if (null != s && \"function\" === typeof Object.getOwnPropertySymbols) {\n    var i = 0;\n    for (p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      0 > e.indexOf(p[i]) && (t[p[i]] = s[p[i]]);\n    }\n  }\n  return t;\n};\nmodule$exports$tslib.__decorate = function(decorators, target, key, desc) {\n  var c = arguments.length, r = 3 > c ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (\"object\" === typeof Reflect && Reflect && \"function\" === typeof Reflect.decorate) {\n    r = Reflect.decorate(decorators, target, key, desc);\n  } else {\n    for (var i = decorators.length - 1; 0 <= i; i--) {\n      if (d = decorators[i]) {\n        r = (3 > c ? d(r) : 3 < c ? d(target, key, r) : d(target, key)) || r;\n      }\n    }\n  }\n  return 3 < c && r && Object.defineProperty(target, key, r), r;\n};\nmodule$exports$tslib.__metadata = function(metadataKey, metadataValue) {\n  if (\"object\" === typeof Reflect && Reflect && \"function\" === typeof Reflect.metadata) {\n    return Reflect.metadata(metadataKey, metadataValue);\n  }\n};\nmodule$exports$tslib.__param = function(paramIndex, decorator) {\n  return function(target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nmodule$exports$tslib.__awaiter = function(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function(resolve$jscomp$0, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve$jscomp$0(result.value) : (new P(function(resolve) {\n        resolve(result.value);\n      })).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments)).next());\n  });\n};\nmodule$exports$tslib.__generator = function(thisArg, body) {\n  function verb(n) {\n    return function(v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) {\n      throw new TypeError(\"Generator is already executing.\");\n    }\n    for (; _;) {\n      try {\n        if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) {\n          return t;\n        }\n        if (y = 0, t) {\n          op = [0, t.value];\n        }\n        switch(op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            return _.label++, {value:op[1], done:!1};\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = 0 < t.length && t[t.length - 1]) && (6 === op[0] || 2 === op[0])) {\n              _ = 0;\n              continue;\n            }\n            if (3 === op[0] && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n            } else {\n              if (6 === op[0] && _.label < t[1]) {\n                _.label = t[1], t = op;\n              } else {\n                if (t && _.label < t[2]) {\n                  _.label = t[2], _.ops.push(op);\n                } else {\n                  t[2] && _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                }\n              }\n            }\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e], y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) {\n      throw op[1];\n    }\n    return {value:op[0] ? op[1] : void 0, done:!0};\n  }\n  var _ = {label:0, sent:function() {\n    if (t[0] & 1) {\n      throw t[1];\n    }\n    return t[1];\n  }, trys:[], ops:[]}, f, y, t, g;\n  return g = {next:verb(0), \"throw\":verb(1), \"return\":verb(2)}, \"function\" === typeof Symbol && (g[Symbol.iterator] = function() {\n    return g;\n  }), g;\n};\nmodule$exports$tslib.__exportStar = function(m, e) {\n  for (var p in m) {\n    e.hasOwnProperty(p) || (e[p] = m[p]);\n  }\n};\nmodule$exports$tslib.__values = function(o) {\n  var m = \"function\" === typeof Symbol && o[Symbol.iterator], i = 0;\n  return m ? m.call(o) : {next:function() {\n    o && i >= o.length && (o = void 0);\n    return {value:o && o[i++], done:!o};\n  }};\n};\nmodule$exports$tslib.__read = function(o, n) {\n  var m = \"function\" === typeof Symbol && o[Symbol.iterator];\n  if (!m) {\n    return o;\n  }\n  var i = m.call(o), r, ar = [];\n  try {\n    for (; (void 0 === n || 0 < n--) && !(r = i.next()).done;) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    var e = {error:error};\n  } finally {\n    try {\n      r && !r.done && (m = i[\"return\"]) && m.call(i);\n    } finally {\n      if (e) {\n        throw e.error;\n      }\n    }\n  }\n  return ar;\n};\nmodule$exports$tslib.__spread = function() {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(module$exports$tslib.__read(arguments[i]));\n  }\n  return ar;\n};\nmodule$exports$tslib.__spreadArrays = function() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  var r = Array(s), k = 0;\n  for (i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nmodule$exports$tslib.__spreadArray = function(to, from) {\n  if (!(Array.isArray(from) || from instanceof NodeList)) {\n    throw new TypeError(\"Expected an Array or NodeList: \" + String(from));\n  }\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n  return to;\n};\nmodule$exports$tslib.__await = function(v) {\n  return this instanceof module$exports$tslib.__await ? (this.v = v, this) : new module$exports$tslib.__await(v);\n};\nmodule$exports$tslib.__asyncGenerator = function __asyncGenerator(thisArg, _arguments, generator) {\n  function verb(n) {\n    g[n] && (i[n] = function(v) {\n      return new Promise(function(a, b) {\n        1 < q.push([n, v, a, b]) || resume(n, v);\n      });\n    });\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof module$exports$tslib.__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    (f(v), q.shift(), q.length) && resume(q[0][0], q[0][1]);\n  }\n  if (!Symbol.asyncIterator) {\n    throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  }\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n    return this;\n  }, i;\n};\nmodule$exports$tslib.__asyncDelegator = function(o) {\n  function verb(n, f) {\n    o[n] && (i[n] = function(v) {\n      return (p = !p) ? {value:new module$exports$tslib.__await(o[n](v)), done:\"return\" === n} : f ? f(v) : v;\n    });\n  }\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function() {\n    return i;\n  }, i;\n};\nmodule$exports$tslib.__asyncValues = function(o) {\n  if (!Symbol.asyncIterator) {\n    throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  }\n  var m = o[Symbol.asyncIterator];\n  return m ? m.call(o) : \"function\" === typeof __values ? __values(o) : o[Symbol.iterator]();\n};\nmodule$exports$tslib.__makeTemplateObject = function(cooked, raw) {\n  Object.defineProperty ? Object.defineProperty(cooked, \"raw\", {value:raw}) : cooked.raw = raw;\n  return cooked;\n};\nmodule$exports$tslib.__classPrivateFieldGet = function(receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n};\nmodule$exports$tslib.__classPrivateFieldSet = function(receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n  privateMap.set(receiver, value);\n  return value;\n};\nvar module$exports$eeapiclient$domain_object = {}, module$contents$eeapiclient$domain_object_module = module$contents$eeapiclient$domain_object_module || {id:\"javascript/typescript/contrib/apiclient/core/domain_object.closure.js\"};\nmodule$exports$eeapiclient$domain_object.ObjectMapMetadata = function module$contents$eeapiclient$domain_object_ObjectMapMetadata() {\n};\nvar module$contents$eeapiclient$domain_object_Primitive;\nmodule$exports$eeapiclient$domain_object.ClassMetadata = function module$contents$eeapiclient$domain_object_ClassMetadata() {\n};\nvar module$contents$eeapiclient$domain_object_NullClass = function() {\n};\nmodule$exports$eeapiclient$domain_object.NULL_VALUE = new module$contents$eeapiclient$domain_object_NullClass();\nmodule$exports$eeapiclient$domain_object.ISerializable = function module$contents$eeapiclient$domain_object_ISerializable() {\n};\nfunction module$contents$eeapiclient$domain_object_buildClassMetadataFromPartial(partialClassMetadata) {\n  return Object.assign({arrays:{}, descriptions:{}, keys:[], objectMaps:{}, objects:{}, enums:{}, emptyArrayIsUnset:!1}, partialClassMetadata);\n}\nmodule$exports$eeapiclient$domain_object.buildClassMetadataFromPartial = module$contents$eeapiclient$domain_object_buildClassMetadataFromPartial;\nmodule$exports$eeapiclient$domain_object.Serializable = function() {\n  this.Serializable$values = {};\n};\nmodule$exports$eeapiclient$domain_object.Serializable.prototype.getClassMetadata = function() {\n  return module$contents$eeapiclient$domain_object_buildClassMetadataFromPartial(this.getPartialClassMetadata());\n};\nmodule$exports$eeapiclient$domain_object.Serializable.prototype.Serializable$get = function(key) {\n  return this.Serializable$values.hasOwnProperty(key) ? this.Serializable$values[key] : null;\n};\nmodule$exports$eeapiclient$domain_object.Serializable.prototype.Serializable$set = function(key, value) {\n  this.Serializable$values[key] = value;\n};\nmodule$exports$eeapiclient$domain_object.Serializable.prototype.Serializable$has = function(key) {\n  return null != this.Serializable$values[key];\n};\nmodule$exports$eeapiclient$domain_object.SerializableCtor = function module$contents$eeapiclient$domain_object_SerializableCtor() {\n};\nmodule$exports$eeapiclient$domain_object.clone = function module$contents$eeapiclient$domain_object_clone(serializable) {\n  return module$contents$eeapiclient$domain_object_deserialize(serializable.getConstructor(), module$contents$eeapiclient$domain_object_serialize(serializable));\n};\nmodule$exports$eeapiclient$domain_object.isEmpty = function module$contents$eeapiclient$domain_object_isEmpty(serializable) {\n  return !Object.keys(module$contents$eeapiclient$domain_object_serialize(serializable)).length;\n};\nfunction module$contents$eeapiclient$domain_object_serialize(serializable) {\n  return module$contents$eeapiclient$domain_object_deepCopy(serializable, module$contents$eeapiclient$domain_object_serializeGetter, module$contents$eeapiclient$domain_object_serializeSetter, module$contents$eeapiclient$domain_object_serializeInstanciator);\n}\nmodule$exports$eeapiclient$domain_object.serialize = module$contents$eeapiclient$domain_object_serialize;\nfunction module$contents$eeapiclient$domain_object_serializeGetter(key, obj) {\n  return obj.Serializable$get(key);\n}\nfunction module$contents$eeapiclient$domain_object_serializeSetter(key, obj, value) {\n  obj[key] = value;\n}\nfunction module$contents$eeapiclient$domain_object_serializeInstanciator(ctor) {\n  return {};\n}\nfunction module$contents$eeapiclient$domain_object_deserialize(type, raw) {\n  var result = new type();\n  return null == raw ? result : module$contents$eeapiclient$domain_object_deepCopy(raw, module$contents$eeapiclient$domain_object_deserializeGetter, module$contents$eeapiclient$domain_object_deserializeSetter, module$contents$eeapiclient$domain_object_deserializeInstanciator, type);\n}\nmodule$exports$eeapiclient$domain_object.deserialize = module$contents$eeapiclient$domain_object_deserialize;\nfunction module$contents$eeapiclient$domain_object_deserializeGetter(key, obj) {\n  return obj[key];\n}\nfunction module$contents$eeapiclient$domain_object_deserializeSetter(key, obj, value) {\n  obj.Serializable$set(key, value);\n}\nfunction module$contents$eeapiclient$domain_object_deserializeInstanciator(ctor) {\n  if (null == ctor) {\n    throw Error(\"Cannot deserialize, target constructor was null.\");\n  }\n  return new ctor();\n}\nmodule$exports$eeapiclient$domain_object.strictDeserialize = function module$contents$eeapiclient$domain_object_strictDeserialize(type, raw) {\n  return module$contents$eeapiclient$domain_object_deserialize(type, raw);\n};\nvar module$contents$eeapiclient$domain_object_CopyValueGetter, module$contents$eeapiclient$domain_object_CopyValueSetter, module$contents$eeapiclient$domain_object_CopyConstructor, module$contents$eeapiclient$domain_object_CopyInstanciator;\nfunction module$contents$eeapiclient$domain_object_deepCopy(source, valueGetter, valueSetter, copyInstanciator, targetConstructor) {\n  for (var target = copyInstanciator(targetConstructor), metadata = module$contents$eeapiclient$domain_object_deepCopyMetadata(source, target), arrays = metadata.arrays || {}, objects = metadata.objects || {}, objectMaps = metadata.objectMaps || {}, $jscomp$loop$71 = {}, $jscomp$iter$6 = $jscomp.makeIterator(metadata.keys || []), $jscomp$key$key = $jscomp$iter$6.next(); !$jscomp$key$key.done; $jscomp$loop$71 = {$jscomp$loop$prop$mapMetadata$72:$jscomp$loop$71.$jscomp$loop$prop$mapMetadata$72}, \n  $jscomp$key$key = $jscomp$iter$6.next()) {\n    var key = $jscomp$key$key.value, value = valueGetter(key, source);\n    if (null != value) {\n      var copy = void 0;\n      if (arrays.hasOwnProperty(key)) {\n        if (metadata.emptyArrayIsUnset && 0 === value.length) {\n          continue;\n        }\n        copy = module$contents$eeapiclient$domain_object_deepCopyValue(value, valueGetter, valueSetter, copyInstanciator, !0, !0, arrays[key]);\n      } else {\n        if (objects.hasOwnProperty(key)) {\n          copy = module$contents$eeapiclient$domain_object_deepCopyValue(value, valueGetter, valueSetter, copyInstanciator, !1, !0, objects[key]);\n        } else {\n          if (objectMaps.hasOwnProperty(key)) {\n            $jscomp$loop$71.$jscomp$loop$prop$mapMetadata$72 = objectMaps[key], copy = $jscomp$loop$71.$jscomp$loop$prop$mapMetadata$72.isPropertyArray ? value.map(function($jscomp$loop$71) {\n              return function(v) {\n                return module$contents$eeapiclient$domain_object_deepCopyObjectMap(v, $jscomp$loop$71.$jscomp$loop$prop$mapMetadata$72, valueGetter, valueSetter, copyInstanciator);\n              };\n            }($jscomp$loop$71)) : module$contents$eeapiclient$domain_object_deepCopyObjectMap(value, $jscomp$loop$71.$jscomp$loop$prop$mapMetadata$72, valueGetter, valueSetter, copyInstanciator);\n          } else {\n            if (Array.isArray(value)) {\n              if (metadata.emptyArrayIsUnset && 0 === value.length) {\n                continue;\n              }\n              copy = module$contents$eeapiclient$domain_object_deepCopyValue(value, valueGetter, valueSetter, copyInstanciator, !0, !1);\n            } else {\n              copy = value instanceof module$contents$eeapiclient$domain_object_NullClass ? null : value;\n            }\n          }\n        }\n      }\n      valueSetter(key, target, copy);\n    }\n  }\n  return target;\n}\nfunction module$contents$eeapiclient$domain_object_deepCopyObjectMap(value, mapMetadata, valueGetter, valueSetter, copyInstanciator) {\n  for (var objMap = {}, $jscomp$iter$7 = $jscomp.makeIterator(Object.keys(value)), $jscomp$key$mapKey = $jscomp$iter$7.next(); !$jscomp$key$mapKey.done; $jscomp$key$mapKey = $jscomp$iter$7.next()) {\n    var mapKey = $jscomp$key$mapKey.value, mapValue = value[mapKey];\n    null != mapValue && (objMap[mapKey] = module$contents$eeapiclient$domain_object_deepCopyValue(mapValue, valueGetter, valueSetter, copyInstanciator, mapMetadata.isValueArray, mapMetadata.isSerializable, mapMetadata.ctor));\n  }\n  return objMap;\n}\nfunction module$contents$eeapiclient$domain_object_deepCopyValue(value, valueGetter, valueSetter, copyInstanciator, isArray, isRef, ctor) {\n  if (isRef && null == ctor) {\n    throw Error(\"Cannot deserialize a reference object without a constructor.\");\n  }\n  return null == value ? value : isArray && isRef ? value.map(function(v) {\n    return module$contents$eeapiclient$domain_object_deepCopy(v, valueGetter, valueSetter, copyInstanciator, ctor);\n  }) : isArray && !isRef ? value.map(function(v) {\n    return v;\n  }) : !isArray && isRef ? module$contents$eeapiclient$domain_object_deepCopy(value, valueGetter, valueSetter, copyInstanciator, ctor) : value instanceof module$contents$eeapiclient$domain_object_NullClass ? null : \"object\" === typeof value ? JSON.parse(JSON.stringify(value)) : value;\n}\nfunction module$contents$eeapiclient$domain_object_deepCopyMetadata(source, target) {\n  if (target instanceof module$exports$eeapiclient$domain_object.Serializable) {\n    var metadata = target.getClassMetadata();\n  } else {\n    if (source instanceof module$exports$eeapiclient$domain_object.Serializable) {\n      metadata = source.getClassMetadata();\n    } else {\n      throw Error(\"Cannot find ClassMetadata.\");\n    }\n  }\n  return metadata;\n}\nfunction module$contents$eeapiclient$domain_object_deepEquals(serializable1, serializable2) {\n  var metadata1 = serializable1.getClassMetadata(), keys1 = metadata1.keys || [], arrays1 = metadata1.arrays || {}, objects1 = metadata1.objects || {}, objectMaps1 = metadata1.objectMaps || {}, metadata2 = serializable2.getClassMetadata(), arrays2 = metadata2.arrays || {}, objects2 = metadata2.objects || {}, objectMaps2 = metadata2.objectMaps || {};\n  if (!(module$contents$eeapiclient$domain_object_sameKeys(keys1, metadata2.keys || []) && module$contents$eeapiclient$domain_object_sameKeys(arrays1, arrays2) && module$contents$eeapiclient$domain_object_sameKeys(objects1, objects2) && module$contents$eeapiclient$domain_object_sameKeys(objectMaps1, objectMaps2))) {\n    return !1;\n  }\n  for (var $jscomp$loop$73 = {}, $jscomp$iter$8 = $jscomp.makeIterator(keys1), $jscomp$key$key = $jscomp$iter$8.next(); !$jscomp$key$key.done; $jscomp$loop$73 = {$jscomp$loop$prop$value2$74:$jscomp$loop$73.$jscomp$loop$prop$value2$74, $jscomp$loop$prop$mapMetadata$75:$jscomp$loop$73.$jscomp$loop$prop$mapMetadata$75}, $jscomp$key$key = $jscomp$iter$8.next()) {\n    var key = $jscomp$key$key.value, has1 = module$contents$eeapiclient$domain_object_hasAndIsNotEmptyArray(serializable1, key, metadata1), has2 = module$contents$eeapiclient$domain_object_hasAndIsNotEmptyArray(serializable2, key, metadata2);\n    if (has1 !== has2) {\n      return !1;\n    }\n    if (has1) {\n      var value1 = serializable1.Serializable$get(key);\n      $jscomp$loop$73.$jscomp$loop$prop$value2$74 = serializable2.Serializable$get(key);\n      if (arrays1.hasOwnProperty(key)) {\n        if (!module$contents$eeapiclient$domain_object_deepEqualsValue(value1, $jscomp$loop$73.$jscomp$loop$prop$value2$74, !0, !0)) {\n          return !1;\n        }\n      } else {\n        if (objects1.hasOwnProperty(key)) {\n          if (!module$contents$eeapiclient$domain_object_deepEqualsValue(value1, $jscomp$loop$73.$jscomp$loop$prop$value2$74, !1, !0)) {\n            return !1;\n          }\n        } else {\n          if (objectMaps1.hasOwnProperty(key)) {\n            if ($jscomp$loop$73.$jscomp$loop$prop$mapMetadata$75 = objectMaps1[key], $jscomp$loop$73.$jscomp$loop$prop$mapMetadata$75.isPropertyArray) {\n              if (!module$contents$eeapiclient$domain_object_sameKeys(value1, $jscomp$loop$73.$jscomp$loop$prop$value2$74) || value1.some(function($jscomp$loop$73) {\n                return function(v1, i) {\n                  return !module$contents$eeapiclient$domain_object_deepEqualsObjectMap(v1, $jscomp$loop$73.$jscomp$loop$prop$value2$74[i], $jscomp$loop$73.$jscomp$loop$prop$mapMetadata$75);\n                };\n              }($jscomp$loop$73))) {\n                return !1;\n              }\n            } else {\n              if (!module$contents$eeapiclient$domain_object_deepEqualsObjectMap(value1, $jscomp$loop$73.$jscomp$loop$prop$value2$74, $jscomp$loop$73.$jscomp$loop$prop$mapMetadata$75)) {\n                return !1;\n              }\n            }\n          } else {\n            if (Array.isArray(value1)) {\n              if (!module$contents$eeapiclient$domain_object_deepEqualsValue(value1, $jscomp$loop$73.$jscomp$loop$prop$value2$74, !0, !1)) {\n                return !1;\n              }\n            } else {\n              if (!module$contents$eeapiclient$domain_object_deepEqualsValue(value1, $jscomp$loop$73.$jscomp$loop$prop$value2$74, !1, !1)) {\n                return !1;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return !0;\n}\nmodule$exports$eeapiclient$domain_object.deepEquals = module$contents$eeapiclient$domain_object_deepEquals;\nfunction module$contents$eeapiclient$domain_object_hasAndIsNotEmptyArray(serializable, key, metadata) {\n  if (!serializable.Serializable$has(key)) {\n    return !1;\n  }\n  if (!metadata.emptyArrayIsUnset) {\n    return !0;\n  }\n  var value = serializable.Serializable$get(key);\n  return Array.isArray(value) ? 0 !== value.length : !0;\n}\nfunction module$contents$eeapiclient$domain_object_deepEqualsObjectMap(value1, value2, mapMetadata) {\n  if (!module$contents$eeapiclient$domain_object_sameKeys(value1, value2)) {\n    return !1;\n  }\n  for (var $jscomp$iter$9 = $jscomp.makeIterator(Object.keys(value1)), $jscomp$key$mapKey = $jscomp$iter$9.next(); !$jscomp$key$mapKey.done; $jscomp$key$mapKey = $jscomp$iter$9.next()) {\n    var mapKey = $jscomp$key$mapKey.value;\n    if (!module$contents$eeapiclient$domain_object_deepEqualsValue(value1[mapKey], value2[mapKey], mapMetadata.isValueArray, mapMetadata.isSerializable)) {\n      return !1;\n    }\n  }\n  return !0;\n}\nfunction module$contents$eeapiclient$domain_object_deepEqualsValue(value1, value2, isArray, isSerializable) {\n  if (null == value1 && null == value2) {\n    return !0;\n  }\n  if (isArray && isSerializable) {\n    if (!module$contents$eeapiclient$domain_object_sameKeys(value1, value2) || value1.some(function(v1, i) {\n      return !module$contents$eeapiclient$domain_object_deepEquals(v1, value2[i]);\n    })) {\n      return !1;\n    }\n  } else {\n    if (isArray && !isSerializable) {\n      if (!module$contents$eeapiclient$domain_object_sameKeys(value1, value2) || value1.some(function(v, i) {\n        return v !== value2[i];\n      })) {\n        return !1;\n      }\n    } else {\n      if (\"object\" === typeof value1) {\n        if (JSON.stringify(value1) !== JSON.stringify(value2)) {\n          return !1;\n        }\n      } else {\n        if (value1 !== value2) {\n          return !1;\n        }\n      }\n    }\n  }\n  return !0;\n}\nfunction module$contents$eeapiclient$domain_object_sameKeys(a, b) {\n  if (typeof a !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n    throw Error(\"Types are not comparable.\");\n  }\n  var aKeys = Object.keys(a), bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return !1;\n  }\n  Array.isArray(a) || (aKeys.sort(), bKeys.sort());\n  for (var i = 0; i < aKeys.length; i++) {\n    if (aKeys[i] !== bKeys[i]) {\n      return !1;\n    }\n  }\n  return !0;\n}\nmodule$exports$eeapiclient$domain_object.serializableEqualityTester = function module$contents$eeapiclient$domain_object_serializableEqualityTester(left, right) {\n  if (left instanceof module$exports$eeapiclient$domain_object.Serializable && right instanceof module$exports$eeapiclient$domain_object.Serializable) {\n    return module$contents$eeapiclient$domain_object_deepEquals(left, right);\n  }\n};\ngoog.dom.asserts = {};\ngoog.dom.asserts.assertIsLocation = function(o) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var win = goog.dom.asserts.getWindow_(o);\n    win && (!o || !(o instanceof win.Location) && o instanceof win.Element) && goog.asserts.fail(\"Argument is not a Location (or a non-Element mock); got: %s\", goog.dom.asserts.debugStringForType_(o));\n  }\n  return o;\n};\ngoog.dom.asserts.assertIsElementType_ = function(o, typename) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var win = goog.dom.asserts.getWindow_(o);\n    win && \"undefined\" != typeof win[typename] && (o && (o instanceof win[typename] || !(o instanceof win.Location || o instanceof win.Element)) || goog.asserts.fail(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\", typename, goog.dom.asserts.debugStringForType_(o)));\n  }\n  return o;\n};\ngoog.dom.asserts.assertIsHTMLAnchorElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLAnchorElement\");\n};\ngoog.dom.asserts.assertIsHTMLButtonElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLButtonElement\");\n};\ngoog.dom.asserts.assertIsHTMLLinkElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLLinkElement\");\n};\ngoog.dom.asserts.assertIsHTMLImageElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLImageElement\");\n};\ngoog.dom.asserts.assertIsHTMLAudioElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLAudioElement\");\n};\ngoog.dom.asserts.assertIsHTMLVideoElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLVideoElement\");\n};\ngoog.dom.asserts.assertIsHTMLInputElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLInputElement\");\n};\ngoog.dom.asserts.assertIsHTMLTextAreaElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLTextAreaElement\");\n};\ngoog.dom.asserts.assertIsHTMLCanvasElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLCanvasElement\");\n};\ngoog.dom.asserts.assertIsHTMLEmbedElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLEmbedElement\");\n};\ngoog.dom.asserts.assertIsHTMLFormElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLFormElement\");\n};\ngoog.dom.asserts.assertIsHTMLFrameElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLFrameElement\");\n};\ngoog.dom.asserts.assertIsHTMLIFrameElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLIFrameElement\");\n};\ngoog.dom.asserts.assertIsHTMLObjectElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLObjectElement\");\n};\ngoog.dom.asserts.assertIsHTMLScriptElement = function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \"HTMLScriptElement\");\n};\ngoog.dom.asserts.debugStringForType_ = function(value) {\n  if (goog.isObject(value)) {\n    try {\n      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);\n    } catch (e) {\n      return \"<object could not be stringified>\";\n    }\n  } else {\n    return void 0 === value ? \"undefined\" : null === value ? \"null\" : typeof value;\n  }\n};\ngoog.dom.asserts.getWindow_ = function(o) {\n  try {\n    var doc = o && o.ownerDocument, win = doc && (doc.defaultView || doc.parentWindow);\n    win = win || goog.global;\n    if (win.Element && win.Location) {\n      return win;\n    }\n  } catch (ex) {\n  }\n  return null;\n};\ngoog.dom.HtmlElement = function() {\n};\ngoog.dom.TagName = function() {\n};\ngoog.dom.TagName.cast = function(name, type) {\n  return name;\n};\ngoog.dom.TagName.prototype.toString = function() {\n};\ngoog.dom.TagName.A = \"A\";\ngoog.dom.TagName.ABBR = \"ABBR\";\ngoog.dom.TagName.ACRONYM = \"ACRONYM\";\ngoog.dom.TagName.ADDRESS = \"ADDRESS\";\ngoog.dom.TagName.APPLET = \"APPLET\";\ngoog.dom.TagName.AREA = \"AREA\";\ngoog.dom.TagName.ARTICLE = \"ARTICLE\";\ngoog.dom.TagName.ASIDE = \"ASIDE\";\ngoog.dom.TagName.AUDIO = \"AUDIO\";\ngoog.dom.TagName.B = \"B\";\ngoog.dom.TagName.BASE = \"BASE\";\ngoog.dom.TagName.BASEFONT = \"BASEFONT\";\ngoog.dom.TagName.BDI = \"BDI\";\ngoog.dom.TagName.BDO = \"BDO\";\ngoog.dom.TagName.BIG = \"BIG\";\ngoog.dom.TagName.BLOCKQUOTE = \"BLOCKQUOTE\";\ngoog.dom.TagName.BODY = \"BODY\";\ngoog.dom.TagName.BR = \"BR\";\ngoog.dom.TagName.BUTTON = \"BUTTON\";\ngoog.dom.TagName.CANVAS = \"CANVAS\";\ngoog.dom.TagName.CAPTION = \"CAPTION\";\ngoog.dom.TagName.CENTER = \"CENTER\";\ngoog.dom.TagName.CITE = \"CITE\";\ngoog.dom.TagName.CODE = \"CODE\";\ngoog.dom.TagName.COL = \"COL\";\ngoog.dom.TagName.COLGROUP = \"COLGROUP\";\ngoog.dom.TagName.COMMAND = \"COMMAND\";\ngoog.dom.TagName.DATA = \"DATA\";\ngoog.dom.TagName.DATALIST = \"DATALIST\";\ngoog.dom.TagName.DD = \"DD\";\ngoog.dom.TagName.DEL = \"DEL\";\ngoog.dom.TagName.DETAILS = \"DETAILS\";\ngoog.dom.TagName.DFN = \"DFN\";\ngoog.dom.TagName.DIALOG = \"DIALOG\";\ngoog.dom.TagName.DIR = \"DIR\";\ngoog.dom.TagName.DIV = \"DIV\";\ngoog.dom.TagName.DL = \"DL\";\ngoog.dom.TagName.DT = \"DT\";\ngoog.dom.TagName.EM = \"EM\";\ngoog.dom.TagName.EMBED = \"EMBED\";\ngoog.dom.TagName.FIELDSET = \"FIELDSET\";\ngoog.dom.TagName.FIGCAPTION = \"FIGCAPTION\";\ngoog.dom.TagName.FIGURE = \"FIGURE\";\ngoog.dom.TagName.FONT = \"FONT\";\ngoog.dom.TagName.FOOTER = \"FOOTER\";\ngoog.dom.TagName.FORM = \"FORM\";\ngoog.dom.TagName.FRAME = \"FRAME\";\ngoog.dom.TagName.FRAMESET = \"FRAMESET\";\ngoog.dom.TagName.H1 = \"H1\";\ngoog.dom.TagName.H2 = \"H2\";\ngoog.dom.TagName.H3 = \"H3\";\ngoog.dom.TagName.H4 = \"H4\";\ngoog.dom.TagName.H5 = \"H5\";\ngoog.dom.TagName.H6 = \"H6\";\ngoog.dom.TagName.HEAD = \"HEAD\";\ngoog.dom.TagName.HEADER = \"HEADER\";\ngoog.dom.TagName.HGROUP = \"HGROUP\";\ngoog.dom.TagName.HR = \"HR\";\ngoog.dom.TagName.HTML = \"HTML\";\ngoog.dom.TagName.I = \"I\";\ngoog.dom.TagName.IFRAME = \"IFRAME\";\ngoog.dom.TagName.IMG = \"IMG\";\ngoog.dom.TagName.INPUT = \"INPUT\";\ngoog.dom.TagName.INS = \"INS\";\ngoog.dom.TagName.ISINDEX = \"ISINDEX\";\ngoog.dom.TagName.KBD = \"KBD\";\ngoog.dom.TagName.KEYGEN = \"KEYGEN\";\ngoog.dom.TagName.LABEL = \"LABEL\";\ngoog.dom.TagName.LEGEND = \"LEGEND\";\ngoog.dom.TagName.LI = \"LI\";\ngoog.dom.TagName.LINK = \"LINK\";\ngoog.dom.TagName.MAIN = \"MAIN\";\ngoog.dom.TagName.MAP = \"MAP\";\ngoog.dom.TagName.MARK = \"MARK\";\ngoog.dom.TagName.MATH = \"MATH\";\ngoog.dom.TagName.MENU = \"MENU\";\ngoog.dom.TagName.MENUITEM = \"MENUITEM\";\ngoog.dom.TagName.META = \"META\";\ngoog.dom.TagName.METER = \"METER\";\ngoog.dom.TagName.NAV = \"NAV\";\ngoog.dom.TagName.NOFRAMES = \"NOFRAMES\";\ngoog.dom.TagName.NOSCRIPT = \"NOSCRIPT\";\ngoog.dom.TagName.OBJECT = \"OBJECT\";\ngoog.dom.TagName.OL = \"OL\";\ngoog.dom.TagName.OPTGROUP = \"OPTGROUP\";\ngoog.dom.TagName.OPTION = \"OPTION\";\ngoog.dom.TagName.OUTPUT = \"OUTPUT\";\ngoog.dom.TagName.P = \"P\";\ngoog.dom.TagName.PARAM = \"PARAM\";\ngoog.dom.TagName.PICTURE = \"PICTURE\";\ngoog.dom.TagName.PRE = \"PRE\";\ngoog.dom.TagName.PROGRESS = \"PROGRESS\";\ngoog.dom.TagName.Q = \"Q\";\ngoog.dom.TagName.RP = \"RP\";\ngoog.dom.TagName.RT = \"RT\";\ngoog.dom.TagName.RTC = \"RTC\";\ngoog.dom.TagName.RUBY = \"RUBY\";\ngoog.dom.TagName.S = \"S\";\ngoog.dom.TagName.SAMP = \"SAMP\";\ngoog.dom.TagName.SCRIPT = \"SCRIPT\";\ngoog.dom.TagName.SECTION = \"SECTION\";\ngoog.dom.TagName.SELECT = \"SELECT\";\ngoog.dom.TagName.SMALL = \"SMALL\";\ngoog.dom.TagName.SOURCE = \"SOURCE\";\ngoog.dom.TagName.SPAN = \"SPAN\";\ngoog.dom.TagName.STRIKE = \"STRIKE\";\ngoog.dom.TagName.STRONG = \"STRONG\";\ngoog.dom.TagName.STYLE = \"STYLE\";\ngoog.dom.TagName.SUB = \"SUB\";\ngoog.dom.TagName.SUMMARY = \"SUMMARY\";\ngoog.dom.TagName.SUP = \"SUP\";\ngoog.dom.TagName.SVG = \"SVG\";\ngoog.dom.TagName.TABLE = \"TABLE\";\ngoog.dom.TagName.TBODY = \"TBODY\";\ngoog.dom.TagName.TD = \"TD\";\ngoog.dom.TagName.TEMPLATE = \"TEMPLATE\";\ngoog.dom.TagName.TEXTAREA = \"TEXTAREA\";\ngoog.dom.TagName.TFOOT = \"TFOOT\";\ngoog.dom.TagName.TH = \"TH\";\ngoog.dom.TagName.THEAD = \"THEAD\";\ngoog.dom.TagName.TIME = \"TIME\";\ngoog.dom.TagName.TITLE = \"TITLE\";\ngoog.dom.TagName.TR = \"TR\";\ngoog.dom.TagName.TRACK = \"TRACK\";\ngoog.dom.TagName.TT = \"TT\";\ngoog.dom.TagName.U = \"U\";\ngoog.dom.TagName.UL = \"UL\";\ngoog.dom.TagName.VAR = \"VAR\";\ngoog.dom.TagName.VIDEO = \"VIDEO\";\ngoog.dom.TagName.WBR = \"WBR\";\ngoog.dom.tags = {};\ngoog.dom.tags.VOID_TAGS_ = {area:!0, base:!0, br:!0, col:!0, command:!0, embed:!0, hr:!0, img:!0, input:!0, keygen:!0, link:!0, meta:!0, param:!0, source:!0, track:!0, wbr:!0};\ngoog.dom.tags.isVoidTag = function(tagName) {\n  return !0 === goog.dom.tags.VOID_TAGS_[tagName];\n};\ngoog.html = {};\ngoog.html.trustedtypes = {};\ngoog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse = function() {\n  if (!goog.TRUSTED_TYPES_POLICY_NAME) {\n    return null;\n  }\n  void 0 === goog.html.trustedtypes.cachedPolicy_ && (goog.html.trustedtypes.cachedPolicy_ = goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + \"#html\"));\n  return goog.html.trustedtypes.cachedPolicy_;\n};\ngoog.string.TypedString = function() {\n};\ngoog.string.Const = function(opt_token, opt_content) {\n  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = opt_token === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || \"\";\n  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;\n};\ngoog.string.Const.prototype.implementsGoogStringTypedString = !0;\ngoog.string.Const.prototype.getTypedStringValue = function() {\n  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n};\ngoog.DEBUG && (goog.string.Const.prototype.toString = function() {\n  return \"Const{\" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + \"}\";\n});\ngoog.string.Const.unwrap = function(stringConst) {\n  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {\n    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n  }\n  goog.asserts.fail(\"expected object of type Const, got '\" + stringConst + \"'\");\n  return \"type_error:Const\";\n};\ngoog.string.Const.from = function(s) {\n  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);\n};\ngoog.string.Const.TYPE_MARKER_ = {};\ngoog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};\ngoog.string.Const.EMPTY = goog.string.Const.from(\"\");\nvar module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE = {}, module$contents$goog$html$SafeScript_SafeScript = function(value, token) {\n  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = token === module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE ? value : \"\";\n  this.implementsGoogStringTypedString = !0;\n};\nmodule$contents$goog$html$SafeScript_SafeScript.fromConstant = function(script) {\n  var scriptString = goog.string.Const.unwrap(script);\n  return 0 === scriptString.length ? module$contents$goog$html$SafeScript_SafeScript.EMPTY : module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);\n};\nmodule$contents$goog$html$SafeScript_SafeScript.fromJson = function(val) {\n  return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(val));\n};\nmodule$contents$goog$html$SafeScript_SafeScript.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();\n};\nmodule$contents$goog$html$SafeScript_SafeScript.unwrap = function(safeScript) {\n  return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(safeScript).toString();\n};\nmodule$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript = function(safeScript) {\n  if (safeScript instanceof module$contents$goog$html$SafeScript_SafeScript && safeScript.constructor === module$contents$goog$html$SafeScript_SafeScript) {\n    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;\n  }\n  (0,goog.asserts.fail)(\"expected object of type SafeScript, got '\" + safeScript + \"' of type \" + goog.typeOf(safeScript));\n  return \"type_error:SafeScript\";\n};\nmodule$contents$goog$html$SafeScript_SafeScript.stringify_ = function(val) {\n  return JSON.stringify(val).replace(/</g, \"\\\\x3c\");\n};\nmodule$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {\n  var policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse(), trustedScript = policy ? policy.createScript(script) : script;\n  return new module$contents$goog$html$SafeScript_SafeScript(trustedScript, module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE);\n};\nmodule$contents$goog$html$SafeScript_SafeScript.prototype.toString = function() {\n  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();\n};\nmodule$contents$goog$html$SafeScript_SafeScript.EMPTY = function() {\n  return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\"\");\n}();\ngoog.html.SafeScript = module$contents$goog$html$SafeScript_SafeScript;\ngoog.fs = {};\ngoog.fs.url = {};\ngoog.fs.url.createObjectUrl = function(obj) {\n  return goog.fs.url.getUrlObject_().createObjectURL(obj);\n};\ngoog.fs.url.revokeObjectUrl = function(url) {\n  goog.fs.url.getUrlObject_().revokeObjectURL(url);\n};\ngoog.fs.url.UrlObject_ = function() {\n};\ngoog.fs.url.UrlObject_.prototype.createObjectURL = function(arg) {\n};\ngoog.fs.url.UrlObject_.prototype.revokeObjectURL = function(s) {\n};\ngoog.fs.url.getUrlObject_ = function() {\n  var urlObject = goog.fs.url.findUrlObject_();\n  if (null != urlObject) {\n    return urlObject;\n  }\n  throw Error(\"This browser doesn't seem to support blob URLs\");\n};\ngoog.fs.url.findUrlObject_ = function() {\n  return void 0 !== goog.global.URL && void 0 !== goog.global.URL.createObjectURL ? goog.global.URL : void 0 !== goog.global.createObjectURL ? goog.global : null;\n};\ngoog.fs.url.browserSupportsObjectUrls = function() {\n  return null != goog.fs.url.findUrlObject_();\n};\ngoog.fs.blob = {};\ngoog.fs.blob.getBlob = function(var_args) {\n  var BlobBuilder = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;\n  if (void 0 !== BlobBuilder) {\n    for (var bb = new BlobBuilder(), i = 0; i < arguments.length; i++) {\n      bb.append(arguments[i]);\n    }\n    return bb.getBlob();\n  }\n  return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments));\n};\ngoog.fs.blob.getBlobWithProperties = function(parts, opt_type, opt_endings) {\n  var BlobBuilder = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;\n  if (void 0 !== BlobBuilder) {\n    for (var bb = new BlobBuilder(), i = 0; i < parts.length; i++) {\n      bb.append(parts[i], opt_endings);\n    }\n    return bb.getBlob(opt_type);\n  }\n  if (void 0 !== goog.global.Blob) {\n    var properties = {};\n    opt_type && (properties.type = opt_type);\n    opt_endings && (properties.endings = opt_endings);\n    return new Blob(parts, properties);\n  }\n  throw Error(\"This browser doesn't seem to support creating Blobs\");\n};\ngoog.i18n = {};\ngoog.i18n.bidi = {};\ngoog.i18n.bidi.FORCE_RTL = !1;\ngoog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (\"ar\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"fa\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"he\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"iw\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"ps\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"sd\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"ug\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"ur\" == goog.LOCALE.substring(0, 2).toLowerCase() || \"yi\" == goog.LOCALE.substring(0, \n2).toLowerCase()) && (2 == goog.LOCALE.length || \"-\" == goog.LOCALE.substring(2, 3) || \"_\" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && \"ckb\" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || \"-\" == goog.LOCALE.substring(3, 4) || \"_\" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && (\"-\" == goog.LOCALE.substring(2, 3) || \"_\" == goog.LOCALE.substring(2, 3)) && (\"adlm\" == goog.LOCALE.substring(3, 7).toLowerCase() || \"arab\" == goog.LOCALE.substring(3, \n7).toLowerCase() || \"hebr\" == goog.LOCALE.substring(3, 7).toLowerCase() || \"nkoo\" == goog.LOCALE.substring(3, 7).toLowerCase() || \"rohg\" == goog.LOCALE.substring(3, 7).toLowerCase() || \"thaa\" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && (\"-\" == goog.LOCALE.substring(3, 4) || \"_\" == goog.LOCALE.substring(3, 4)) && (\"adlm\" == goog.LOCALE.substring(4, 8).toLowerCase() || \"arab\" == goog.LOCALE.substring(4, 8).toLowerCase() || \"hebr\" == goog.LOCALE.substring(4, 8).toLowerCase() || \n\"nkoo\" == goog.LOCALE.substring(4, 8).toLowerCase() || \"rohg\" == goog.LOCALE.substring(4, 8).toLowerCase() || \"thaa\" == goog.LOCALE.substring(4, 8).toLowerCase());\ngoog.i18n.bidi.Format = {LRE:\"\\u202a\", RLE:\"\\u202b\", PDF:\"\\u202c\", LRM:\"\\u200e\", RLM:\"\\u200f\"};\ngoog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};\ngoog.i18n.bidi.RIGHT = \"right\";\ngoog.i18n.bidi.LEFT = \"left\";\ngoog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;\ngoog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;\ngoog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {\n  return \"number\" == typeof givenDir ? 0 < givenDir ? goog.i18n.bidi.Dir.LTR : 0 > givenDir ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL : null == givenDir ? null : givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n};\ngoog.i18n.bidi.ltrChars_ = \"A-Za-z\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02b8\\u0300-\\u0590\\u0900-\\u1fff\\u200e\\u2c00-\\ud801\\ud804-\\ud839\\ud83c-\\udbff\\uf900-\\ufb1c\\ufe00-\\ufe6f\\ufefd-\\uffff\";\ngoog.i18n.bidi.rtlChars_ = \"\\u0591-\\u06ef\\u06fa-\\u08ff\\u200f\\ud802-\\ud803\\ud83a-\\ud83b\\ufb1d-\\ufdff\\ufe70-\\ufefc\";\ngoog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;\ngoog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {\n  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, \"\") : str;\n};\ngoog.i18n.bidi.rtlCharReg_ = new RegExp(\"[\" + goog.i18n.bidi.rtlChars_ + \"]\");\ngoog.i18n.bidi.ltrCharReg_ = new RegExp(\"[\" + goog.i18n.bidi.ltrChars_ + \"]\");\ngoog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;\ngoog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.ltrRe_ = new RegExp(\"^[\" + goog.i18n.bidi.ltrChars_ + \"]\");\ngoog.i18n.bidi.rtlRe_ = new RegExp(\"^[\" + goog.i18n.bidi.rtlChars_ + \"]\");\ngoog.i18n.bidi.isRtlChar = function(str) {\n  return goog.i18n.bidi.rtlRe_.test(str);\n};\ngoog.i18n.bidi.isLtrChar = function(str) {\n  return goog.i18n.bidi.ltrRe_.test(str);\n};\ngoog.i18n.bidi.isNeutralChar = function(str) {\n  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);\n};\ngoog.i18n.bidi.ltrDirCheckRe_ = new RegExp(\"^[^\" + goog.i18n.bidi.rtlChars_ + \"]*[\" + goog.i18n.bidi.ltrChars_ + \"]\");\ngoog.i18n.bidi.rtlDirCheckRe_ = new RegExp(\"^[^\" + goog.i18n.bidi.ltrChars_ + \"]*[\" + goog.i18n.bidi.rtlChars_ + \"]\");\ngoog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;\ngoog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;\ngoog.i18n.bidi.isRequiredLtrRe_ = /^http:\\/\\/.*/;\ngoog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {\n  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);\n  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);\n};\ngoog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp(\"[\" + goog.i18n.bidi.ltrChars_ + \"][^\" + goog.i18n.bidi.rtlChars_ + \"]*$\");\ngoog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp(\"[\" + goog.i18n.bidi.rtlChars_ + \"][^\" + goog.i18n.bidi.ltrChars_ + \"]*$\");\ngoog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;\ngoog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;\ngoog.i18n.bidi.rtlLocalesRe_ = RegExp(\"^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)\", \"i\");\ngoog.i18n.bidi.isRtlLanguage = function(lang) {\n  return goog.i18n.bidi.rtlLocalesRe_.test(lang);\n};\ngoog.i18n.bidi.bracketGuardTextRe_ = /(\\(.*?\\)+)|(\\[.*?\\]+)|(\\{.*?\\}+)|(<.*?>+)/g;\ngoog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {\n  var mark = (void 0 === opt_isRtlContext ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;\n  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + \"$&\" + mark);\n};\ngoog.i18n.bidi.enforceRtlInHtml = function(html) {\n  return \"<\" == html.charAt(0) ? html.replace(/<\\w+/, \"$& dir=rtl\") : \"\\n<span dir=rtl>\" + html + \"</span>\";\n};\ngoog.i18n.bidi.enforceRtlInText = function(text) {\n  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;\n};\ngoog.i18n.bidi.enforceLtrInHtml = function(html) {\n  return \"<\" == html.charAt(0) ? html.replace(/<\\w+/, \"$& dir=ltr\") : \"\\n<span dir=ltr>\" + html + \"</span>\";\n};\ngoog.i18n.bidi.enforceLtrInText = function(text) {\n  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;\n};\ngoog.i18n.bidi.dimensionsRe_ = /:\\s*([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)/g;\ngoog.i18n.bidi.leftRe_ = /left/gi;\ngoog.i18n.bidi.rightRe_ = /right/gi;\ngoog.i18n.bidi.tempRe_ = /%%%%/g;\ngoog.i18n.bidi.mirrorCSS = function(cssStr) {\n  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, \":$1 $4 $3 $2\").replace(goog.i18n.bidi.leftRe_, \"%%%%\").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);\n};\ngoog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\\u0591-\\u05f2])\"/g;\ngoog.i18n.bidi.singleQuoteSubstituteRe_ = /([\\u0591-\\u05f2])'/g;\ngoog.i18n.bidi.normalizeHebrewQuote = function(str) {\n  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, \"$1\\u05f4\").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, \"$1\\u05f3\");\n};\ngoog.i18n.bidi.wordSeparatorRe_ = /\\s+/;\ngoog.i18n.bidi.hasNumeralsRe_ = /[\\d\\u06f0-\\u06f9]/;\ngoog.i18n.bidi.rtlDetectionThreshold_ = 0.40;\ngoog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {\n  for (var rtlCount = 0, totalCount = 0, hasWeaklyLtr = !1, tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_), i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    goog.i18n.bidi.startsWithRtl(token) ? (rtlCount++, totalCount++) : goog.i18n.bidi.isRequiredLtrRe_.test(token) ? hasWeaklyLtr = !0 : goog.i18n.bidi.hasAnyLtr(token) ? totalCount++ : goog.i18n.bidi.hasNumeralsRe_.test(token) && (hasWeaklyLtr = !0);\n  }\n  return 0 == totalCount ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n};\ngoog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {\n  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;\n};\ngoog.i18n.bidi.setElementDirAndAlign = function(element, dir) {\n  element && (dir = goog.i18n.bidi.toDir(dir)) && (element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, element.dir = dir == goog.i18n.bidi.Dir.RTL ? \"rtl\" : \"ltr\");\n};\ngoog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {\n  switch(goog.i18n.bidi.estimateDirection(text)) {\n    case goog.i18n.bidi.Dir.LTR:\n      \"ltr\" !== element.dir && (element.dir = \"ltr\");\n      break;\n    case goog.i18n.bidi.Dir.RTL:\n      \"rtl\" !== element.dir && (element.dir = \"rtl\");\n      break;\n    default:\n      element.removeAttribute(\"dir\");\n  }\n};\ngoog.i18n.bidi.DirectionalString = function() {\n};\ngoog.html.TrustedResourceUrl = function(value, token) {\n  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = token === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \"\";\n};\ngoog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;\ngoog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();\n};\ngoog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;\ngoog.html.TrustedResourceUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams = function(searchParams, opt_hashParams) {\n  var url = goog.html.TrustedResourceUrl.unwrap(this), parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url), urlHash = parts[3] || \"\";\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(parts[1] + goog.html.TrustedResourceUrl.stringifyParams_(\"?\", parts[2] || \"\", searchParams) + goog.html.TrustedResourceUrl.stringifyParams_(\"#\", urlHash, opt_hashParams));\n};\ngoog.html.TrustedResourceUrl.prototype.toString = function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + \"\";\n};\ngoog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {\n  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();\n};\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(trustedResourceUrl) {\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl) {\n    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  }\n  goog.asserts.fail(\"expected object of type TrustedResourceUrl, got '\" + trustedResourceUrl + \"' of type \" + goog.typeOf(trustedResourceUrl));\n  return \"type_error:TrustedResourceUrl\";\n};\ngoog.html.TrustedResourceUrl.format = function(format, args) {\n  var formatStr = goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw Error(\"Invalid TrustedResourceUrl format: \" + formatStr);\n  }\n  var result = formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n    if (!Object.prototype.hasOwnProperty.call(args, id)) {\n      throw Error('Found marker, \"' + id + '\", in format string, \"' + formatStr + '\", but no valid label mapping found in args: ' + JSON.stringify(args));\n    }\n    var arg = args[id];\n    return arg instanceof goog.string.Const ? goog.string.Const.unwrap(arg) : encodeURIComponent(String(arg));\n  });\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\\w+)}/g;\ngoog.html.TrustedResourceUrl.BASE_URL_ = RegExp(\"^((https:)?//[0-9a-z.:[\\\\]-]+/|/[^/\\\\\\\\]|[^:/\\\\\\\\%]+/|[^:/\\\\\\\\%]*[?#]|about:blank#)\", \"i\");\ngoog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;\ngoog.html.TrustedResourceUrl.formatWithParams = function(format, args, searchParams, opt_hashParams) {\n  return goog.html.TrustedResourceUrl.format(format, args).cloneWithParams(searchParams, opt_hashParams);\n};\ngoog.html.TrustedResourceUrl.fromConstant = function(url) {\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));\n};\ngoog.html.TrustedResourceUrl.fromConstants = function(parts) {\n  for (var unwrapped = \"\", i = 0; i < parts.length; i++) {\n    unwrapped += goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\ngoog.html.TrustedResourceUrl.fromSafeScript = function(safeScript) {\n  var blob = goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(safeScript)], \"text/javascript\"), url = goog.fs.url.createObjectUrl(blob);\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\ngoog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {\n  var policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse(), value = policy ? policy.createScriptURL(url) : url;\n  return new goog.html.TrustedResourceUrl(value, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.TrustedResourceUrl.stringifyParams_ = function(prefix, currentString, params) {\n  if (null == params) {\n    return currentString;\n  }\n  if (\"string\" === typeof params) {\n    return params ? prefix + encodeURIComponent(params) : \"\";\n  }\n  for (var key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key)) {\n      for (var value = params[key], outputValues = Array.isArray(value) ? value : [value], i = 0; i < outputValues.length; i++) {\n        var outputValue = outputValues[i];\n        null != outputValue && (currentString || (currentString = prefix), currentString += (currentString.length > prefix.length ? \"&\" : \"\") + encodeURIComponent(key) + \"=\" + encodeURIComponent(String(outputValue)));\n      }\n    }\n  }\n  return currentString;\n};\ngoog.html.SafeUrl = function(value, token) {\n  this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = token === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \"\";\n};\ngoog.html.SafeUrl.INNOCUOUS_STRING = \"about:invalid#zClosurez\";\ngoog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;\ngoog.html.SafeUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();\n};\ngoog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;\ngoog.html.SafeUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\ngoog.html.SafeUrl.prototype.toString = function() {\n  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();\n};\ngoog.html.SafeUrl.unwrap = function(safeUrl) {\n  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl) {\n    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;\n  }\n  goog.asserts.fail(\"expected object of type SafeUrl, got '\" + safeUrl + \"' of type \" + goog.typeOf(safeUrl));\n  return \"type_error:SafeUrl\";\n};\ngoog.html.SafeUrl.fromConstant = function(url) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));\n};\ngoog.html.SAFE_MIME_TYPE_PATTERN_ = RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\\\w+=(?:\\\\w+|\"[\\\\w;,= ]+\"))*$', \"i\");\ngoog.html.SafeUrl.isSafeMimeType = function(mimeType) {\n  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);\n};\ngoog.html.SafeUrl.fromBlob = function(blob) {\n  var url = goog.html.SafeUrl.isSafeMimeType(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.revokeObjectUrl = function(safeUrl) {\n  var url = safeUrl.getTypedStringValue();\n  url !== goog.html.SafeUrl.INNOCUOUS_STRING && goog.fs.url.revokeObjectUrl(url);\n};\ngoog.html.SafeUrl.fromMediaSource = function(mediaSource) {\n  goog.asserts.assert(\"MediaSource\" in goog.global, \"No support for MediaSource\");\n  var url = mediaSource instanceof MediaSource ? goog.fs.url.createObjectUrl(mediaSource) : goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.DATA_URL_PATTERN_ = /^data:(.*);base64,[a-z0-9+\\/]+=*$/i;\ngoog.html.SafeUrl.tryFromDataUrl = function(dataUrl) {\n  dataUrl = String(dataUrl);\n  var filteredDataUrl = dataUrl.replace(/(%0A|%0D)/g, \"\"), match = filteredDataUrl.match(goog.html.DATA_URL_PATTERN_);\n  return match && goog.html.SafeUrl.isSafeMimeType(match[1]) ? goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(filteredDataUrl) : null;\n};\ngoog.html.SafeUrl.fromDataUrl = function(dataUrl) {\n  return goog.html.SafeUrl.tryFromDataUrl(dataUrl) || goog.html.SafeUrl.INNOCUOUS_URL;\n};\ngoog.html.SafeUrl.fromTelUrl = function(telUrl) {\n  goog.string.internal.caseInsensitiveStartsWith(telUrl, \"tel:\") || (telUrl = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);\n};\ngoog.html.SIP_URL_PATTERN_ = RegExp(\"^sip[s]?:[+a-z0-9_.!$%&'*\\\\/=^`{|}~-]+@([a-z0-9-]+\\\\.)+[a-z0-9]{2,63}$\", \"i\");\ngoog.html.SafeUrl.fromSipUrl = function(sipUrl) {\n  goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl)) || (sipUrl = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);\n};\ngoog.html.SafeUrl.fromFacebookMessengerUrl = function(facebookMessengerUrl) {\n  goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, \"fb-messenger://share\") || (facebookMessengerUrl = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);\n};\ngoog.html.SafeUrl.fromWhatsAppUrl = function(whatsAppUrl) {\n  goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, \"whatsapp://send\") || (whatsAppUrl = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);\n};\ngoog.html.SafeUrl.fromSmsUrl = function(smsUrl) {\n  goog.string.internal.caseInsensitiveStartsWith(smsUrl, \"sms:\") && goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl) || (smsUrl = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);\n};\ngoog.html.SafeUrl.isSmsUrlBodyValid_ = function(smsUrl) {\n  var hash = smsUrl.indexOf(\"#\");\n  0 < hash && (smsUrl = smsUrl.substring(0, hash));\n  var bodyParams = smsUrl.match(/[?&]body=/gi);\n  if (!bodyParams) {\n    return !0;\n  }\n  if (1 < bodyParams.length) {\n    return !1;\n  }\n  var bodyValue = smsUrl.match(/[?&]body=([^&]*)/)[1];\n  if (!bodyValue) {\n    return !0;\n  }\n  try {\n    decodeURIComponent(bodyValue);\n  } catch (error) {\n    return !1;\n  }\n  return /^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);\n};\ngoog.html.SafeUrl.fromSshUrl = function(sshUrl) {\n  goog.string.internal.caseInsensitiveStartsWith(sshUrl, \"ssh://\") || (sshUrl = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);\n};\ngoog.html.SafeUrl.sanitizeChromeExtensionUrl = function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeExtensionUrl_ = function(scheme, url, extensionId) {\n  var matches = scheme.exec(url);\n  if (matches) {\n    var extractedExtensionId = matches[1];\n    -1 == (extensionId instanceof goog.string.Const ? [goog.string.Const.unwrap(extensionId)] : extensionId.map(function unwrap(x) {\n      return goog.string.Const.unwrap(x);\n    })).indexOf(extractedExtensionId) && (url = goog.html.SafeUrl.INNOCUOUS_STRING);\n  } else {\n    url = goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));\n};\ngoog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\ngoog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;\ngoog.html.SafeUrl.trySanitize = function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  }\n  url = \"object\" == typeof url && url.implementsGoogStringTypedString ? url.getTypedStringValue() : String(url);\n  return goog.html.SAFE_URL_PATTERN_.test(url) ? goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url) : goog.html.SafeUrl.tryFromDataUrl(url);\n};\ngoog.html.SafeUrl.sanitize = function(url) {\n  return goog.html.SafeUrl.trySanitize(url) || goog.html.SafeUrl.INNOCUOUS_URL;\n};\ngoog.html.SafeUrl.sanitizeAssertUnchanged = function(url, opt_allowDataUrl) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  }\n  url = \"object\" == typeof url && url.implementsGoogStringTypedString ? url.getTypedStringValue() : String(url);\n  if (opt_allowDataUrl && /^data:/i.test(url)) {\n    var safeUrl = goog.html.SafeUrl.fromDataUrl(url);\n    if (safeUrl.getTypedStringValue() == url) {\n      return safeUrl;\n    }\n  }\n  goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), \"%s does not match the safe URL pattern\", url) || (url = goog.html.SafeUrl.INNOCUOUS_STRING);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\ngoog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {\n  return new goog.html.SafeUrl(url, goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.SafeUrl.INNOCUOUS_URL = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);\ngoog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\"about:blank\");\nvar module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE = {}, module$contents$goog$html$SafeStyle_SafeStyle = function(value, token) {\n  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = token === module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE ? value : \"\";\n  this.implementsGoogStringTypedString = !0;\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.fromConstant = function(style) {\n  var styleString = goog.string.Const.unwrap(style);\n  if (0 === styleString.length) {\n    return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;\n  }\n  (0,goog.asserts.assert)((0,goog.string.internal.endsWith)(styleString, \";\"), \"Last character of style string is not ';': \" + styleString);\n  (0,goog.asserts.assert)((0,goog.string.internal.contains)(styleString, \":\"), \"Style string must contain at least one ':', to specify a \\\"name: value\\\" pair: \" + styleString);\n  return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.prototype.toString = function() {\n  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.unwrap = function(safeStyle) {\n  if (safeStyle instanceof module$contents$goog$html$SafeStyle_SafeStyle && safeStyle.constructor === module$contents$goog$html$SafeStyle_SafeStyle) {\n    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n  }\n  (0,goog.asserts.fail)(\"expected object of type SafeStyle, got '\" + safeStyle + \"' of type \" + goog.typeOf(safeStyle));\n  return \"type_error:SafeStyle\";\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {\n  return new module$contents$goog$html$SafeStyle_SafeStyle(style, module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE);\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.create = function(map) {\n  var style = \"\", name;\n  for (name in map) {\n    if (Object.prototype.hasOwnProperty.call(map, name)) {\n      if (!/^[-_a-zA-Z0-9]+$/.test(name)) {\n        throw Error(\"Name allows only [-_a-zA-Z0-9], got: \" + name);\n      }\n      var value = map[name];\n      null != value && (value = Array.isArray(value) ? value.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(\" \") : module$contents$goog$html$SafeStyle_sanitizePropertyValue(value), style += name + \":\" + value + \";\");\n    }\n  }\n  return style ? module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style) : module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.concat = function(var_args) {\n  var style = \"\", addArgument = function(argument) {\n    Array.isArray(argument) ? argument.forEach(addArgument) : style += module$contents$goog$html$SafeStyle_SafeStyle.unwrap(argument);\n  };\n  Array.prototype.forEach.call(arguments, addArgument);\n  return style ? module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style) : module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;\n};\nmodule$contents$goog$html$SafeStyle_SafeStyle.EMPTY = module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\"\");\nmodule$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING = \"zClosurez\";\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValue(value) {\n  if (value instanceof goog.html.SafeUrl) {\n    return 'url(\"' + goog.html.SafeUrl.unwrap(value).replace(/</g, \"%3c\").replace(/[\\\\\"]/g, \"\\\\$&\") + '\")';\n  }\n  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(value));\n  if (/[{;}]/.test(result)) {\n    throw new goog.asserts.AssertionError(\"Value does not allow [{;}], got: %s.\", [result]);\n  }\n  return result;\n}\nfunction module$contents$goog$html$SafeStyle_sanitizePropertyValueString(value) {\n  var valueWithoutFunctions = value.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE, \"$1\").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE, \"$1\").replace(module$contents$goog$html$SafeStyle_URL_RE, \"url\");\n  if (module$contents$goog$html$SafeStyle_VALUE_RE.test(valueWithoutFunctions)) {\n    if (module$contents$goog$html$SafeStyle_COMMENT_RE.test(value)) {\n      return (0,goog.asserts.fail)(\"String value disallows comments, got: \" + value), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\n    }\n    if (!module$contents$goog$html$SafeStyle_hasBalancedQuotes(value)) {\n      return (0,goog.asserts.fail)(\"String value requires balanced quotes, got: \" + value), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\n    }\n    if (!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(value)) {\n      return (0,goog.asserts.fail)(\"String value requires balanced square brackets and one identifier per pair of brackets, got: \" + value), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\n    }\n  } else {\n    return (0,goog.asserts.fail)(\"String value allows only [-,.\\\"'%_!#/ a-zA-Z0-9\\\\[\\\\]] and simple functions, got: \" + value), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;\n  }\n  return module$contents$goog$html$SafeStyle_sanitizeUrl(value);\n}\nfunction module$contents$goog$html$SafeStyle_hasBalancedQuotes(value) {\n  for (var outsideSingle = !0, outsideDouble = !0, i = 0; i < value.length; i++) {\n    var c = value.charAt(i);\n    \"'\" == c && outsideDouble ? outsideSingle = !outsideSingle : '\"' == c && outsideSingle && (outsideDouble = !outsideDouble);\n  }\n  return outsideSingle && outsideDouble;\n}\nfunction module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(value) {\n  for (var outside = !0, tokenRe = /^[-_a-zA-Z0-9]$/, i = 0; i < value.length; i++) {\n    var c = value.charAt(i);\n    if (\"]\" == c) {\n      if (outside) {\n        return !1;\n      }\n      outside = !0;\n    } else {\n      if (\"[\" == c) {\n        if (!outside) {\n          return !1;\n        }\n        outside = !1;\n      } else {\n        if (!outside && !tokenRe.test(c)) {\n          return !1;\n        }\n      }\n    }\n  }\n  return outside;\n}\nvar module$contents$goog$html$SafeStyle_VALUE_RE = RegExp(\"^[-,.\\\"'%_!#/ a-zA-Z0-9\\\\[\\\\]]+$\"), module$contents$goog$html$SafeStyle_URL_RE = RegExp(\"\\\\b(url\\\\([ \\t\\n]*)('[ -&(-\\\\[\\\\]-~]*'|\\\"[ !#-\\\\[\\\\]-~]*\\\"|[!#-&*-\\\\[\\\\]-~]*)([ \\t\\n]*\\\\))\", \"g\"), module$contents$goog$html$SafeStyle_FUNCTIONS_RE = RegExp(\"\\\\b(calc|cubic-bezier|fit-content|hsl|hsla|linear-gradient|matrix|minmax|repeat|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?|var)\\\\([-+*/0-9a-zA-Z.%#\\\\[\\\\], ]+\\\\)\", \"g\"), module$contents$goog$html$SafeStyle_COMMENT_RE = \n/\\/\\*/;\nfunction module$contents$goog$html$SafeStyle_sanitizeUrl(value) {\n  return value.replace(module$contents$goog$html$SafeStyle_URL_RE, function(match$jscomp$0, before, url, after) {\n    var quote = \"\";\n    url = url.replace(/^(['\"])(.*)\\1$/, function(match, start, inside) {\n      quote = start;\n      return inside;\n    });\n    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();\n    return before + quote + sanitized + quote + after;\n  });\n}\ngoog.html.SafeStyle = module$contents$goog$html$SafeStyle_SafeStyle;\nvar module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE = {}, module$contents$goog$html$SafeStyleSheet_SafeStyleSheet = function(value, token) {\n  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = token === module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE ? value : \"\";\n  this.implementsGoogStringTypedString = !0;\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createRule = function(selector, style) {\n  if ((0,goog.string.internal.contains)(selector, \"<\")) {\n    throw Error(\"Selector does not allow '<', got: \" + selector);\n  }\n  var selectorToCheck = selector.replace(/('|\")((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g, \"\");\n  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|]+$/.test(selectorToCheck)) {\n    throw Error(\"Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\\\]()=^$|] and strings, got: \" + selector);\n  }\n  if (!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {\n    throw Error(\"() and [] in selector must be balanced, got: \" + selector);\n  }\n  style instanceof module$contents$goog$html$SafeStyle_SafeStyle || (style = module$contents$goog$html$SafeStyle_SafeStyle.create(style));\n  var styleSheet = selector + \"{\" + module$contents$goog$html$SafeStyle_SafeStyle.unwrap(style).replace(/</g, \"\\\\3C \") + \"}\";\n  return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_ = function(s) {\n  for (var brackets = {\"(\":\")\", \"[\":\"]\"}, expectedBrackets = [], i = 0; i < s.length; i++) {\n    var ch = s[i];\n    if (brackets[ch]) {\n      expectedBrackets.push(brackets[ch]);\n    } else {\n      if (module$contents$goog$object_contains(brackets, ch) && expectedBrackets.pop() != ch) {\n        return !1;\n      }\n    }\n  }\n  return 0 == expectedBrackets.length;\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.concat = function(var_args) {\n  var result = \"\", addArgument = function(argument) {\n    Array.isArray(argument) ? argument.forEach(addArgument) : result += module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(argument);\n  };\n  Array.prototype.forEach.call(arguments, addArgument);\n  return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.fromConstant = function(styleSheet) {\n  var styleSheetString = goog.string.Const.unwrap(styleSheet);\n  if (0 === styleSheetString.length) {\n    return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;\n  }\n  (0,goog.asserts.assert)(!(0,goog.string.internal.contains)(styleSheetString, \"<\"), \"Forbidden '<' character in style sheet string: \" + styleSheetString);\n  return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap = function(safeStyleSheet) {\n  if (safeStyleSheet instanceof module$contents$goog$html$SafeStyleSheet_SafeStyleSheet && safeStyleSheet.constructor === module$contents$goog$html$SafeStyleSheet_SafeStyleSheet) {\n    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;\n  }\n  (0,goog.asserts.fail)(\"expected object of type SafeStyleSheet, got '\" + safeStyleSheet + \"' of type \" + goog.typeOf(safeStyleSheet));\n  return \"type_error:SafeStyleSheet\";\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {\n  return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(styleSheet, module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE);\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.prototype.toString = function() {\n  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString();\n};\nmodule$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\"\");\ngoog.html.SafeStyleSheet = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;\nvar module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE = {}, module$contents$goog$html$SafeHtml_SafeHtml = function(value, dir, token) {\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = token === module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE ? value : \"\";\n  this.dir_ = dir;\n  this.implementsGoogStringTypedString = this.implementsGoogI18nBidiDirectionalString = !0;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.prototype.getDirection = function() {\n  return this.dir_;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.prototype.toString = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.unwrap = function(safeHtml) {\n  return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML = function(safeHtml) {\n  if (safeHtml instanceof module$contents$goog$html$SafeHtml_SafeHtml && safeHtml.constructor === module$contents$goog$html$SafeHtml_SafeHtml) {\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  }\n  goog.asserts.fail(\"expected object of type SafeHtml, got '\" + safeHtml + \"' of type \" + goog.typeOf(safeHtml));\n  return \"type_error:SafeHtml\";\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.htmlEscape = function(textOrHtml) {\n  if (textOrHtml instanceof module$contents$goog$html$SafeHtml_SafeHtml) {\n    return textOrHtml;\n  }\n  var textIsObject = \"object\" == typeof textOrHtml, dir = null;\n  textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString && (dir = textOrHtml.getDirection());\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(textIsObject && textOrHtml.implementsGoogStringTypedString ? textOrHtml.getTypedStringValue() : String(textOrHtml)), dir);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\n  if (textOrHtml instanceof module$contents$goog$html$SafeHtml_SafeHtml) {\n    return textOrHtml;\n  }\n  var html = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(textOrHtml);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(html)), html.getDirection());\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {\n  if (textOrHtml instanceof module$contents$goog$html$SafeHtml_SafeHtml) {\n    return textOrHtml;\n  }\n  var html = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(textOrHtml);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(html)), html.getDirection());\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.comment = function(text) {\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\x3c!--\" + goog.string.internal.htmlEscape(text) + \"--\\x3e\", null);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.create = function(tagName, attributes, content) {\n  module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(tagName));\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), attributes, content);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.verifyTagName = function(tagName) {\n  if (!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(tagName)) {\n    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? \"Invalid tag name <\" + tagName + \">.\" : \"\");\n  }\n  if (tagName.toUpperCase() in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES) {\n    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? \"Tag name <\" + tagName + \"> is not allowed for SafeHtml.\" : \"\");\n  }\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createIframe = function(src, srcdoc, attributes, content) {\n  src && goog.html.TrustedResourceUrl.unwrap(src);\n  var fixedAttributes = {};\n  fixedAttributes.src = src || null;\n  fixedAttributes.srcdoc = srcdoc && module$contents$goog$html$SafeHtml_SafeHtml.unwrap(srcdoc);\n  var combinedAttrs = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(fixedAttributes, {sandbox:\"\"}, attributes);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\", combinedAttrs, content);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createSandboxIframe = function(src, srcdoc, attributes, content) {\n  if (!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe()) {\n    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? \"The browser does not support sandboxed iframes.\" : \"\");\n  }\n  var fixedAttributes = {};\n  fixedAttributes.src = src ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(src)) : null;\n  fixedAttributes.srcdoc = srcdoc || null;\n  fixedAttributes.sandbox = \"\";\n  var combinedAttrs = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(fixedAttributes, {}, attributes);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\", combinedAttrs, content);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe = function() {\n  return goog.global.HTMLIFrameElement && \"sandbox\" in goog.global.HTMLIFrameElement.prototype;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createScriptSrc = function(src, attributes) {\n  goog.html.TrustedResourceUrl.unwrap(src);\n  var combinedAttrs = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:src}, {}, attributes);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\", combinedAttrs);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createScript = function(script, attributes) {\n  for (var attr in attributes) {\n    if (Object.prototype.hasOwnProperty.call(attributes, attr)) {\n      var attrLower = attr.toLowerCase();\n      if (\"language\" == attrLower || \"src\" == attrLower || \"text\" == attrLower || \"type\" == attrLower) {\n        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set \"' + attrLower + '\" attribute' : \"\");\n      }\n    }\n  }\n  var content = \"\";\n  script = module$contents$goog$array_concat(script);\n  for (var i = 0; i < script.length; i++) {\n    content += module$contents$goog$html$SafeScript_SafeScript.unwrap(script[i]);\n  }\n  var htmlContent = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\", attributes, htmlContent);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createStyle = function(styleSheet, attributes) {\n  var combinedAttrs = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:\"text/css\"}, {}, attributes), content = \"\";\n  styleSheet = module$contents$goog$array_concat(styleSheet);\n  for (var i = 0; i < styleSheet.length; i++) {\n    content += module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(styleSheet[i]);\n  }\n  var htmlContent = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"style\", combinedAttrs, htmlContent);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createMetaRefresh = function(url, secs) {\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n  (module$contents$goog$labs$userAgent$browser_matchIE() || module$contents$goog$labs$userAgent$browser_matchEdgeHtml()) && goog.string.internal.contains(unwrappedUrl, \";\") && (unwrappedUrl = \"'\" + unwrappedUrl.replace(/'/g, \"%27\") + \"'\");\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"meta\", {\"http-equiv\":\"refresh\", content:(secs || 0) + \"; url=\" + unwrappedUrl,});\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createWithDir = function(dir, tagName, attributes, content) {\n  var html = module$contents$goog$html$SafeHtml_SafeHtml.create(tagName, attributes, content);\n  html.dir_ = dir;\n  return html;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.join = function(separator, parts) {\n  var separatorHtml = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(separator), dir = separatorHtml.getDirection(), content = [], addArgument = function(argument) {\n    if (Array.isArray(argument)) {\n      argument.forEach(addArgument);\n    } else {\n      var html = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(argument);\n      content.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(html));\n      var htmlDir = html.getDirection();\n      dir == goog.i18n.bidi.Dir.NEUTRAL ? dir = htmlDir : htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir && (dir = null);\n    }\n  };\n  parts.forEach(addArgument);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(separatorHtml)), dir);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.concat = function(var_args) {\n  return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.concatWithDir = function(dir, var_args) {\n  var html = module$contents$goog$html$SafeHtml_SafeHtml.concat(Array.prototype.slice.call(arguments, 1));\n  html.dir_ = dir;\n  return html;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {\n  var policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse(), trustedHtml = policy ? policy.createHTML(html) : html;\n  return new module$contents$goog$html$SafeHtml_SafeHtml(trustedHtml, dir, module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, attributes, content) {\n  var dir = null;\n  var result = \"<\" + tagName + module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(tagName, attributes);\n  null == content ? content = [] : Array.isArray(content) || (content = [content]);\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\n    goog.asserts.assert(!content.length, \"Void tag <\" + tagName + \"> does not allow content.\"), result += \">\";\n  } else {\n    var html = module$contents$goog$html$SafeHtml_SafeHtml.concat(content);\n    result += \">\" + module$contents$goog$html$SafeHtml_SafeHtml.unwrap(html) + \"</\" + tagName + \">\";\n    dir = html.getDirection();\n  }\n  var dirAttribute = attributes && attributes.dir;\n  dirAttribute && (dir = /^(ltr|rtl|auto)$/i.test(dirAttribute) ? goog.i18n.bidi.Dir.NEUTRAL : null);\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes = function(tagName, attributes) {\n  var result = \"\";\n  if (attributes) {\n    for (var name in attributes) {\n      if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n        if (!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(name)) {\n          throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name \"' + name + '\".' : \"\");\n        }\n        var value = attributes[name];\n        null != value && (result += \" \" + module$contents$goog$html$SafeHtml_getAttrNameAndValue(tagName, name, value));\n      }\n    }\n  }\n  return result;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, attributes) {\n  var combinedAttributes = {}, name;\n  for (name in fixedAttributes) {\n    Object.prototype.hasOwnProperty.call(fixedAttributes, name) && (goog.asserts.assert(name.toLowerCase() == name, \"Must be lower case\"), combinedAttributes[name] = fixedAttributes[name]);\n  }\n  for (var name$48 in defaultAttributes) {\n    Object.prototype.hasOwnProperty.call(defaultAttributes, name$48) && (goog.asserts.assert(name$48.toLowerCase() == name$48, \"Must be lower case\"), combinedAttributes[name$48] = defaultAttributes[name$48]);\n  }\n  if (attributes) {\n    for (var name$49 in attributes) {\n      if (Object.prototype.hasOwnProperty.call(attributes, name$49)) {\n        var nameLower = name$49.toLowerCase();\n        if (nameLower in fixedAttributes) {\n          throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override \"' + nameLower + '\" attribute, got \"' + name$49 + '\" with value \"' + attributes[name$49] + '\"' : \"\");\n        }\n        nameLower in defaultAttributes && delete combinedAttributes[nameLower];\n        combinedAttributes[name$49] = attributes[name$49];\n      }\n    }\n  }\n  return combinedAttributes;\n};\nmodule$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG;\nmodule$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE = !0;\nmodule$contents$goog$html$SafeHtml_SafeHtml.from = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;\nvar module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG = /^[a-zA-Z0-9-]+$/, module$contents$goog$html$SafeHtml_URL_ATTRIBUTES = {action:!0, cite:!0, data:!0, formaction:!0, href:!0, manifest:!0, poster:!0, src:!0}, module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES = module$contents$goog$object_createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, \ngoog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\nfunction module$contents$goog$html$SafeHtml_getAttrNameAndValue(tagName, name, value) {\n  if (value instanceof goog.string.Const) {\n    value = goog.string.Const.unwrap(value);\n  } else {\n    if (\"style\" == name.toLowerCase()) {\n      if (module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n        value = module$contents$goog$html$SafeHtml_getStyleValue(value);\n      } else {\n        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"style\" not supported.' : \"\");\n      }\n    } else {\n      if (/^on/i.test(name)) {\n        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"' + name + '\" requires goog.string.Const value, \"' + value + '\" given.' : \"\");\n      }\n      if (name.toLowerCase() in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES) {\n        if (value instanceof goog.html.TrustedResourceUrl) {\n          value = goog.html.TrustedResourceUrl.unwrap(value);\n        } else {\n          if (value instanceof goog.html.SafeUrl) {\n            value = goog.html.SafeUrl.unwrap(value);\n          } else {\n            if (\"string\" === typeof value) {\n              value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\n            } else {\n              throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"' + name + '\" on tag \"' + tagName + '\" requires goog.html.SafeUrl, goog.string.Const, or string, value \"' + value + '\" given.' : \"\");\n            }\n          }\n        }\n      }\n    }\n  }\n  value.implementsGoogStringTypedString && (value = value.getTypedStringValue());\n  goog.asserts.assert(\"string\" === typeof value || \"number\" === typeof value, \"String or number value expected, got \" + typeof value + \" with value: \" + value);\n  return name + '=\"' + goog.string.internal.htmlEscape(String(value)) + '\"';\n}\nfunction module$contents$goog$html$SafeHtml_getStyleValue(value) {\n  if (!goog.isObject(value)) {\n    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'The \"style\" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof value + \" given: \" + value : \"\");\n  }\n  value instanceof module$contents$goog$html$SafeStyle_SafeStyle || (value = module$contents$goog$html$SafeStyle_SafeStyle.create(value));\n  return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(value);\n}\nmodule$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML = function() {\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<!DOCTYPE html>\", goog.i18n.bidi.Dir.NEUTRAL);\n}();\nmodule$contents$goog$html$SafeHtml_SafeHtml.EMPTY = new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML || \"\", goog.i18n.bidi.Dir.NEUTRAL, module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);\nmodule$contents$goog$html$SafeHtml_SafeHtml.BR = function() {\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"<br>\", goog.i18n.bidi.Dir.NEUTRAL);\n}();\ngoog.html.SafeHtml = module$contents$goog$html$SafeHtml_SafeHtml;\ngoog.html.uncheckedconversions = {};\ngoog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \"must provide justification\");\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \"must provide non-empty justification\");\n  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);\n};\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \"must provide justification\");\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \"must provide non-empty justification\");\n  return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);\n};\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \"must provide justification\");\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \"must provide non-empty justification\");\n  return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n};\ngoog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \"must provide justification\");\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \"must provide non-empty justification\");\n  return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \"must provide justification\");\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \"must provide non-empty justification\");\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \"must provide justification\");\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \"must provide non-empty justification\");\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.dom.safe = {};\ngoog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:\"afterbegin\", AFTEREND:\"afterend\", BEFOREBEGIN:\"beforebegin\", BEFOREEND:\"beforeend\"};\ngoog.dom.safe.insertAdjacentHtml = function(node, position, html) {\n  node.insertAdjacentHTML(position, module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {MATH:!0, SCRIPT:!0, STYLE:!0, SVG:!0, TEMPLATE:!0};\ngoog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {\n  if (goog.DEBUG && \"undefined\" === typeof document) {\n    return !1;\n  }\n  var div = document.createElement(\"div\"), childDiv = document.createElement(\"div\");\n  childDiv.appendChild(document.createElement(\"div\"));\n  div.appendChild(childDiv);\n  if (goog.DEBUG && !div.firstChild) {\n    return !1;\n  }\n  var innerChild = div.firstChild.firstChild;\n  div.innerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);\n  return !innerChild.parentElement;\n});\ngoog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(elem, html) {\n  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {\n    for (; elem.lastChild;) {\n      elem.removeChild(elem.lastChild);\n    }\n  }\n  elem.innerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setInnerHtml = function(elem, html) {\n  if (goog.asserts.ENABLE_ASSERTS && elem.tagName && goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[elem.tagName.toUpperCase()]) {\n    throw Error(\"goog.dom.safe.setInnerHtml cannot be used to set content of \" + elem.tagName + \".\");\n  }\n  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);\n};\ngoog.dom.safe.setInnerHtmlFromConstant = function(element, constHtml) {\n  goog.dom.safe.setInnerHtml(element, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Constant HTML to be immediatelly used.\"), goog.string.Const.unwrap(constHtml)));\n};\ngoog.dom.safe.setOuterHtml = function(elem, html) {\n  elem.outerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setFormElementAction = function(form, url) {\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  goog.dom.asserts.assertIsHTMLFormElement(form).action = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setButtonFormAction = function(button, url) {\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setInputFormAction = function(input, url) {\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  goog.dom.asserts.assertIsHTMLInputElement(input).formAction = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setStyle = function(elem, style) {\n  elem.style.cssText = module$contents$goog$html$SafeStyle_SafeStyle.unwrap(style);\n};\ngoog.dom.safe.documentWrite = function(doc, html) {\n  doc.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.setAnchorHref = function(anchor, url) {\n  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setImageSrc = function(imageElement, url) {\n  goog.dom.asserts.assertIsHTMLImageElement(imageElement);\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url, /^data:image\\//i.test(url));\n  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setAudioSrc = function(audioElement, url) {\n  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url, /^data:audio\\//i.test(url));\n  audioElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setVideoSrc = function(videoElement, url) {\n  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url, /^data:video\\//i.test(url));\n  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setEmbedSrc = function(embed, url) {\n  goog.dom.asserts.assertIsHTMLEmbedElement(embed);\n  embed.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n};\ngoog.dom.safe.setFrameSrc = function(frame, url) {\n  goog.dom.asserts.assertIsHTMLFrameElement(frame);\n  frame.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\ngoog.dom.safe.setIframeSrc = function(iframe, url) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);\n};\ngoog.dom.safe.setIframeSrcdoc = function(iframe, html) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.srcdoc = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {\n  goog.dom.asserts.assertIsHTMLLinkElement(link);\n  link.rel = rel;\n  if (goog.string.internal.caseInsensitiveContains(rel, \"stylesheet\")) {\n    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because \"rel\" contains \"stylesheet\"');\n    link.href = goog.html.TrustedResourceUrl.unwrap(url);\n    var nonce = goog.dom.safe.getStyleNonce(link.ownerDocument && link.ownerDocument.defaultView);\n    nonce && link.setAttribute(\"nonce\", nonce);\n  } else {\n    link.href = url instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(url) : url instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(url) : goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));\n  }\n};\ngoog.dom.safe.setObjectData = function(object, url) {\n  goog.dom.asserts.assertIsHTMLObjectElement(object);\n  object.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n};\ngoog.dom.safe.setScriptSrc = function(script, url) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n  goog.dom.safe.setNonceForScriptElement_(script);\n};\ngoog.dom.safe.setScriptContent = function(script, content) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.textContent = module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(content);\n  goog.dom.safe.setNonceForScriptElement_(script);\n};\ngoog.dom.safe.setNonceForScriptElement_ = function(script) {\n  var nonce = goog.dom.safe.getScriptNonce(script.ownerDocument && script.ownerDocument.defaultView);\n  nonce && script.setAttribute(\"nonce\", nonce);\n};\ngoog.dom.safe.setLocationHref = function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  loc.href = goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.assignLocation = function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));\n};\ngoog.dom.safe.replaceLocation = function(loc, url) {\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));\n};\ngoog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs) {\n  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  var win = opt_openerWin || goog.global, name = opt_name instanceof goog.string.Const ? goog.string.Const.unwrap(opt_name) : opt_name || \"\";\n  return void 0 !== opt_specs ? win.open(goog.html.SafeUrl.unwrap(safeUrl), name, opt_specs) : win.open(goog.html.SafeUrl.unwrap(safeUrl), name);\n};\ngoog.dom.safe.parseFromStringHtml = function(parser, html) {\n  return goog.dom.safe.parseFromString(parser, html, \"text/html\");\n};\ngoog.dom.safe.parseFromString = function(parser, content, type) {\n  return parser.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(content), type);\n};\ngoog.dom.safe.createImageFromBlob = function(blob) {\n  if (!/^image\\/.*/g.test(blob.type)) {\n    throw Error(\"goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\");\n  }\n  var objectUrl = goog.global.URL.createObjectURL(blob), image = new goog.global.Image();\n  image.onload = function() {\n    goog.global.URL.revokeObjectURL(objectUrl);\n  };\n  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Image blob URL.\"), objectUrl));\n  return image;\n};\ngoog.dom.safe.createContextualFragment = function(range, html) {\n  return range.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.getScriptNonce = function(opt_window) {\n  return goog.dom.safe.getNonce_(\"script[nonce]\", opt_window);\n};\ngoog.dom.safe.getStyleNonce = function(opt_window) {\n  return goog.dom.safe.getNonce_('style[nonce],link[rel=\"stylesheet\"][nonce]', opt_window);\n};\ngoog.dom.safe.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\ngoog.dom.safe.getNonce_ = function(selector, win) {\n  var doc = (win || goog.global).document;\n  if (!doc.querySelector) {\n    return \"\";\n  }\n  var el = doc.querySelector(selector);\n  if (el) {\n    var nonce = el.nonce || el.getAttribute(\"nonce\");\n    if (nonce && goog.dom.safe.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return \"\";\n};\ngoog.string.DETECT_DOUBLE_ESCAPING = !1;\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;\ngoog.string.Unicode = {NBSP:\"\\u00a0\"};\ngoog.string.startsWith = goog.string.internal.startsWith;\ngoog.string.endsWith = goog.string.internal.endsWith;\ngoog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;\ngoog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;\ngoog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;\ngoog.string.subs = function(str, var_args) {\n  for (var splitParts = str.split(\"%s\"), returnString = \"\", subsArguments = Array.prototype.slice.call(arguments, 1); subsArguments.length && 1 < splitParts.length;) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n  return returnString + splitParts.join(\"%s\");\n};\ngoog.string.collapseWhitespace = function(str) {\n  return str.replace(/[\\s\\xa0]+/g, \" \").replace(/^\\s+|\\s+$/g, \"\");\n};\ngoog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;\ngoog.string.isEmptyString = function(str) {\n  return 0 == str.length;\n};\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\ngoog.string.isBreakingWhitespace = function(str) {\n  return !/[^\\t\\n\\r ]/.test(str);\n};\ngoog.string.isAlpha = function(str) {\n  return !/[^a-zA-Z]/.test(str);\n};\ngoog.string.isNumeric = function(str) {\n  return !/[^0-9]/.test(str);\n};\ngoog.string.isAlphaNumeric = function(str) {\n  return !/[^a-zA-Z0-9]/.test(str);\n};\ngoog.string.isSpace = function(ch) {\n  return \" \" == ch;\n};\ngoog.string.isUnicodeChar = function(ch) {\n  return 1 == ch.length && \" \" <= ch && \"~\" >= ch || \"\\u0080\" <= ch && \"\\ufffd\" >= ch;\n};\ngoog.string.stripNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, \" \");\n};\ngoog.string.canonicalizeNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, \"\\n\");\n};\ngoog.string.normalizeWhitespace = function(str) {\n  return str.replace(/\\xa0|\\s/g, \" \");\n};\ngoog.string.normalizeSpaces = function(str) {\n  return str.replace(/\\xa0|[ \\t]+/g, \" \");\n};\ngoog.string.collapseBreakingSpaces = function(str) {\n  return str.replace(/[\\t\\r\\n ]+/g, \" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \"\");\n};\ngoog.string.trim = goog.string.internal.trim;\ngoog.string.trimLeft = function(str) {\n  return str.replace(/^[\\s\\xa0]+/, \"\");\n};\ngoog.string.trimRight = function(str) {\n  return str.replace(/[\\s\\xa0]+$/, \"\");\n};\ngoog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n  for (var tokens1 = str1.toLowerCase().match(tokenizerRegExp), tokens2 = str2.toLowerCase().match(tokenizerRegExp), count = Math.min(tokens1.length, tokens2.length), i = 0; i < count; i++) {\n    var a = tokens1[i], b = tokens2[i];\n    if (a != b) {\n      var num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        var num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n  return tokens1.length != tokens2.length ? tokens1.length - tokens2.length : str1 < str2 ? -1 : 1;\n};\ngoog.string.intAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\ngoog.string.floatAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\ngoog.string.urlEncode = function(str) {\n  return encodeURIComponent(String(str));\n};\ngoog.string.urlDecode = function(str) {\n  return decodeURIComponent(str.replace(/\\+/g, \" \"));\n};\ngoog.string.newLineToBr = goog.string.internal.newLineToBr;\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  goog.string.DETECT_DOUBLE_ESCAPING && (str = str.replace(goog.string.E_RE_, \"&#101;\"));\n  return str;\n};\ngoog.string.E_RE_ = /e/g;\ngoog.string.unescapeEntities = function(str) {\n  return goog.string.contains(str, \"&\") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && \"document\" in goog.global ? goog.string.unescapeEntitiesUsingDom_(str) : goog.string.unescapePureXmlEntities_(str) : str;\n};\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  return goog.string.contains(str, \"&\") ? goog.string.unescapeEntitiesUsingDom_(str, document) : str;\n};\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  var seen = {\"&amp;\":\"&\", \"&lt;\":\"<\", \"&gt;\":\">\", \"&quot;\":'\"'};\n  var div = opt_document ? opt_document.createElement(\"div\") : goog.global.document.createElement(\"div\");\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    var value = seen[s];\n    if (value) {\n      return value;\n    }\n    if (\"#\" == entity.charAt(0)) {\n      var n = Number(\"0\" + entity.substr(1));\n      isNaN(n) || (value = String.fromCharCode(n));\n    }\n    value || (goog.dom.safe.setInnerHtml(div, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Single HTML entity.\"), s + \" \")), value = div.firstChild.nodeValue.slice(0, -1));\n    return seen[s] = value;\n  });\n};\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    switch(entity) {\n      case \"amp\":\n        return \"&\";\n      case \"lt\":\n        return \"<\";\n      case \"gt\":\n        return \">\";\n      case \"quot\":\n        return '\"';\n      default:\n        if (\"#\" == entity.charAt(0)) {\n          var n = Number(\"0\" + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        return s;\n    }\n  });\n};\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  return goog.string.newLineToBr(str.replace(/  /g, \" &#160;\"), opt_xml);\n};\ngoog.string.preserveSpaces = function(str) {\n  return str.replace(/(^|[\\n ]) /g, \"$1\" + goog.string.Unicode.NBSP);\n};\ngoog.string.stripQuotes = function(str, quoteChars) {\n  for (var length = quoteChars.length, i = 0; i < length; i++) {\n    var quoteChar = 1 == length ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));\n  str.length > chars && (str = str.substring(0, chars - 3) + \"...\");\n  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));\n  return str;\n};\ngoog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));\n  if (opt_trailingChars && str.length > chars) {\n    opt_trailingChars > chars && (opt_trailingChars = chars), str = str.substring(0, chars - opt_trailingChars) + \"...\" + str.substring(str.length - opt_trailingChars);\n  } else {\n    if (str.length > chars) {\n      var half = Math.floor(chars / 2);\n      str = str.substring(0, half + chars % 2) + \"...\" + str.substring(str.length - half);\n    }\n  }\n  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));\n  return str;\n};\ngoog.string.specialEscapeChars_ = {\"\\x00\":\"\\\\0\", \"\\b\":\"\\\\b\", \"\\f\":\"\\\\f\", \"\\n\":\"\\\\n\", \"\\r\":\"\\\\r\", \"\\t\":\"\\\\t\", \"\\x0B\":\"\\\\x0B\", '\"':'\\\\\"', \"\\\\\":\"\\\\\\\\\", \"<\":\"\\\\u003C\"};\ngoog.string.jsEscapeCache_ = {\"'\":\"\\\\'\"};\ngoog.string.quote = function(s) {\n  s = String(s);\n  for (var sb = ['\"'], i = 0; i < s.length; i++) {\n    var ch = s.charAt(i), cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (31 < cc && 127 > cc ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join(\"\");\n};\ngoog.string.escapeString = function(str) {\n  for (var sb = [], i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join(\"\");\n};\ngoog.string.escapeChar = function(c) {\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n  var rv = c, cc = c.charCodeAt(0);\n  if (31 < cc && 127 > cc) {\n    rv = c;\n  } else {\n    if (256 > cc) {\n      if (rv = \"\\\\x\", 16 > cc || 256 < cc) {\n        rv += \"0\";\n      }\n    } else {\n      rv = \"\\\\u\", 4096 > cc && (rv += \"0\");\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n  return goog.string.jsEscapeCache_[c] = rv;\n};\ngoog.string.contains = goog.string.internal.contains;\ngoog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;\ngoog.string.countOf = function(s, ss) {\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\ngoog.string.removeAt = function(s, index, stringLength) {\n  var resultStr = s;\n  0 <= index && index < s.length && 0 < stringLength && (resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength));\n  return resultStr;\n};\ngoog.string.remove = function(str, substr) {\n  return str.replace(substr, \"\");\n};\ngoog.string.removeAll = function(s, ss) {\n  var re = new RegExp(goog.string.regExpEscape(ss), \"g\");\n  return s.replace(re, \"\");\n};\ngoog.string.replaceAll = function(s, ss, replacement) {\n  var re = new RegExp(goog.string.regExpEscape(ss), \"g\");\n  return s.replace(re, replacement.replace(/\\$/g, \"$$$$\"));\n};\ngoog.string.regExpEscape = function(s) {\n  return String(s).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\").replace(/\\x08/g, \"\\\\x08\");\n};\ngoog.string.repeat = String.prototype.repeat ? function(string, length) {\n  return string.repeat(length);\n} : function(string, length) {\n  return Array(length + 1).join(string);\n};\ngoog.string.padNumber = function(num, length, opt_precision) {\n  if (!Number.isFinite(num)) {\n    return String(num);\n  }\n  var s = void 0 !== opt_precision ? num.toFixed(opt_precision) : String(num), index = s.indexOf(\".\");\n  -1 === index && (index = s.length);\n  var sign = \"-\" === s[0] ? \"-\" : \"\";\n  sign && (s = s.substring(1));\n  return sign + goog.string.repeat(\"0\", Math.max(0, length - index)) + s;\n};\ngoog.string.makeSafe = function(obj) {\n  return null == obj ? \"\" : String(obj);\n};\ngoog.string.buildString = function(var_args) {\n  return Array.prototype.join.call(arguments, \"\");\n};\ngoog.string.getRandomString = function() {\n  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);\n};\ngoog.string.compareVersions = goog.string.internal.compareVersions;\ngoog.string.hashCode = function(str) {\n  for (var result = 0, i = 0; i < str.length; ++i) {\n    result = 31 * result + str.charCodeAt(i) >>> 0;\n  }\n  return result;\n};\ngoog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;\ngoog.string.createUniqueString = function() {\n  return \"goog_\" + goog.string.uniqueStringCounter_++;\n};\ngoog.string.toNumber = function(str) {\n  var num = Number(str);\n  return 0 == num && goog.string.isEmptyOrWhitespace(str) ? NaN : num;\n};\ngoog.string.isLowerCamelCase = function(str) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\ngoog.string.isUpperCamelCase = function(str) {\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\ngoog.string.toCamelCase = function(str) {\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    return match.toUpperCase();\n  });\n};\ngoog.string.toSelectorCase = function(str) {\n  return String(str).replace(/([A-Z])/g, \"-$1\").toLowerCase();\n};\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  var delimiters = \"string\" === typeof opt_delimiters ? goog.string.regExpEscape(opt_delimiters) : \"\\\\s\";\n  return str.replace(new RegExp(\"(^\" + (delimiters ? \"|[\" + delimiters + \"]+\" : \"\") + \")([a-z])\", \"g\"), function(all, p1, p2) {\n    return p1 + p2.toUpperCase();\n  });\n};\ngoog.string.capitalize = function(str) {\n  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();\n};\ngoog.string.parseInt = function(value) {\n  isFinite(value) && (value = String(value));\n  return \"string\" === typeof value ? /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10) : NaN;\n};\ngoog.string.splitLimit = function(str, separator, limit) {\n  for (var parts = str.split(separator), returnVal = []; 0 < limit && parts.length;) {\n    returnVal.push(parts.shift()), limit--;\n  }\n  parts.length && returnVal.push(parts.join(separator));\n  return returnVal;\n};\ngoog.string.lastComponent = function(str, separators) {\n  if (separators) {\n    \"string\" == typeof separators && (separators = [separators]);\n  } else {\n    return str;\n  }\n  for (var lastSeparatorIndex = -1, i = 0; i < separators.length; i++) {\n    if (\"\" != separators[i]) {\n      var currentSeparatorIndex = str.lastIndexOf(separators[i]);\n      currentSeparatorIndex > lastSeparatorIndex && (lastSeparatorIndex = currentSeparatorIndex);\n    }\n  }\n  return -1 == lastSeparatorIndex ? str : str.slice(lastSeparatorIndex + 1);\n};\ngoog.string.editDistance = function(a, b) {\n  var v0 = [], v1 = [];\n  if (a == b) {\n    return 0;\n  }\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n  for (var i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n  for (var i$50 = 0; i$50 < a.length; i$50++) {\n    v1[0] = i$50 + 1;\n    for (var j = 0; j < b.length; j++) {\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + Number(a[i$50] != b[j]));\n    }\n    for (var j$51 = 0; j$51 < v0.length; j$51++) {\n      v0[j$51] = v1[j$51];\n    }\n  }\n  return v1[b.length];\n};\ngoog.collections.maps = {};\nvar module$contents$goog$collections$maps_MapLike = function() {\n};\nmodule$contents$goog$collections$maps_MapLike.prototype.set = function(key, val) {\n};\nmodule$contents$goog$collections$maps_MapLike.prototype.get = function(key) {\n};\nmodule$contents$goog$collections$maps_MapLike.prototype.keys = function() {\n};\nmodule$contents$goog$collections$maps_MapLike.prototype.values = function() {\n};\nmodule$contents$goog$collections$maps_MapLike.prototype.has = function(key) {\n};\ngoog.collections.maps.MapLike = module$contents$goog$collections$maps_MapLike;\ngoog.collections.maps.setAll = function module$contents$goog$collections$maps_setAll(map, entries) {\n  if (entries) {\n    for (var $jscomp$iter$10 = $jscomp.makeIterator(entries), $jscomp$key$ = $jscomp$iter$10.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$10.next()) {\n      var $jscomp$destructuring$var13 = $jscomp.makeIterator($jscomp$key$.value), k = $jscomp$destructuring$var13.next().value, v = $jscomp$destructuring$var13.next().value;\n      map.set(k, v);\n    }\n  }\n};\ngoog.collections.maps.hasValue = function module$contents$goog$collections$maps_hasValue(map, val, valueEqualityFn) {\n  valueEqualityFn = void 0 === valueEqualityFn ? module$contents$goog$collections$maps_defaultEqualityFn : valueEqualityFn;\n  for (var $jscomp$iter$11 = $jscomp.makeIterator(map.values()), $jscomp$key$v = $jscomp$iter$11.next(); !$jscomp$key$v.done; $jscomp$key$v = $jscomp$iter$11.next()) {\n    if (valueEqualityFn($jscomp$key$v.value, val)) {\n      return !0;\n    }\n  }\n  return !1;\n};\nvar module$contents$goog$collections$maps_defaultEqualityFn = function(a, b) {\n  return a === b;\n};\ngoog.collections.maps.equals = function module$contents$goog$collections$maps_equals(map, otherMap, valueEqualityFn) {\n  valueEqualityFn = void 0 === valueEqualityFn ? module$contents$goog$collections$maps_defaultEqualityFn : valueEqualityFn;\n  if (map === otherMap) {\n    return !0;\n  }\n  if (map.size !== otherMap.size) {\n    return !1;\n  }\n  for (var $jscomp$iter$12 = $jscomp.makeIterator(map.keys()), $jscomp$key$key = $jscomp$iter$12.next(); !$jscomp$key$key.done; $jscomp$key$key = $jscomp$iter$12.next()) {\n    var key = $jscomp$key$key.value;\n    if (!otherMap.has(key) || !valueEqualityFn(map.get(key), otherMap.get(key))) {\n      return !1;\n    }\n  }\n  return !0;\n};\ngoog.collections.maps.transpose = function module$contents$goog$collections$maps_transpose(map) {\n  for (var transposed = new Map(), $jscomp$iter$13 = $jscomp.makeIterator(map.keys()), $jscomp$key$key = $jscomp$iter$13.next(); !$jscomp$key$key.done; $jscomp$key$key = $jscomp$iter$13.next()) {\n    var key = $jscomp$key$key.value, val = map.get(key);\n    transposed.set(val, key);\n  }\n  return transposed;\n};\ngoog.collections.maps.toObject = function module$contents$goog$collections$maps_toObject(map) {\n  for (var obj = {}, $jscomp$iter$14 = $jscomp.makeIterator(map.keys()), $jscomp$key$key = $jscomp$iter$14.next(); !$jscomp$key$key.done; $jscomp$key$key = $jscomp$iter$14.next()) {\n    var key = $jscomp$key$key.value;\n    obj[key] = map.get(key);\n  }\n  return obj;\n};\ngoog.uri = {};\ngoog.uri.utils = {};\ngoog.uri.utils.QueryArray = {};\ngoog.uri.utils.QueryValue = {};\ngoog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};\ngoog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n  var out = \"\";\n  opt_scheme && (out += opt_scheme + \":\");\n  opt_domain && (out += \"//\", opt_userInfo && (out += opt_userInfo + \"@\"), out += opt_domain, opt_port && (out += \":\" + opt_port));\n  opt_path && (out += opt_path);\n  opt_queryData && (out += \"?\" + opt_queryData);\n  opt_fragment && (out += \"#\" + opt_fragment);\n  return out;\n};\ngoog.uri.utils.splitRe_ = RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^\\\\\\\\/?#]*)@)?([^\\\\\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\\\\\/?#]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#([\\\\s\\\\S]*))?$\");\ngoog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};\ngoog.uri.utils.urlPackageSupportLoggingHandler_ = null;\ngoog.uri.utils.setUrlPackageSupportLoggingHandler = function(handler) {\n  goog.uri.utils.urlPackageSupportLoggingHandler_ = handler;\n};\ngoog.uri.utils.split = function(uri) {\n  var result = uri.match(goog.uri.utils.splitRe_);\n  goog.uri.utils.urlPackageSupportLoggingHandler_ && 0 <= [\"http\", \"https\", \"ws\", \"wss\", \"ftp\"].indexOf(result[goog.uri.utils.ComponentIndex.SCHEME]) && goog.uri.utils.urlPackageSupportLoggingHandler_(uri);\n  return result;\n};\ngoog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {\n  return uri ? opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri) : uri;\n};\ngoog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\ngoog.uri.utils.getScheme = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\ngoog.uri.utils.getEffectiveScheme = function(uri) {\n  var scheme = goog.uri.utils.getScheme(uri);\n  if (!scheme && goog.global.self && goog.global.self.location) {\n    var protocol = goog.global.self.location.protocol;\n    scheme = protocol.substr(0, protocol.length - 1);\n  }\n  return scheme ? scheme.toLowerCase() : \"\";\n};\ngoog.uri.utils.getUserInfoEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\ngoog.uri.utils.getUserInfo = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));\n};\ngoog.uri.utils.getDomainEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\ngoog.uri.utils.getDomain = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), !0);\n};\ngoog.uri.utils.getPort = function(uri) {\n  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;\n};\ngoog.uri.utils.getPathEncoded = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);\n};\ngoog.uri.utils.getPath = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), !0);\n};\ngoog.uri.utils.getQueryData = function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\ngoog.uri.utils.getFragmentEncoded = function(uri) {\n  var hashIndex = uri.indexOf(\"#\");\n  return 0 > hashIndex ? null : uri.substr(hashIndex + 1);\n};\ngoog.uri.utils.setFragmentEncoded = function(uri, fragment) {\n  return goog.uri.utils.removeFragment(uri) + (fragment ? \"#\" + fragment : \"\");\n};\ngoog.uri.utils.getFragment = function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));\n};\ngoog.uri.utils.getHost = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\ngoog.uri.utils.getOrigin = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\ngoog.uri.utils.getPathAndAfter = function(uri) {\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\ngoog.uri.utils.removeFragment = function(uri) {\n  var hashIndex = uri.indexOf(\"#\");\n  return 0 > hashIndex ? uri : uri.substr(0, hashIndex);\n};\ngoog.uri.utils.haveSameDomain = function(uri1, uri2) {\n  var pieces1 = goog.uri.utils.split(uri1), pieces2 = goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\ngoog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {\n  goog.asserts.assert(0 > uri.indexOf(\"#\") && 0 > uri.indexOf(\"?\"), \"goog.uri.utils: Fragment or query identifiers are not supported: [%s]\", uri);\n};\ngoog.uri.utils.parseQueryData = function(encodedQuery, callback) {\n  if (encodedQuery) {\n    for (var pairs = encodedQuery.split(\"&\"), i = 0; i < pairs.length; i++) {\n      var indexOfEquals = pairs[i].indexOf(\"=\"), name = null, value = null;\n      0 <= indexOfEquals ? (name = pairs[i].substring(0, indexOfEquals), value = pairs[i].substring(indexOfEquals + 1)) : name = pairs[i];\n      callback(name, value ? goog.string.urlDecode(value) : \"\");\n    }\n  }\n};\ngoog.uri.utils.splitQueryData_ = function(uri) {\n  var hashIndex = uri.indexOf(\"#\");\n  0 > hashIndex && (hashIndex = uri.length);\n  var questionIndex = uri.indexOf(\"?\");\n  if (0 > questionIndex || questionIndex > hashIndex) {\n    questionIndex = hashIndex;\n    var queryData = \"\";\n  } else {\n    queryData = uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];\n};\ngoog.uri.utils.joinQueryData_ = function(parts) {\n  return parts[0] + (parts[1] ? \"?\" + parts[1] : \"\") + parts[2];\n};\ngoog.uri.utils.appendQueryData_ = function(queryData, newData) {\n  return newData ? queryData ? queryData + \"&\" + newData : newData : queryData;\n};\ngoog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {\n  if (!queryData) {\n    return uri;\n  }\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\ngoog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {\n  goog.asserts.assertString(key);\n  if (Array.isArray(value)) {\n    goog.asserts.assertArray(value);\n    for (var j = 0; j < value.length; j++) {\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else {\n    null != value && pairs.push(key + (\"\" === value ? \"\" : \"=\" + goog.string.urlEncode(value)));\n  }\n};\ngoog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {\n  goog.asserts.assert(0 == Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2, \"goog.uri.utils: Key/value lists must be even in length.\");\n  for (var params = [], i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {\n    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], params);\n  }\n  return params.join(\"&\");\n};\ngoog.uri.utils.buildQueryDataFromMap = function(map) {\n  var params = [], key;\n  for (key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join(\"&\");\n};\ngoog.uri.utils.appendParams = function(uri, var_args) {\n  var queryData = 2 == arguments.length ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\ngoog.uri.utils.appendParamsFromMap = function(uri, map) {\n  var queryData = goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\ngoog.uri.utils.appendParam = function(uri, key, opt_value) {\n  var value = null != opt_value ? \"=\" + goog.string.urlEncode(opt_value) : \"\";\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\ngoog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {\n  for (var index = startIndex, keyLength = keyEncoded.length; 0 <= (index = uri.indexOf(keyEncoded, index)) && index < hashOrEndIndex;) {\n    var precedingChar = uri.charCodeAt(index - 1);\n    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {\n      var followingChar = uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index += keyLength + 1;\n  }\n  return -1;\n};\ngoog.uri.utils.hashOrEndRe_ = /#|$/;\ngoog.uri.utils.hasParam = function(uri, keyEncoded) {\n  return 0 <= goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_));\n};\ngoog.uri.utils.getParamValue = function(uri, keyEncoded) {\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_), foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n  if (0 > foundIndex) {\n    return null;\n  }\n  var endPosition = uri.indexOf(\"&\", foundIndex);\n  if (0 > endPosition || endPosition > hashOrEndIndex) {\n    endPosition = hashOrEndIndex;\n  }\n  foundIndex += keyEncoded.length + 1;\n  return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));\n};\ngoog.uri.utils.getParamValues = function(uri, keyEncoded) {\n  for (var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_), position = 0, foundIndex, result = []; 0 <= (foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex));) {\n    position = uri.indexOf(\"&\", foundIndex);\n    if (0 > position || position > hashOrEndIndex) {\n      position = hashOrEndIndex;\n    }\n    foundIndex += keyEncoded.length + 1;\n    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));\n  }\n  return result;\n};\ngoog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;\ngoog.uri.utils.removeParam = function(uri, keyEncoded) {\n  for (var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_), position = 0, foundIndex, buffer = []; 0 <= (foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex));) {\n    buffer.push(uri.substring(position, foundIndex)), position = Math.min(uri.indexOf(\"&\", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);\n  }\n  buffer.push(uri.substr(position));\n  return buffer.join(\"\").replace(goog.uri.utils.trailingQueryPunctuationRe_, \"$1\");\n};\ngoog.uri.utils.setParam = function(uri, keyEncoded, value) {\n  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\ngoog.uri.utils.setParamsFromMap = function(uri, params) {\n  var parts = goog.uri.utils.splitQueryData_(uri), queryData = parts[1], buffer = [];\n  queryData && queryData.split(\"&\").forEach(function(pair) {\n    var indexOfEquals = pair.indexOf(\"=\");\n    params.hasOwnProperty(0 <= indexOfEquals ? pair.substr(0, indexOfEquals) : pair) || buffer.push(pair);\n  });\n  parts[1] = goog.uri.utils.appendQueryData_(buffer.join(\"&\"), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\ngoog.uri.utils.appendPath = function(baseUri, path) {\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n  goog.string.endsWith(baseUri, \"/\") && (baseUri = baseUri.substr(0, baseUri.length - 1));\n  goog.string.startsWith(path, \"/\") && (path = path.substr(1));\n  return \"\" + baseUri + \"/\" + path;\n};\ngoog.uri.utils.setPath = function(uri, path) {\n  goog.string.startsWith(path, \"/\") || (path = \"/\" + path);\n  var parts = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\ngoog.uri.utils.StandardQueryParam = {RANDOM:\"zx\"};\ngoog.uri.utils.makeUnique = function(uri) {\n  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());\n};\ngoog.Uri = function(opt_uri, opt_ignoreCase) {\n  this.domain_ = this.userInfo_ = this.scheme_ = \"\";\n  this.port_ = null;\n  this.fragment_ = this.path_ = \"\";\n  this.ignoreCase_ = this.isReadOnly_ = !1;\n  var m;\n  opt_uri instanceof goog.Uri ? (this.ignoreCase_ = void 0 !== opt_ignoreCase ? opt_ignoreCase : opt_uri.getIgnoreCase(), this.setScheme(opt_uri.getScheme()), this.setUserInfo(opt_uri.getUserInfo()), this.setDomain(opt_uri.getDomain()), this.setPort(opt_uri.getPort()), this.setPath(opt_uri.getPath()), this.setQueryData(opt_uri.getQueryData().clone()), this.setFragment(opt_uri.getFragment())) : opt_uri && (m = goog.uri.utils.split(String(opt_uri))) ? (this.ignoreCase_ = !!opt_ignoreCase, this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || \n  \"\", !0), this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || \"\", !0), this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || \"\", !0), this.setPort(m[goog.uri.utils.ComponentIndex.PORT]), this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || \"\", !0), this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || \"\", !0), this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || \"\", !0)) : (this.ignoreCase_ = !!opt_ignoreCase, this.queryData_ = new goog.Uri.QueryData(null, this.ignoreCase_));\n};\ngoog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;\ngoog.Uri.prototype.toString = function() {\n  var out = [], scheme = this.getScheme();\n  scheme && out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), \":\");\n  var domain = this.getDomain();\n  if (domain || \"file\" == scheme) {\n    out.push(\"//\");\n    var userInfo = this.getUserInfo();\n    userInfo && out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), \"@\");\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n    var port = this.getPort();\n    null != port && out.push(\":\", String(port));\n  }\n  var path = this.getPath();\n  path && (this.hasDomain() && \"/\" != path.charAt(0) && out.push(\"/\"), out.push(goog.Uri.encodeSpecialChars_(path, \"/\" == path.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, !0)));\n  var query = this.getEncodedQuery();\n  query && out.push(\"?\", query);\n  var fragment = this.getFragment();\n  fragment && out.push(\"#\", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));\n  return out.join(\"\");\n};\ngoog.Uri.prototype.resolve = function(relativeUri) {\n  var absoluteUri = this.clone(), overridden = relativeUri.hasScheme();\n  overridden ? absoluteUri.setScheme(relativeUri.getScheme()) : overridden = relativeUri.hasUserInfo();\n  overridden ? absoluteUri.setUserInfo(relativeUri.getUserInfo()) : overridden = relativeUri.hasDomain();\n  overridden ? absoluteUri.setDomain(relativeUri.getDomain()) : overridden = relativeUri.hasPort();\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    if (overridden = relativeUri.hasPath()) {\n      if (\"/\" != path.charAt(0)) {\n        if (this.hasDomain() && !this.hasPath()) {\n          path = \"/\" + path;\n        } else {\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf(\"/\");\n          -1 != lastSlashIndex && (path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path);\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n  overridden ? absoluteUri.setPath(path) : overridden = relativeUri.hasQuery();\n  overridden ? absoluteUri.setQueryData(relativeUri.getQueryData().clone()) : overridden = relativeUri.hasFragment();\n  overridden && absoluteUri.setFragment(relativeUri.getFragment());\n  return absoluteUri;\n};\ngoog.Uri.prototype.clone = function() {\n  return new goog.Uri(this);\n};\ngoog.Uri.prototype.getScheme = function() {\n  return this.scheme_;\n};\ngoog.Uri.prototype.setScheme = function(newScheme, opt_decode) {\n  this.enforceReadOnly();\n  if (this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, !0) : newScheme) {\n    this.scheme_ = this.scheme_.replace(/:$/, \"\");\n  }\n  return this;\n};\ngoog.Uri.prototype.hasScheme = function() {\n  return !!this.scheme_;\n};\ngoog.Uri.prototype.getUserInfo = function() {\n  return this.userInfo_;\n};\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {\n  this.enforceReadOnly();\n  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\ngoog.Uri.prototype.hasUserInfo = function() {\n  return !!this.userInfo_;\n};\ngoog.Uri.prototype.getDomain = function() {\n  return this.domain_;\n};\ngoog.Uri.prototype.setDomain = function(newDomain, opt_decode) {\n  this.enforceReadOnly();\n  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, !0) : newDomain;\n  return this;\n};\ngoog.Uri.prototype.hasDomain = function() {\n  return !!this.domain_;\n};\ngoog.Uri.prototype.getPort = function() {\n  return this.port_;\n};\ngoog.Uri.prototype.setPort = function(newPort) {\n  this.enforceReadOnly();\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || 0 > newPort) {\n      throw Error(\"Bad port number \" + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n  return this;\n};\ngoog.Uri.prototype.hasPort = function() {\n  return null != this.port_;\n};\ngoog.Uri.prototype.getPath = function() {\n  return this.path_;\n};\ngoog.Uri.prototype.setPath = function(newPath, opt_decode) {\n  this.enforceReadOnly();\n  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, !0) : newPath;\n  return this;\n};\ngoog.Uri.prototype.hasPath = function() {\n  return !!this.path_;\n};\ngoog.Uri.prototype.hasQuery = function() {\n  return \"\" !== this.queryData_.toString();\n};\ngoog.Uri.prototype.setQueryData = function(queryData, opt_decode) {\n  this.enforceReadOnly();\n  queryData instanceof goog.Uri.QueryData ? (this.queryData_ = queryData, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (opt_decode || (queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(queryData, this.ignoreCase_));\n  return this;\n};\ngoog.Uri.prototype.setQuery = function(newQuery, opt_decode) {\n  return this.setQueryData(newQuery, opt_decode);\n};\ngoog.Uri.prototype.getEncodedQuery = function() {\n  return this.queryData_.toString();\n};\ngoog.Uri.prototype.getDecodedQuery = function() {\n  return this.queryData_.toDecodedString();\n};\ngoog.Uri.prototype.getQueryData = function() {\n  return this.queryData_;\n};\ngoog.Uri.prototype.getQuery = function() {\n  return this.getEncodedQuery();\n};\ngoog.Uri.prototype.setParameterValue = function(key, value) {\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\ngoog.Uri.prototype.setParameterValues = function(key, values) {\n  this.enforceReadOnly();\n  Array.isArray(values) || (values = [String(values)]);\n  this.queryData_.setValues(key, values);\n  return this;\n};\ngoog.Uri.prototype.getParameterValues = function(name) {\n  return this.queryData_.getValues(name);\n};\ngoog.Uri.prototype.getParameterValue = function(paramName) {\n  return this.queryData_.get(paramName);\n};\ngoog.Uri.prototype.getFragment = function() {\n  return this.fragment_;\n};\ngoog.Uri.prototype.setFragment = function(newFragment, opt_decode) {\n  this.enforceReadOnly();\n  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\ngoog.Uri.prototype.hasFragment = function() {\n  return !!this.fragment_;\n};\ngoog.Uri.prototype.hasSameDomainAs = function(uri2) {\n  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());\n};\ngoog.Uri.prototype.makeUnique = function() {\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n  return this;\n};\ngoog.Uri.prototype.removeParameter = function(key) {\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\ngoog.Uri.prototype.setReadOnly = function(isReadOnly) {\n  this.isReadOnly_ = isReadOnly;\n  return this;\n};\ngoog.Uri.prototype.isReadOnly = function() {\n  return this.isReadOnly_;\n};\ngoog.Uri.prototype.enforceReadOnly = function() {\n  if (this.isReadOnly_) {\n    throw Error(\"Tried to modify a read-only Uri\");\n  }\n};\ngoog.Uri.prototype.setIgnoreCase = function(ignoreCase) {\n  this.ignoreCase_ = ignoreCase;\n  this.queryData_ && this.queryData_.setIgnoreCase(ignoreCase);\n  return this;\n};\ngoog.Uri.prototype.getIgnoreCase = function() {\n  return this.ignoreCase_;\n};\ngoog.Uri.parse = function(uri, opt_ignoreCase) {\n  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);\n};\ngoog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {\n  var uri = new goog.Uri(null, opt_ignoreCase);\n  opt_scheme && uri.setScheme(opt_scheme);\n  opt_userInfo && uri.setUserInfo(opt_userInfo);\n  opt_domain && uri.setDomain(opt_domain);\n  opt_port && uri.setPort(opt_port);\n  opt_path && uri.setPath(opt_path);\n  opt_query && uri.setQueryData(opt_query);\n  opt_fragment && uri.setFragment(opt_fragment);\n  return uri;\n};\ngoog.Uri.resolve = function(base, rel) {\n  base instanceof goog.Uri || (base = goog.Uri.parse(base));\n  rel instanceof goog.Uri || (rel = goog.Uri.parse(rel));\n  return base.resolve(rel);\n};\ngoog.Uri.removeDotSegments = function(path) {\n  if (\"..\" == path || \".\" == path) {\n    return \"\";\n  }\n  if (goog.string.contains(path, \"./\") || goog.string.contains(path, \"/.\")) {\n    for (var leadingSlash = goog.string.startsWith(path, \"/\"), segments = path.split(\"/\"), out = [], pos = 0; pos < segments.length;) {\n      var segment = segments[pos++];\n      \".\" == segment ? leadingSlash && pos == segments.length && out.push(\"\") : \"..\" == segment ? ((1 < out.length || 1 == out.length && \"\" != out[0]) && out.pop(), leadingSlash && pos == segments.length && out.push(\"\")) : (out.push(segment), leadingSlash = !0);\n    }\n    return out.join(\"/\");\n  }\n  return path;\n};\ngoog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {\n  return val ? opt_preserveReserved ? decodeURI(val.replace(/%25/g, \"%2525\")) : decodeURIComponent(val) : \"\";\n};\ngoog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {\n  if (\"string\" === typeof unescapedPart) {\n    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    opt_removeDoubleEncoding && (encoded = goog.Uri.removeDoubleEncoding_(encoded));\n    return encoded;\n  }\n  return null;\n};\ngoog.Uri.encodeChar_ = function(ch) {\n  var n = ch.charCodeAt(0);\n  return \"%\" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);\n};\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, \"%$1\");\n};\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\ngoog.Uri.reDisallowedInRelativePath_ = /[#\\?:]/g;\ngoog.Uri.reDisallowedInAbsolutePath_ = /[#\\?]/g;\ngoog.Uri.reDisallowedInQuery_ = /[#\\?@]/g;\ngoog.Uri.reDisallowedInFragment_ = /#/g;\ngoog.Uri.haveSameDomain = function(uri1String, uri2String) {\n  var pieces1 = goog.uri.utils.split(uri1String), pieces2 = goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\ngoog.Uri.QueryData = function(opt_query, opt_ignoreCase) {\n  this.count_ = this.keyMap_ = null;\n  this.encodedQuery_ = opt_query || null;\n  this.ignoreCase_ = !!opt_ignoreCase;\n};\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  if (!this.keyMap_ && (this.keyMap_ = new Map(), this.count_ = 0, this.encodedQuery_)) {\n    var self = this;\n    goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n      self.add(goog.string.urlDecode(name), value);\n    });\n  }\n};\ngoog.Uri.QueryData.createFromMap = function(map, opt_ignoreCase) {\n  var keys = goog.structs.getKeys(map);\n  if (\"undefined\" == typeof keys) {\n    throw Error(\"Keys are undefined\");\n  }\n  for (var queryData = new goog.Uri.QueryData(null, opt_ignoreCase), values = goog.structs.getValues(map), i = 0; i < keys.length; i++) {\n    var key = keys[i], value = values[i];\n    Array.isArray(value) ? queryData.setValues(key, value) : queryData.add(key, value);\n  }\n  return queryData;\n};\ngoog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_ignoreCase) {\n  if (keys.length != values.length) {\n    throw Error(\"Mismatched lengths for keys/values\");\n  }\n  for (var queryData = new goog.Uri.QueryData(null, opt_ignoreCase), i = 0; i < keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\ngoog.Uri.QueryData.prototype.getCount = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n  key = this.getKeyName_(key);\n  var values = this.keyMap_.get(key);\n  values || this.keyMap_.set(key, values = []);\n  values.push(value);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\ngoog.Uri.QueryData.prototype.remove = function(key) {\n  this.ensureKeyMapInitialized_();\n  key = this.getKeyName_(key);\n  return this.keyMap_.has(key) ? (this.invalidateCache_(), this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length, this.keyMap_.delete(key)) : !1;\n};\ngoog.Uri.QueryData.prototype.clear = function() {\n  this.invalidateCache_();\n  this.keyMap_ = null;\n  this.count_ = 0;\n};\ngoog.Uri.QueryData.prototype.isEmpty = function() {\n  this.ensureKeyMapInitialized_();\n  return 0 == this.count_;\n};\ngoog.Uri.QueryData.prototype.containsKey = function(key) {\n  this.ensureKeyMapInitialized_();\n  key = this.getKeyName_(key);\n  return this.keyMap_.has(key);\n};\ngoog.Uri.QueryData.prototype.containsValue = function(value) {\n  var vals = this.getValues();\n  return module$contents$goog$array_contains(vals, value);\n};\ngoog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    values.forEach(function(value) {\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\ngoog.Uri.QueryData.prototype.getKeys = function() {\n  this.ensureKeyMapInitialized_();\n  for (var vals = Array.from(this.keyMap_.values()), keys = Array.from(this.keyMap_.keys()), rv = [], i = 0; i < keys.length; i++) {\n    for (var val = vals[i], j = 0; j < val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.getValues = function(opt_key) {\n  this.ensureKeyMapInitialized_();\n  var rv = [];\n  if (\"string\" === typeof opt_key) {\n    this.containsKey(opt_key) && (rv = rv.concat(this.keyMap_.get(this.getKeyName_(opt_key))));\n  } else {\n    for (var values = Array.from(this.keyMap_.values()), i = 0; i < values.length; i++) {\n      rv = rv.concat(values[i]);\n    }\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.set = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n  key = this.getKeyName_(key);\n  this.containsKey(key) && (this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length);\n  this.keyMap_.set(key, [value]);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\ngoog.Uri.QueryData.prototype.get = function(key, opt_default) {\n  if (!key) {\n    return opt_default;\n  }\n  var values = this.getValues(key);\n  return 0 < values.length ? String(values[0]) : opt_default;\n};\ngoog.Uri.QueryData.prototype.setValues = function(key, values) {\n  this.remove(key);\n  0 < values.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(key), module$contents$goog$array_toArray(values)), this.count_ = goog.asserts.assertNumber(this.count_) + values.length);\n};\ngoog.Uri.QueryData.prototype.toString = function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n  if (!this.keyMap_) {\n    return \"\";\n  }\n  for (var sb = [], keys = Array.from(this.keyMap_.keys()), i = 0; i < keys.length; i++) {\n    for (var key = keys[i], encodedKey = goog.string.urlEncode(key), val = this.getValues(key), j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      \"\" !== val[j] && (param += \"=\" + goog.string.urlEncode(val[j]));\n      sb.push(param);\n    }\n  }\n  return this.encodedQuery_ = sb.join(\"&\");\n};\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\ngoog.Uri.QueryData.prototype.invalidateCache_ = function() {\n  this.encodedQuery_ = null;\n};\ngoog.Uri.QueryData.prototype.filterKeys = function(keys) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    module$contents$goog$array_contains(keys, key) || this.remove(key);\n  }, this);\n  return this;\n};\ngoog.Uri.QueryData.prototype.clone = function() {\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  this.keyMap_ && (rv.keyMap_ = new Map(this.keyMap_), rv.count_ = this.count_);\n  return rv;\n};\ngoog.Uri.QueryData.prototype.getKeyName_ = function(arg) {\n  var keyName = String(arg);\n  this.ignoreCase_ && (keyName = keyName.toLowerCase());\n  return keyName;\n};\ngoog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {\n  ignoreCase && !this.ignoreCase_ && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), this.keyMap_.forEach(function(value, key) {\n    var lowerCase = key.toLowerCase();\n    key != lowerCase && (this.remove(key), this.setValues(lowerCase, value));\n  }, this));\n  this.ignoreCase_ = ignoreCase;\n};\ngoog.Uri.QueryData.prototype.extend = function(var_args) {\n  for (var i = 0; i < arguments.length; i++) {\n    goog.structs.forEach(arguments[i], function(value, key) {\n      this.add(key, value);\n    }, this);\n  }\n};\nvar module$exports$goog$net$rpc$HttpCors = {HTTP_HEADERS_PARAM_NAME:\"$httpHeaders\", HTTP_METHOD_PARAM_NAME:\"$httpMethod\", generateHttpHeadersOverwriteParam:function(headers) {\n  var result = \"\";\n  module$contents$goog$object_forEach(headers, function(value, key) {\n    result += key;\n    result += \":\";\n    result += value;\n    result += \"\\r\\n\";\n  });\n  return result;\n}, generateEncodedHttpHeadersOverwriteParam:function(headers) {\n  return goog.string.urlEncode(module$exports$goog$net$rpc$HttpCors.generateHttpHeadersOverwriteParam(headers));\n}, setHttpHeadersWithOverwriteParam:function(url, urlParam, extraHeaders) {\n  if (module$contents$goog$object_isEmpty(extraHeaders)) {\n    return url;\n  }\n  var httpHeaders = module$exports$goog$net$rpc$HttpCors.generateHttpHeadersOverwriteParam(extraHeaders);\n  if (\"string\" === typeof url) {\n    return goog.uri.utils.appendParam(url, goog.string.urlEncode(urlParam), httpHeaders);\n  }\n  url.setParameterValue(urlParam, httpHeaders);\n  return url;\n}};\nvar module$exports$eeapiclient$request_params = {}, module$contents$eeapiclient$request_params_module = module$contents$eeapiclient$request_params_module || {id:\"javascript/typescript/contrib/apiclient/core/request_params.closure.js\"};\nmodule$exports$eeapiclient$request_params.HttpMethodEnum = {GET:\"GET\", POST:\"POST\", PUT:\"PUT\", PATCH:\"PATCH\", DELETE:\"DELETE\",};\nmodule$exports$eeapiclient$request_params.AuthType = {AUTO:\"auto\", NONE:\"none\", OAUTH2:\"oauth2\", FIRST_PARTY:\"1p\",};\nmodule$exports$eeapiclient$request_params.StreamingType = {NONE:\"NONE\", CLIENT_SIDE:\"CLIENT_SIDE\", SERVER_SIDE:\"SERVER_SIDE\", BIDIRECTONAL:\"BIDIRECTONAL\",};\nfunction module$contents$eeapiclient$request_params_MakeRequestParams() {\n}\nmodule$exports$eeapiclient$request_params.MakeRequestParams = module$contents$eeapiclient$request_params_MakeRequestParams;\nfunction module$contents$eeapiclient$request_params_processParams(params) {\n  if (null != params.queryParams) {\n    var filteredQueryParams = {}, key;\n    for (key in params.queryParams) {\n      void 0 !== params.queryParams[key] && (filteredQueryParams[key] = params.queryParams[key]);\n    }\n    params.queryParams = filteredQueryParams;\n  }\n}\nmodule$exports$eeapiclient$request_params.processParams = module$contents$eeapiclient$request_params_processParams;\nfunction module$contents$eeapiclient$request_params_buildQueryParams(params, mapping, passthroughParams) {\n  for (var urlQueryParams = passthroughParams = void 0 === passthroughParams ? {} : passthroughParams, $jscomp$iter$15 = $jscomp.makeIterator(Object.entries(mapping)), $jscomp$key$ = $jscomp$iter$15.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$15.next()) {\n    var $jscomp$destructuring$var15 = $jscomp.makeIterator($jscomp$key$.value), jsName__tsickle_destructured_1 = $jscomp$destructuring$var15.next().value, urlQueryParamName__tsickle_destructured_2 = $jscomp$destructuring$var15.next().value, jsName = jsName__tsickle_destructured_1, urlQueryParamName = urlQueryParamName__tsickle_destructured_2;\n    jsName in params && (urlQueryParams[urlQueryParamName] = params[jsName]);\n  }\n  return urlQueryParams;\n}\nmodule$exports$eeapiclient$request_params.buildQueryParams = module$contents$eeapiclient$request_params_buildQueryParams;\nvar module$contents$eeapiclient$request_params_simpleCorsAllowedHeaders = [\"accept\", \"accept-language\", \"content-language\"], module$contents$eeapiclient$request_params_simpleCorsAllowedMethods = [\"GET\", \"HEAD\", \"POST\"];\nmodule$exports$eeapiclient$request_params.bypassCorsPreflight = function module$contents$eeapiclient$request_params_bypassCorsPreflight(params) {\n  var safeHeaders = {}, unsafeHeaders = {}, hasUnsafeHeaders = !1, hasSafeHeaders = !1, hasContentType = !1;\n  if (params.headers) {\n    hasContentType = null != params.headers[\"Content-Type\"];\n    for (var $jscomp$iter$16 = $jscomp.makeIterator(Object.entries(params.headers)), $jscomp$key$ = $jscomp$iter$16.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$16.next()) {\n      var $jscomp$destructuring$var17 = $jscomp.makeIterator($jscomp$key$.value), key__tsickle_destructured_3 = $jscomp$destructuring$var17.next().value, value__tsickle_destructured_4 = $jscomp$destructuring$var17.next().value, key = key__tsickle_destructured_3, value = value__tsickle_destructured_4;\n      module$contents$eeapiclient$request_params_simpleCorsAllowedHeaders.includes(key) ? (safeHeaders[key] = value, hasSafeHeaders = !0) : (unsafeHeaders[key] = value, hasUnsafeHeaders = !0);\n    }\n  }\n  if (null != params.body || \"PUT\" === params.httpMethod || \"POST\" === params.httpMethod) {\n    hasContentType || (unsafeHeaders[\"Content-Type\"] = \"application/json\", hasUnsafeHeaders = !0), safeHeaders[\"Content-Type\"] = \"text/plain\", hasSafeHeaders = !0;\n  }\n  if (hasUnsafeHeaders) {\n    var finalParam = (0,module$exports$goog$net$rpc$HttpCors.generateEncodedHttpHeadersOverwriteParam)(unsafeHeaders);\n    module$contents$eeapiclient$request_params_addQueryParameter(params, module$exports$goog$net$rpc$HttpCors.HTTP_HEADERS_PARAM_NAME, finalParam);\n  }\n  hasSafeHeaders && (params.headers = safeHeaders);\n  module$contents$eeapiclient$request_params_simpleCorsAllowedMethods.includes(params.httpMethod) || (module$contents$eeapiclient$request_params_addQueryParameter(params, module$exports$goog$net$rpc$HttpCors.HTTP_METHOD_PARAM_NAME, params.httpMethod), params.httpMethod = \"POST\");\n};\nfunction module$contents$eeapiclient$request_params_addQueryParameter(params, key, value) {\n  if (params.queryParams) {\n    params.queryParams[key] = value;\n  } else {\n    var $jscomp$compprop0 = {};\n    params.queryParams = ($jscomp$compprop0[key] = value, $jscomp$compprop0);\n  }\n}\n;var module$exports$eeapiclient$multipart_request = {}, module$contents$eeapiclient$multipart_request_module = module$contents$eeapiclient$multipart_request_module || {id:\"javascript/typescript/contrib/apiclient/core/multipart_request.closure.js\"};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest = function(files, _metadata) {\n  this.files = files;\n  this._metadata = _metadata;\n  this._metadataPayload = \"\";\n  this._boundary = Date.now().toString();\n  _metadata && this.addMetadata(_metadata);\n  this._payloadPromise = this.build();\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.boundary = function() {\n  return this._boundary;\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.metadata = function() {\n  return this._metadata;\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.payloadPromise = function() {\n  return this._payloadPromise;\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.addMetadata = function(metadata) {\n  var json = metadata instanceof module$exports$eeapiclient$domain_object.Serializable ? module$contents$eeapiclient$domain_object_serialize(metadata) : metadata;\n  this._metadataPayload += \"Content-Type: application/json; charset=utf-8\\r\\n\\r\\n\" + JSON.stringify(json) + (\"\\r\\n--\" + this._boundary + \"\\r\\n\");\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.build = function() {\n  var $jscomp$this = this, payload = \"--\" + this._boundary + \"\\r\\n\";\n  payload += this._metadataPayload;\n  return Promise.all(this.files.map(function(f) {\n    return $jscomp$this.encodeFile(f);\n  })).then(function(filePayloads) {\n    for (var $jscomp$iter$17 = $jscomp.makeIterator(filePayloads), $jscomp$key$filePayload = $jscomp$iter$17.next(); !$jscomp$key$filePayload.done; $jscomp$key$filePayload = $jscomp$iter$17.next()) {\n      payload += $jscomp$key$filePayload.value;\n    }\n    return payload += \"\\r\\n--\" + $jscomp$this._boundary + \"--\";\n  });\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.encodeFile = function(file) {\n  return this.base64EncodeFile(file).then(function(base64Str) {\n    return \"Content-Type: \" + file.type + '\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"' + (encodeURIComponent(file.name) + '\"\\r\\nContent-Transfer-Encoding: base64\\r\\n\\r\\n') + base64Str;\n  });\n};\nmodule$exports$eeapiclient$multipart_request.MultipartRequest.prototype.base64EncodeFile = function(file) {\n  return new Promise(function(resolve, reject) {\n    var reader = new FileReader();\n    reader.onload = function(ev) {\n      try {\n        var file$52 = ev.target.result, toResolve = file$52.substr(file$52.indexOf(\",\") + 1);\n        resolve(toResolve);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\nvar module$exports$eeapiclient$api_client = {}, module$contents$eeapiclient$api_client_module = module$contents$eeapiclient$api_client_module || {id:\"javascript/typescript/contrib/apiclient/core/api_client.closure.js\"};\nmodule$exports$eeapiclient$api_client.ApiClient = function() {\n};\nmodule$exports$eeapiclient$api_client.ApiClient.prototype.$validateParameter = function(param, pattern) {\n  var paramStr = String(param);\n  if (!pattern.test(paramStr)) {\n    throw Error(\"parameter [\" + paramStr + \"] does not match pattern [\" + pattern.toString() + \"]\");\n  }\n};\nfunction module$contents$eeapiclient$api_client_toMakeRequestParams(requestParams) {\n  var body = requestParams.body instanceof module$exports$eeapiclient$domain_object.Serializable ? module$contents$eeapiclient$domain_object_serialize(requestParams.body) : requestParams.body;\n  return {path:requestParams.path, httpMethod:requestParams.httpMethod, methodId:requestParams.methodId, body:body, queryParams:requestParams.queryParams, streamingType:requestParams.streamingType && requestParams.streamingType};\n}\nmodule$exports$eeapiclient$api_client.toMakeRequestParams = module$contents$eeapiclient$api_client_toMakeRequestParams;\nfunction module$contents$eeapiclient$api_client_toMultipartMakeRequestParams(requestParams) {\n  if (!(requestParams.body instanceof module$exports$eeapiclient$multipart_request.MultipartRequest)) {\n    throw Error(requestParams.path + \" request must be a MultipartRequest\");\n  }\n  var multipartRequest = requestParams.body;\n  return multipartRequest.payloadPromise().then(function(body) {\n    var _a, queryParams = null !== (_a = requestParams.queryParams) && void 0 !== _a ? _a : {};\n    return {path:requestParams.path, httpMethod:requestParams.httpMethod, methodId:requestParams.methodId, queryParams:Object.assign(Object.assign({}, queryParams), {uploadType:\"multipart\"}), headers:{\"X-Goog-Upload-Protocol\":\"multipart\", \"Content-Type\":\"multipart/related; boundary=\" + multipartRequest.boundary()}, body:body,};\n  });\n}\nmodule$exports$eeapiclient$api_client.toMultipartMakeRequestParams = module$contents$eeapiclient$api_client_toMultipartMakeRequestParams;\nvar module$exports$eeapiclient$api_request_hook = {}, module$contents$eeapiclient$api_request_hook_module = module$contents$eeapiclient$api_request_hook_module || {id:\"javascript/typescript/contrib/apiclient/core/api_request_hook.closure.js\"};\nmodule$exports$eeapiclient$api_request_hook.ApiClientRequestHook = function module$contents$eeapiclient$api_request_hook_ApiClientRequestHook() {\n};\nmodule$exports$eeapiclient$api_request_hook.ApiClientHookFactory = function() {\n};\nmodule$exports$eeapiclient$api_request_hook.ApiClientHookFactoryCtor = function module$contents$eeapiclient$api_request_hook_ApiClientHookFactoryCtor() {\n};\nmodule$exports$eeapiclient$api_request_hook.DefaultApiClientHookFactory = function() {\n};\nmodule$exports$eeapiclient$api_request_hook.DefaultApiClientHookFactory.prototype.getRequestHook = function(requestParams) {\n  return {onBeforeSend:function() {\n  }, onSuccess:function(response) {\n  }, onError:function(error) {\n  },};\n};\nfunction module$contents$eeapiclient$api_request_hook_getRequestHook(factory, requestParams) {\n  if (null == factory) {\n    return null;\n  }\n  var hook = factory.getRequestHook(requestParams);\n  return null == hook ? null : hook;\n}\nmodule$exports$eeapiclient$api_request_hook.getRequestHook = module$contents$eeapiclient$api_request_hook_getRequestHook;\nvar module$exports$eeapiclient$promise_api_client = {}, module$contents$eeapiclient$promise_api_client_module = module$contents$eeapiclient$promise_api_client_module || {id:\"javascript/typescript/contrib/apiclient/request_service/promise_api_client.closure.js\"};\nmodule$exports$eeapiclient$promise_api_client.PromiseApiClient = function(requestService, hookFactory) {\n  this.requestService = requestService;\n  this.hookFactory = void 0 === hookFactory ? null : hookFactory;\n};\n$jscomp.inherits(module$exports$eeapiclient$promise_api_client.PromiseApiClient, module$exports$eeapiclient$api_client.ApiClient);\nmodule$exports$eeapiclient$promise_api_client.PromiseApiClient.prototype.$addHooksToRequest = function(requestParams, promise) {\n  return null == module$contents$eeapiclient$api_request_hook_getRequestHook(this.hookFactory, requestParams) ? promise : promise.then(function(response) {\n    return response;\n  }, function(error) {\n    throw error;\n  });\n};\nmodule$exports$eeapiclient$promise_api_client.PromiseApiClient.prototype.$request = function(requestParams) {\n  var responseCtor = requestParams.responseCtor || void 0;\n  return this.$addHooksToRequest(requestParams, this.requestService.send(module$contents$eeapiclient$api_client_toMakeRequestParams(requestParams), responseCtor));\n};\nmodule$exports$eeapiclient$promise_api_client.PromiseApiClient.prototype.$uploadRequest = function(requestParams) {\n  var $jscomp$this = this, responseCtor = requestParams.responseCtor || void 0;\n  return this.$addHooksToRequest(requestParams, module$contents$eeapiclient$api_client_toMultipartMakeRequestParams(requestParams).then(function(params) {\n    return $jscomp$this.requestService.send(params, responseCtor);\n  }));\n};\nvar module$exports$eeapiclient$ee_api_client = {}, module$contents$eeapiclient$ee_api_client_module = module$contents$eeapiclient$ee_api_client_module || {id:\"geo/gestalt/client/javascript/v1alpha/ee_api_client.closure.js\"};\nmodule$exports$eeapiclient$ee_api_client.IAuditLogConfigLogTypeEnum = function module$contents$eeapiclient$ee_api_client_IAuditLogConfigLogTypeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum = {ADMIN_READ:\"ADMIN_READ\", DATA_READ:\"DATA_READ\", DATA_WRITE:\"DATA_WRITE\", LOG_TYPE_UNSPECIFIED:\"LOG_TYPE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum.LOG_TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum.ADMIN_READ, module$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum.DATA_WRITE, module$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum.DATA_READ];\n}};\nmodule$exports$eeapiclient$ee_api_client.IAuthorizationLoggingOptionsPermissionTypeEnum = function module$contents$eeapiclient$ee_api_client_IAuthorizationLoggingOptionsPermissionTypeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum = {ADMIN_READ:\"ADMIN_READ\", ADMIN_WRITE:\"ADMIN_WRITE\", DATA_READ:\"DATA_READ\", DATA_WRITE:\"DATA_WRITE\", PERMISSION_TYPE_UNSPECIFIED:\"PERMISSION_TYPE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum.PERMISSION_TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum.ADMIN_READ, module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum.ADMIN_WRITE, module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum.DATA_READ, \n  module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum.DATA_WRITE];\n}};\nmodule$exports$eeapiclient$ee_api_client.ICapabilitiesCapabilitiesEnum = function module$contents$eeapiclient$ee_api_client_ICapabilitiesCapabilitiesEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum = {CAPABILITY_GROUP_UNSPECIFIED:\"CAPABILITY_GROUP_UNSPECIFIED\", CLOUD_ALPHA:\"CLOUD_ALPHA\", EXTERNAL:\"EXTERNAL\", INTERNAL:\"INTERNAL\", LIMITED:\"LIMITED\", PREAUTHORIZED:\"PREAUTHORIZED\", PREVIEW:\"PREVIEW\", PUBLIC:\"PUBLIC\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.CAPABILITY_GROUP_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.PUBLIC, module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.INTERNAL, module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.EXTERNAL, module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.LIMITED, \n  module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.PREAUTHORIZED, module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.PREVIEW, module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum.CLOUD_ALPHA];\n}};\nmodule$exports$eeapiclient$ee_api_client.ICloudAuditOptionsLogNameEnum = function module$contents$eeapiclient$ee_api_client_ICloudAuditOptionsLogNameEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.CloudAuditOptionsLogNameEnum = {ADMIN_ACTIVITY:\"ADMIN_ACTIVITY\", DATA_ACCESS:\"DATA_ACCESS\", UNSPECIFIED_LOG_NAME:\"UNSPECIFIED_LOG_NAME\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.CloudAuditOptionsLogNameEnum.UNSPECIFIED_LOG_NAME, module$exports$eeapiclient$ee_api_client.CloudAuditOptionsLogNameEnum.ADMIN_ACTIVITY, module$exports$eeapiclient$ee_api_client.CloudAuditOptionsLogNameEnum.DATA_ACCESS];\n}};\nmodule$exports$eeapiclient$ee_api_client.ICloudStorageDestinationPermissionsEnum = function module$contents$eeapiclient$ee_api_client_ICloudStorageDestinationPermissionsEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.CloudStorageDestinationPermissionsEnum = {DEFAULT_OBJECT_ACL:\"DEFAULT_OBJECT_ACL\", PUBLIC:\"PUBLIC\", TILE_PERMISSIONS_UNSPECIFIED:\"TILE_PERMISSIONS_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.CloudStorageDestinationPermissionsEnum.TILE_PERMISSIONS_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.CloudStorageDestinationPermissionsEnum.PUBLIC, module$exports$eeapiclient$ee_api_client.CloudStorageDestinationPermissionsEnum.DEFAULT_OBJECT_ACL];\n}};\nmodule$exports$eeapiclient$ee_api_client.IComputePixelsRequestFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IComputePixelsRequestFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", GEO_TIFF:\"GEO_TIFF\", IMAGE_FILE_FORMAT_UNSPECIFIED:\"IMAGE_FILE_FORMAT_UNSPECIFIED\", JPEG:\"JPEG\", MULTI_BAND_IMAGE_TILE:\"MULTI_BAND_IMAGE_TILE\", NPY:\"NPY\", PNG:\"PNG\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\", ZIPPED_GEO_TIFF:\"ZIPPED_GEO_TIFF\", ZIPPED_GEO_TIFF_PER_BAND:\"ZIPPED_GEO_TIFF_PER_BAND\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.IMAGE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.JPEG, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.PNG, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.AUTO_JPEG_PNG, \n  module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.NPY, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.GEO_TIFF, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.TF_RECORD_IMAGE, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.MULTI_BAND_IMAGE_TILE, module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.ZIPPED_GEO_TIFF, \n  module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum.ZIPPED_GEO_TIFF_PER_BAND];\n}};\nmodule$exports$eeapiclient$ee_api_client.IConditionIamEnum = function module$contents$eeapiclient$ee_api_client_IConditionIamEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ConditionIamEnum = {APPROVER:\"APPROVER\", ATTRIBUTION:\"ATTRIBUTION\", AUTHORITY:\"AUTHORITY\", CREDENTIALS_TYPE:\"CREDENTIALS_TYPE\", CREDS_ASSERTION:\"CREDS_ASSERTION\", JUSTIFICATION_TYPE:\"JUSTIFICATION_TYPE\", NO_ATTR:\"NO_ATTR\", SECURITY_REALM:\"SECURITY_REALM\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ConditionIamEnum.NO_ATTR, module$exports$eeapiclient$ee_api_client.ConditionIamEnum.AUTHORITY, module$exports$eeapiclient$ee_api_client.ConditionIamEnum.ATTRIBUTION, module$exports$eeapiclient$ee_api_client.ConditionIamEnum.SECURITY_REALM, module$exports$eeapiclient$ee_api_client.ConditionIamEnum.APPROVER, \n  module$exports$eeapiclient$ee_api_client.ConditionIamEnum.JUSTIFICATION_TYPE, module$exports$eeapiclient$ee_api_client.ConditionIamEnum.CREDENTIALS_TYPE, module$exports$eeapiclient$ee_api_client.ConditionIamEnum.CREDS_ASSERTION];\n}};\nmodule$exports$eeapiclient$ee_api_client.IConditionOpEnum = function module$contents$eeapiclient$ee_api_client_IConditionOpEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ConditionOpEnum = {DISCHARGED:\"DISCHARGED\", EQUALS:\"EQUALS\", IN:\"IN\", NOT_EQUALS:\"NOT_EQUALS\", NOT_IN:\"NOT_IN\", NO_OP:\"NO_OP\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ConditionOpEnum.NO_OP, module$exports$eeapiclient$ee_api_client.ConditionOpEnum.EQUALS, module$exports$eeapiclient$ee_api_client.ConditionOpEnum.NOT_EQUALS, module$exports$eeapiclient$ee_api_client.ConditionOpEnum.IN, module$exports$eeapiclient$ee_api_client.ConditionOpEnum.NOT_IN, \n  module$exports$eeapiclient$ee_api_client.ConditionOpEnum.DISCHARGED];\n}};\nmodule$exports$eeapiclient$ee_api_client.IConditionSysEnum = function module$contents$eeapiclient$ee_api_client_IConditionSysEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ConditionSysEnum = {IP:\"IP\", NAME:\"NAME\", NO_ATTR:\"NO_ATTR\", REGION:\"REGION\", SERVICE:\"SERVICE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ConditionSysEnum.NO_ATTR, module$exports$eeapiclient$ee_api_client.ConditionSysEnum.REGION, module$exports$eeapiclient$ee_api_client.ConditionSysEnum.SERVICE, module$exports$eeapiclient$ee_api_client.ConditionSysEnum.NAME, module$exports$eeapiclient$ee_api_client.ConditionSysEnum.IP];\n}};\nmodule$exports$eeapiclient$ee_api_client.IDataAccessOptionsLogModeEnum = function module$contents$eeapiclient$ee_api_client_IDataAccessOptionsLogModeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.DataAccessOptionsLogModeEnum = {LOG_FAIL_CLOSED:\"LOG_FAIL_CLOSED\", LOG_MODE_UNSPECIFIED:\"LOG_MODE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.DataAccessOptionsLogModeEnum.LOG_MODE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.DataAccessOptionsLogModeEnum.LOG_FAIL_CLOSED];\n}};\nmodule$exports$eeapiclient$ee_api_client.IDmsAttributeTypeEnum = function module$contents$eeapiclient$ee_api_client_IDmsAttributeTypeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum = {BOOLEAN:\"BOOLEAN\", DATE_TIME:\"DATE_TIME\", DOUBLE:\"DOUBLE\", INTEGER:\"INTEGER\", STRING:\"STRING\", TYPE_UNSPECIFIED:\"TYPE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum.TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum.INTEGER, module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum.BOOLEAN, module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum.DOUBLE, module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum.STRING, \n  module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum.DATE_TIME];\n}};\nmodule$exports$eeapiclient$ee_api_client.IEarthEngineAssetTypeEnum = function module$contents$eeapiclient$ee_api_client_IEarthEngineAssetTypeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum = {CLASSIFIER:\"CLASSIFIER\", DATA_MAPPING_SERVICE:\"DATA_MAPPING_SERVICE\", FOLDER:\"FOLDER\", IMAGE:\"IMAGE\", IMAGE_COLLECTION:\"IMAGE_COLLECTION\", TABLE:\"TABLE\", TYPE_UNSPECIFIED:\"TYPE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.IMAGE, module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.IMAGE_COLLECTION, module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.TABLE, module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.FOLDER, \n  module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.CLASSIFIER, module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum.DATA_MAPPING_SERVICE];\n}};\nmodule$exports$eeapiclient$ee_api_client.IEarthEngineMapFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IEarthEngineMapFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", GEO_TIFF:\"GEO_TIFF\", IMAGE_FILE_FORMAT_UNSPECIFIED:\"IMAGE_FILE_FORMAT_UNSPECIFIED\", JPEG:\"JPEG\", MULTI_BAND_IMAGE_TILE:\"MULTI_BAND_IMAGE_TILE\", NPY:\"NPY\", PNG:\"PNG\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\", ZIPPED_GEO_TIFF:\"ZIPPED_GEO_TIFF\", ZIPPED_GEO_TIFF_PER_BAND:\"ZIPPED_GEO_TIFF_PER_BAND\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.IMAGE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.JPEG, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.PNG, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.AUTO_JPEG_PNG, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.NPY, \n  module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.GEO_TIFF, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.TF_RECORD_IMAGE, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.MULTI_BAND_IMAGE_TILE, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.ZIPPED_GEO_TIFF, module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum.ZIPPED_GEO_TIFF_PER_BAND];\n}};\nmodule$exports$eeapiclient$ee_api_client.IExportVideoMapRequestVersionEnum = function module$contents$eeapiclient$ee_api_client_IExportVideoMapRequestVersionEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportVideoMapRequestVersionEnum = {V1:\"V1\", V2:\"V2\", VERSION_UNSPECIFIED:\"VERSION_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ExportVideoMapRequestVersionEnum.VERSION_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ExportVideoMapRequestVersionEnum.V1, module$exports$eeapiclient$ee_api_client.ExportVideoMapRequestVersionEnum.V2];\n}};\nmodule$exports$eeapiclient$ee_api_client.IFeatureViewAttributeTypeEnum = function module$contents$eeapiclient$ee_api_client_IFeatureViewAttributeTypeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum = {BOOLEAN:\"BOOLEAN\", DATE_TIME:\"DATE_TIME\", DOUBLE:\"DOUBLE\", INTEGER:\"INTEGER\", STRING:\"STRING\", TYPE_UNSPECIFIED:\"TYPE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum.TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum.INTEGER, module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum.BOOLEAN, module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum.DOUBLE, module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum.STRING, \n  module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum.DATE_TIME];\n}};\nmodule$exports$eeapiclient$ee_api_client.IFilmstripThumbnailFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IFilmstripThumbnailFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", GEO_TIFF:\"GEO_TIFF\", IMAGE_FILE_FORMAT_UNSPECIFIED:\"IMAGE_FILE_FORMAT_UNSPECIFIED\", JPEG:\"JPEG\", MULTI_BAND_IMAGE_TILE:\"MULTI_BAND_IMAGE_TILE\", NPY:\"NPY\", PNG:\"PNG\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\", ZIPPED_GEO_TIFF:\"ZIPPED_GEO_TIFF\", ZIPPED_GEO_TIFF_PER_BAND:\"ZIPPED_GEO_TIFF_PER_BAND\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.IMAGE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.JPEG, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.PNG, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.AUTO_JPEG_PNG, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.NPY, \n  module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.GEO_TIFF, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.TF_RECORD_IMAGE, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.MULTI_BAND_IMAGE_TILE, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.ZIPPED_GEO_TIFF, \n  module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum.ZIPPED_GEO_TIFF_PER_BAND];\n}};\nmodule$exports$eeapiclient$ee_api_client.IFilmstripThumbnailOrientationEnum = function module$contents$eeapiclient$ee_api_client_IFilmstripThumbnailOrientationEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.FilmstripThumbnailOrientationEnum = {HORIZONTAL:\"HORIZONTAL\", ORIENTATION_UNSPECIFIED:\"ORIENTATION_UNSPECIFIED\", VERTICAL:\"VERTICAL\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.FilmstripThumbnailOrientationEnum.ORIENTATION_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailOrientationEnum.HORIZONTAL, module$exports$eeapiclient$ee_api_client.FilmstripThumbnailOrientationEnum.VERTICAL];\n}};\nmodule$exports$eeapiclient$ee_api_client.IGcsDestinationPermissionsEnum = function module$contents$eeapiclient$ee_api_client_IGcsDestinationPermissionsEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.GcsDestinationPermissionsEnum = {DEFAULT_OBJECT_ACL:\"DEFAULT_OBJECT_ACL\", PUBLIC:\"PUBLIC\", TILE_PERMISSIONS_UNSPECIFIED:\"TILE_PERMISSIONS_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.GcsDestinationPermissionsEnum.TILE_PERMISSIONS_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.GcsDestinationPermissionsEnum.PUBLIC, module$exports$eeapiclient$ee_api_client.GcsDestinationPermissionsEnum.DEFAULT_OBJECT_ACL];\n}};\nmodule$exports$eeapiclient$ee_api_client.IGetPixelsRequestFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IGetPixelsRequestFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", GEO_TIFF:\"GEO_TIFF\", IMAGE_FILE_FORMAT_UNSPECIFIED:\"IMAGE_FILE_FORMAT_UNSPECIFIED\", JPEG:\"JPEG\", MULTI_BAND_IMAGE_TILE:\"MULTI_BAND_IMAGE_TILE\", NPY:\"NPY\", PNG:\"PNG\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\", ZIPPED_GEO_TIFF:\"ZIPPED_GEO_TIFF\", ZIPPED_GEO_TIFF_PER_BAND:\"ZIPPED_GEO_TIFF_PER_BAND\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.IMAGE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.JPEG, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.PNG, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.AUTO_JPEG_PNG, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.NPY, \n  module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.GEO_TIFF, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.TF_RECORD_IMAGE, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.MULTI_BAND_IMAGE_TILE, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.ZIPPED_GEO_TIFF, module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum.ZIPPED_GEO_TIFF_PER_BAND];\n}};\nmodule$exports$eeapiclient$ee_api_client.IImageAssetExportOptionsPyramidingPolicyEnum = function module$contents$eeapiclient$ee_api_client_IImageAssetExportOptionsPyramidingPolicyEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum = {MAX:\"MAX\", MEAN:\"MEAN\", MEDIAN:\"MEDIAN\", MIN:\"MIN\", MODE:\"MODE\", PYRAMIDING_POLICY_UNSPECIFIED:\"PYRAMIDING_POLICY_UNSPECIFIED\", SAMPLE:\"SAMPLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.PYRAMIDING_POLICY_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.MEAN, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.SAMPLE, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.MIN, \n  module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.MAX, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.MODE, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum.MEDIAN];\n}};\nmodule$exports$eeapiclient$ee_api_client.IImageAssetExportOptionsPyramidingPolicyOverridesEnum = function module$contents$eeapiclient$ee_api_client_IImageAssetExportOptionsPyramidingPolicyOverridesEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum = {MAX:\"MAX\", MEAN:\"MEAN\", MEDIAN:\"MEDIAN\", MIN:\"MIN\", MODE:\"MODE\", PYRAMIDING_POLICY_UNSPECIFIED:\"PYRAMIDING_POLICY_UNSPECIFIED\", SAMPLE:\"SAMPLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.PYRAMIDING_POLICY_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.MEAN, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.SAMPLE, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.MIN, \n  module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.MAX, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.MODE, module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum.MEDIAN];\n}};\nmodule$exports$eeapiclient$ee_api_client.IImageBandPyramidingPolicyEnum = function module$contents$eeapiclient$ee_api_client_IImageBandPyramidingPolicyEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum = {MAX:\"MAX\", MEAN:\"MEAN\", MEDIAN:\"MEDIAN\", MIN:\"MIN\", MODE:\"MODE\", PYRAMIDING_POLICY_UNSPECIFIED:\"PYRAMIDING_POLICY_UNSPECIFIED\", SAMPLE:\"SAMPLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.PYRAMIDING_POLICY_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.MEAN, module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.SAMPLE, module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.MIN, module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.MAX, \n  module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.MODE, module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum.MEDIAN];\n}};\nmodule$exports$eeapiclient$ee_api_client.IImageFileExportOptionsFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IImageFileExportOptionsFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", GEO_TIFF:\"GEO_TIFF\", IMAGE_FILE_FORMAT_UNSPECIFIED:\"IMAGE_FILE_FORMAT_UNSPECIFIED\", JPEG:\"JPEG\", MULTI_BAND_IMAGE_TILE:\"MULTI_BAND_IMAGE_TILE\", NPY:\"NPY\", PNG:\"PNG\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\", ZIPPED_GEO_TIFF:\"ZIPPED_GEO_TIFF\", ZIPPED_GEO_TIFF_PER_BAND:\"ZIPPED_GEO_TIFF_PER_BAND\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.IMAGE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.JPEG, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.PNG, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.AUTO_JPEG_PNG, \n  module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.NPY, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.GEO_TIFF, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.TF_RECORD_IMAGE, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.MULTI_BAND_IMAGE_TILE, \n  module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.ZIPPED_GEO_TIFF, module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum.ZIPPED_GEO_TIFF_PER_BAND];\n}};\nmodule$exports$eeapiclient$ee_api_client.IImageManifestPyramidingPolicyEnum = function module$contents$eeapiclient$ee_api_client_IImageManifestPyramidingPolicyEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum = {MAX:\"MAX\", MEAN:\"MEAN\", MEDIAN:\"MEDIAN\", MIN:\"MIN\", MODE:\"MODE\", PYRAMIDING_POLICY_UNSPECIFIED:\"PYRAMIDING_POLICY_UNSPECIFIED\", SAMPLE:\"SAMPLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.PYRAMIDING_POLICY_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.MEAN, module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.SAMPLE, module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.MIN, module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.MAX, \n  module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.MODE, module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum.MEDIAN];\n}};\nmodule$exports$eeapiclient$ee_api_client.IOperationMetadataStateEnum = function module$contents$eeapiclient$ee_api_client_IOperationMetadataStateEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum = {CANCELLED:\"CANCELLED\", CANCELLING:\"CANCELLING\", FAILED:\"FAILED\", PENDING:\"PENDING\", RUNNING:\"RUNNING\", STATE_UNSPECIFIED:\"STATE_UNSPECIFIED\", SUCCEEDED:\"SUCCEEDED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.STATE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.PENDING, module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.RUNNING, module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.CANCELLING, module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.SUCCEEDED, \n  module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.CANCELLED, module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum.FAILED];\n}};\nmodule$exports$eeapiclient$ee_api_client.IPixelDataTypePrecisionEnum = function module$contents$eeapiclient$ee_api_client_IPixelDataTypePrecisionEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum = {DOUBLE:\"DOUBLE\", FLOAT:\"FLOAT\", INT:\"INT\", PRECISION_UNSPECIFIED:\"PRECISION_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum.PRECISION_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum.INT, module$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum.FLOAT, module$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum.DOUBLE];\n}};\nmodule$exports$eeapiclient$ee_api_client.IRankByOneThingRuleDirectionEnum = function module$contents$eeapiclient$ee_api_client_IRankByOneThingRuleDirectionEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankByOneThingRuleDirectionEnum = {ASCENDING:\"ASCENDING\", DESCENDING:\"DESCENDING\", DIRECTION_UNSPECIFIED:\"DIRECTION_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.RankByOneThingRuleDirectionEnum.DIRECTION_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.RankByOneThingRuleDirectionEnum.ASCENDING, module$exports$eeapiclient$ee_api_client.RankByOneThingRuleDirectionEnum.DESCENDING];\n}};\nmodule$exports$eeapiclient$ee_api_client.IRuleActionEnum = function module$contents$eeapiclient$ee_api_client_IRuleActionEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.RuleActionEnum = {ALLOW:\"ALLOW\", ALLOW_WITH_LOG:\"ALLOW_WITH_LOG\", DENY:\"DENY\", DENY_WITH_LOG:\"DENY_WITH_LOG\", LOG:\"LOG\", NO_ACTION:\"NO_ACTION\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.RuleActionEnum.NO_ACTION, module$exports$eeapiclient$ee_api_client.RuleActionEnum.ALLOW, module$exports$eeapiclient$ee_api_client.RuleActionEnum.ALLOW_WITH_LOG, module$exports$eeapiclient$ee_api_client.RuleActionEnum.DENY, module$exports$eeapiclient$ee_api_client.RuleActionEnum.DENY_WITH_LOG, \n  module$exports$eeapiclient$ee_api_client.RuleActionEnum.LOG];\n}};\nmodule$exports$eeapiclient$ee_api_client.ITableFileExportOptionsFileFormatEnum = function module$contents$eeapiclient$ee_api_client_ITableFileExportOptionsFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum = {CSV:\"CSV\", GEO_JSON:\"GEO_JSON\", KML:\"KML\", KMZ:\"KMZ\", SHP:\"SHP\", TABLE_FILE_FORMAT_UNSPECIFIED:\"TABLE_FILE_FORMAT_UNSPECIFIED\", TF_RECORD_TABLE:\"TF_RECORD_TABLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.TABLE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.CSV, module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.GEO_JSON, module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.KML, \n  module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.KMZ, module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.SHP, module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum.TF_RECORD_TABLE];\n}};\nmodule$exports$eeapiclient$ee_api_client.ITableFileFormatEnum = function module$contents$eeapiclient$ee_api_client_ITableFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableFileFormatEnum = {CSV:\"CSV\", GEO_JSON:\"GEO_JSON\", KML:\"KML\", KMZ:\"KMZ\", SHP:\"SHP\", TABLE_FILE_FORMAT_UNSPECIFIED:\"TABLE_FILE_FORMAT_UNSPECIFIED\", TF_RECORD_TABLE:\"TF_RECORD_TABLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.TABLE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.CSV, module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.GEO_JSON, module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.KML, module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.KMZ, \n  module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.SHP, module$exports$eeapiclient$ee_api_client.TableFileFormatEnum.TF_RECORD_TABLE];\n}};\nmodule$exports$eeapiclient$ee_api_client.ITableSourceCsvColumnDataTypeOverridesEnum = function module$contents$eeapiclient$ee_api_client_ITableSourceCsvColumnDataTypeOverridesEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableSourceCsvColumnDataTypeOverridesEnum = {CSV_COLUMN_DATA_TYPE_NUMERIC:\"CSV_COLUMN_DATA_TYPE_NUMERIC\", CSV_COLUMN_DATA_TYPE_STRING:\"CSV_COLUMN_DATA_TYPE_STRING\", CSV_COLUMN_DATA_TYPE_UNSPECIFIED:\"CSV_COLUMN_DATA_TYPE_UNSPECIFIED\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.TableSourceCsvColumnDataTypeOverridesEnum.CSV_COLUMN_DATA_TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.TableSourceCsvColumnDataTypeOverridesEnum.CSV_COLUMN_DATA_TYPE_STRING, module$exports$eeapiclient$ee_api_client.TableSourceCsvColumnDataTypeOverridesEnum.CSV_COLUMN_DATA_TYPE_NUMERIC];\n}};\nmodule$exports$eeapiclient$ee_api_client.IThinningOptionsThinningStrategyEnum = function module$contents$eeapiclient$ee_api_client_IThinningOptionsThinningStrategyEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ThinningOptionsThinningStrategyEnum = {GLOBALLY_CONSISTENT:\"GLOBALLY_CONSISTENT\", HIGHER_DENSITY:\"HIGHER_DENSITY\", UNKNOWN_THINNING_STRATEGY:\"UNKNOWN_THINNING_STRATEGY\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ThinningOptionsThinningStrategyEnum.UNKNOWN_THINNING_STRATEGY, module$exports$eeapiclient$ee_api_client.ThinningOptionsThinningStrategyEnum.GLOBALLY_CONSISTENT, module$exports$eeapiclient$ee_api_client.ThinningOptionsThinningStrategyEnum.HIGHER_DENSITY];\n}};\nmodule$exports$eeapiclient$ee_api_client.IThumbnailFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IThumbnailFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", GEO_TIFF:\"GEO_TIFF\", IMAGE_FILE_FORMAT_UNSPECIFIED:\"IMAGE_FILE_FORMAT_UNSPECIFIED\", JPEG:\"JPEG\", MULTI_BAND_IMAGE_TILE:\"MULTI_BAND_IMAGE_TILE\", NPY:\"NPY\", PNG:\"PNG\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\", ZIPPED_GEO_TIFF:\"ZIPPED_GEO_TIFF\", ZIPPED_GEO_TIFF_PER_BAND:\"ZIPPED_GEO_TIFF_PER_BAND\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.IMAGE_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.JPEG, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.PNG, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.AUTO_JPEG_PNG, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.NPY, \n  module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.GEO_TIFF, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.TF_RECORD_IMAGE, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.MULTI_BAND_IMAGE_TILE, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.ZIPPED_GEO_TIFF, module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum.ZIPPED_GEO_TIFF_PER_BAND];\n}};\nmodule$exports$eeapiclient$ee_api_client.ITilesetBandPyramidingPolicyEnum = function module$contents$eeapiclient$ee_api_client_ITilesetBandPyramidingPolicyEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum = {MAX:\"MAX\", MEAN:\"MEAN\", MEDIAN:\"MEDIAN\", MIN:\"MIN\", MODE:\"MODE\", PYRAMIDING_POLICY_UNSPECIFIED:\"PYRAMIDING_POLICY_UNSPECIFIED\", SAMPLE:\"SAMPLE\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.PYRAMIDING_POLICY_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.MEAN, module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.SAMPLE, module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.MIN, module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.MAX, \n  module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.MODE, module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum.MEDIAN];\n}};\nmodule$exports$eeapiclient$ee_api_client.ITilesetDataTypeEnum = function module$contents$eeapiclient$ee_api_client_ITilesetDataTypeEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum = {DATA_TYPE_UNSPECIFIED:\"DATA_TYPE_UNSPECIFIED\", DOUBLE:\"DOUBLE\", FLOAT:\"FLOAT\", INT16:\"INT16\", INT32:\"INT32\", INT8:\"INT8\", UINT16:\"UINT16\", UINT32:\"UINT32\", UINT8:\"UINT8\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.DATA_TYPE_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.INT8, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.UINT8, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.INT16, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.UINT16, \n  module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.INT32, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.UINT32, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.FLOAT, module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum.DOUBLE];\n}};\nmodule$exports$eeapiclient$ee_api_client.IVideoFileExportOptionsFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IVideoFileExportOptionsFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum = {GIF:\"GIF\", MP4:\"MP4\", VIDEO_FILE_FORMAT_UNSPECIFIED:\"VIDEO_FILE_FORMAT_UNSPECIFIED\", VP9:\"VP9\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum.VIDEO_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum.MP4, module$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum.GIF, module$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum.VP9];\n}};\nmodule$exports$eeapiclient$ee_api_client.IVideoThumbnailFileFormatEnum = function module$contents$eeapiclient$ee_api_client_IVideoThumbnailFileFormatEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum = {GIF:\"GIF\", MP4:\"MP4\", VIDEO_FILE_FORMAT_UNSPECIFIED:\"VIDEO_FILE_FORMAT_UNSPECIFIED\", VP9:\"VP9\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum.VIDEO_FILE_FORMAT_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum.MP4, module$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum.GIF, module$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum.VP9];\n}};\nmodule$exports$eeapiclient$ee_api_client.AffineTransformParameters = function module$contents$eeapiclient$ee_api_client_AffineTransformParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.AffineTransform = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"scaleX\", null == parameters.scaleX ? null : parameters.scaleX);\n  this.Serializable$set(\"shearX\", null == parameters.shearX ? null : parameters.shearX);\n  this.Serializable$set(\"translateX\", null == parameters.translateX ? null : parameters.translateX);\n  this.Serializable$set(\"shearY\", null == parameters.shearY ? null : parameters.shearY);\n  this.Serializable$set(\"scaleY\", null == parameters.scaleY ? null : parameters.scaleY);\n  this.Serializable$set(\"translateY\", null == parameters.translateY ? null : parameters.translateY);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.AffineTransform, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.AffineTransform.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.AffineTransform;\n};\nmodule$exports$eeapiclient$ee_api_client.AffineTransform.prototype.getPartialClassMetadata = function() {\n  return {keys:\"scaleX scaleY shearX shearY translateX translateY\".split(\" \")};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AffineTransform.prototype, {scaleX:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"scaleX\") ? this.Serializable$get(\"scaleX\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"scaleX\", value);\n}}, scaleY:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"scaleY\") ? this.Serializable$get(\"scaleY\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"scaleY\", value);\n}}, shearX:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"shearX\") ? this.Serializable$get(\"shearX\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"shearX\", value);\n}}, shearY:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"shearY\") ? this.Serializable$get(\"shearY\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"shearY\", value);\n}}, translateX:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"translateX\") ? this.Serializable$get(\"translateX\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"translateX\", value);\n}}, translateY:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"translateY\") ? this.Serializable$get(\"translateY\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"translateY\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.AlgorithmParameters = function module$contents$eeapiclient$ee_api_client_AlgorithmParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Algorithm = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"returnType\", null == parameters.returnType ? null : parameters.returnType);\n  this.Serializable$set(\"arguments\", null == parameters.arguments ? null : parameters.arguments);\n  this.Serializable$set(\"deprecated\", null == parameters.deprecated ? null : parameters.deprecated);\n  this.Serializable$set(\"deprecationReason\", null == parameters.deprecationReason ? null : parameters.deprecationReason);\n  this.Serializable$set(\"hidden\", null == parameters.hidden ? null : parameters.hidden);\n  this.Serializable$set(\"preview\", null == parameters.preview ? null : parameters.preview);\n  this.Serializable$set(\"sourceCodeUri\", null == parameters.sourceCodeUri ? null : parameters.sourceCodeUri);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Algorithm, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Algorithm.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Algorithm;\n};\nmodule$exports$eeapiclient$ee_api_client.Algorithm.prototype.getPartialClassMetadata = function() {\n  return {arrays:{arguments:module$exports$eeapiclient$ee_api_client.AlgorithmArgument}, keys:\"arguments deprecated deprecationReason description hidden name preview returnType sourceCodeUri\".split(\" \")};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Algorithm.prototype, {arguments:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"arguments\") ? this.Serializable$get(\"arguments\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"arguments\", value);\n}}, deprecated:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"deprecated\") ? this.Serializable$get(\"deprecated\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"deprecated\", value);\n}}, deprecationReason:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"deprecationReason\") ? this.Serializable$get(\"deprecationReason\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"deprecationReason\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, hidden:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"hidden\") ? this.Serializable$get(\"hidden\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"hidden\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, preview:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"preview\") ? this.Serializable$get(\"preview\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"preview\", value);\n}}, returnType:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"returnType\") ? this.Serializable$get(\"returnType\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"returnType\", value);\n}}, sourceCodeUri:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sourceCodeUri\") ? this.Serializable$get(\"sourceCodeUri\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sourceCodeUri\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.AlgorithmArgumentParameters = function module$contents$eeapiclient$ee_api_client_AlgorithmArgumentParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.AlgorithmArgument = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"argumentName\", null == parameters.argumentName ? null : parameters.argumentName);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"optional\", null == parameters.optional ? null : parameters.optional);\n  this.Serializable$set(\"defaultValue\", null == parameters.defaultValue ? null : parameters.defaultValue);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.AlgorithmArgument, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.AlgorithmArgument.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.AlgorithmArgument;\n};\nmodule$exports$eeapiclient$ee_api_client.AlgorithmArgument.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"argumentName\", \"defaultValue\", \"description\", \"optional\", \"type\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AlgorithmArgument.prototype, {argumentName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"argumentName\") ? this.Serializable$get(\"argumentName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"argumentName\", value);\n}}, defaultValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"defaultValue\") ? this.Serializable$get(\"defaultValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"defaultValue\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, optional:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"optional\") ? this.Serializable$get(\"optional\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"optional\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ArrayValueParameters = function module$contents$eeapiclient$ee_api_client_ArrayValueParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ArrayValue = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"values\", null == parameters.values ? null : parameters.values);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ArrayValue, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ArrayValue.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ArrayValue;\n};\nmodule$exports$eeapiclient$ee_api_client.ArrayValue.prototype.getPartialClassMetadata = function() {\n  return {arrays:{values:module$exports$eeapiclient$ee_api_client.ValueNode}, keys:[\"values\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ArrayValue.prototype, {values:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"values\") ? this.Serializable$get(\"values\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"values\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.AuditConfigParameters = function module$contents$eeapiclient$ee_api_client_AuditConfigParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.AuditConfig = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"service\", null == parameters.service ? null : parameters.service);\n  this.Serializable$set(\"exemptedMembers\", null == parameters.exemptedMembers ? null : parameters.exemptedMembers);\n  this.Serializable$set(\"auditLogConfigs\", null == parameters.auditLogConfigs ? null : parameters.auditLogConfigs);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.AuditConfig, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.AuditConfig.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.AuditConfig;\n};\nmodule$exports$eeapiclient$ee_api_client.AuditConfig.prototype.getPartialClassMetadata = function() {\n  return {arrays:{auditLogConfigs:module$exports$eeapiclient$ee_api_client.AuditLogConfig}, keys:[\"auditLogConfigs\", \"exemptedMembers\", \"service\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AuditConfig.prototype, {auditLogConfigs:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"auditLogConfigs\") ? this.Serializable$get(\"auditLogConfigs\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"auditLogConfigs\", value);\n}}, exemptedMembers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"exemptedMembers\") ? this.Serializable$get(\"exemptedMembers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"exemptedMembers\", value);\n}}, service:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"service\") ? this.Serializable$get(\"service\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"service\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.AuditLogConfigParameters = function module$contents$eeapiclient$ee_api_client_AuditLogConfigParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.AuditLogConfig = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"logType\", null == parameters.logType ? null : parameters.logType);\n  this.Serializable$set(\"exemptedMembers\", null == parameters.exemptedMembers ? null : parameters.exemptedMembers);\n  this.Serializable$set(\"ignoreChildExemptions\", null == parameters.ignoreChildExemptions ? null : parameters.ignoreChildExemptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.AuditLogConfig, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.AuditLogConfig.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.AuditLogConfig;\n};\nmodule$exports$eeapiclient$ee_api_client.AuditLogConfig.prototype.getPartialClassMetadata = function() {\n  return {enums:{logType:module$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum}, keys:[\"exemptedMembers\", \"ignoreChildExemptions\", \"logType\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AuditLogConfig.prototype, {exemptedMembers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"exemptedMembers\") ? this.Serializable$get(\"exemptedMembers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"exemptedMembers\", value);\n}}, ignoreChildExemptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"ignoreChildExemptions\") ? this.Serializable$get(\"ignoreChildExemptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"ignoreChildExemptions\", value);\n}}, logType:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"logType\") ? this.Serializable$get(\"logType\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"logType\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AuditLogConfig, {LogType:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.AuditLogConfigLogTypeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsParameters = function module$contents$eeapiclient$ee_api_client_AuthorizationLoggingOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"permissionType\", null == parameters.permissionType ? null : parameters.permissionType);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{permissionType:module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum}, keys:[\"permissionType\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions.prototype, {permissionType:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"permissionType\") ? this.Serializable$get(\"permissionType\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"permissionType\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions, {PermissionType:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptionsPermissionTypeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.BindingParameters = function module$contents$eeapiclient$ee_api_client_BindingParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Binding = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"role\", null == parameters.role ? null : parameters.role);\n  this.Serializable$set(\"members\", null == parameters.members ? null : parameters.members);\n  this.Serializable$set(\"condition\", null == parameters.condition ? null : parameters.condition);\n  this.Serializable$set(\"bindingId\", null == parameters.bindingId ? null : parameters.bindingId);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Binding, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Binding.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Binding;\n};\nmodule$exports$eeapiclient$ee_api_client.Binding.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"bindingId\", \"condition\", \"members\", \"role\"], objects:{condition:module$exports$eeapiclient$ee_api_client.Expr}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Binding.prototype, {bindingId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bindingId\") ? this.Serializable$get(\"bindingId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bindingId\", value);\n}}, condition:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"condition\") ? this.Serializable$get(\"condition\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"condition\", value);\n}}, members:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"members\") ? this.Serializable$get(\"members\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"members\", value);\n}}, role:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"role\") ? this.Serializable$get(\"role\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"role\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.CancelOperationRequestParameters = function module$contents$eeapiclient$ee_api_client_CancelOperationRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CancelOperationRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CancelOperationRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CancelOperationRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CancelOperationRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.CancelOperationRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[]};\n};\nmodule$exports$eeapiclient$ee_api_client.CapabilitiesParameters = function module$contents$eeapiclient$ee_api_client_CapabilitiesParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Capabilities = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"capabilities\", null == parameters.capabilities ? null : parameters.capabilities);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Capabilities, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Capabilities.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Capabilities;\n};\nmodule$exports$eeapiclient$ee_api_client.Capabilities.prototype.getPartialClassMetadata = function() {\n  return {enums:{capabilities:module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum}, keys:[\"capabilities\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Capabilities.prototype, {capabilities:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"capabilities\") ? this.Serializable$get(\"capabilities\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"capabilities\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Capabilities, {Capabilities:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.CapabilitiesCapabilitiesEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_ClassifierAssetExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"earthEngineDestination\", null == parameters.earthEngineDestination ? null : parameters.earthEngineDestination);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"earthEngineDestination\"], objects:{earthEngineDestination:module$exports$eeapiclient$ee_api_client.EarthEngineDestination}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions.prototype, {earthEngineDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"earthEngineDestination\") ? this.Serializable$get(\"earthEngineDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"earthEngineDestination\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.CloudAuditOptionsParameters = function module$contents$eeapiclient$ee_api_client_CloudAuditOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CloudAuditOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"logName\", null == parameters.logName ? null : parameters.logName);\n  this.Serializable$set(\"authorizationLoggingOptions\", null == parameters.authorizationLoggingOptions ? null : parameters.authorizationLoggingOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CloudAuditOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CloudAuditOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CloudAuditOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.CloudAuditOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{logName:module$exports$eeapiclient$ee_api_client.CloudAuditOptionsLogNameEnum}, keys:[\"authorizationLoggingOptions\", \"logName\"], objects:{authorizationLoggingOptions:module$exports$eeapiclient$ee_api_client.AuthorizationLoggingOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CloudAuditOptions.prototype, {authorizationLoggingOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"authorizationLoggingOptions\") ? this.Serializable$get(\"authorizationLoggingOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"authorizationLoggingOptions\", value);\n}}, logName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"logName\") ? this.Serializable$get(\"logName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"logName\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CloudAuditOptions, {LogName:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.CloudAuditOptionsLogNameEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.CloudStorageDestinationParameters = function module$contents$eeapiclient$ee_api_client_CloudStorageDestinationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CloudStorageDestination = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"bucket\", null == parameters.bucket ? null : parameters.bucket);\n  this.Serializable$set(\"filenamePrefix\", null == parameters.filenamePrefix ? null : parameters.filenamePrefix);\n  this.Serializable$set(\"permissions\", null == parameters.permissions ? null : parameters.permissions);\n  this.Serializable$set(\"bucketCorsUris\", null == parameters.bucketCorsUris ? null : parameters.bucketCorsUris);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CloudStorageDestination, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CloudStorageDestination.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CloudStorageDestination;\n};\nmodule$exports$eeapiclient$ee_api_client.CloudStorageDestination.prototype.getPartialClassMetadata = function() {\n  return {enums:{permissions:module$exports$eeapiclient$ee_api_client.CloudStorageDestinationPermissionsEnum}, keys:[\"bucket\", \"bucketCorsUris\", \"filenamePrefix\", \"permissions\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CloudStorageDestination.prototype, {bucket:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bucket\") ? this.Serializable$get(\"bucket\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bucket\", value);\n}}, bucketCorsUris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bucketCorsUris\") ? this.Serializable$get(\"bucketCorsUris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bucketCorsUris\", value);\n}}, filenamePrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"filenamePrefix\") ? this.Serializable$get(\"filenamePrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"filenamePrefix\", value);\n}}, permissions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"permissions\") ? this.Serializable$get(\"permissions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"permissions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CloudStorageDestination, {Permissions:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.CloudStorageDestinationPermissionsEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.CloudStorageLocationParameters = function module$contents$eeapiclient$ee_api_client_CloudStorageLocationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CloudStorageLocation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"uris\", null == parameters.uris ? null : parameters.uris);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CloudStorageLocation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CloudStorageLocation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CloudStorageLocation;\n};\nmodule$exports$eeapiclient$ee_api_client.CloudStorageLocation.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"uris\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CloudStorageLocation.prototype, {uris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"uris\") ? this.Serializable$get(\"uris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"uris\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesRequestParameters = function module$contents$eeapiclient$ee_api_client_ComputeFeaturesRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"pageSize\", null == parameters.pageSize ? null : parameters.pageSize);\n  this.Serializable$set(\"pageToken\", null == parameters.pageToken ? null : parameters.pageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputeFeaturesRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputeFeaturesRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"expression\", \"pageSize\", \"pageToken\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputeFeaturesRequest.prototype, {expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, pageSize:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pageSize\") ? this.Serializable$get(\"pageSize\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pageSize\", value);\n}}, pageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pageToken\") ? this.Serializable$get(\"pageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pageToken\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesResponseParameters = function module$contents$eeapiclient$ee_api_client_ComputeFeaturesResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n  this.Serializable$set(\"features\", null == parameters.features ? null : parameters.features);\n  this.Serializable$set(\"nextPageToken\", null == parameters.nextPageToken ? null : parameters.nextPageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{features:module$exports$eeapiclient$ee_api_client.Feature}, keys:[\"features\", \"nextPageToken\", \"type\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse.prototype, {features:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"features\") ? this.Serializable$get(\"features\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"features\", value);\n}}, nextPageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"nextPageToken\") ? this.Serializable$get(\"nextPageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"nextPageToken\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesRequestParameters = function module$contents$eeapiclient$ee_api_client_ComputeImagesRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"pageSize\", null == parameters.pageSize ? null : parameters.pageSize);\n  this.Serializable$set(\"pageToken\", null == parameters.pageToken ? null : parameters.pageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputeImagesRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputeImagesRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"expression\", \"pageSize\", \"pageToken\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputeImagesRequest.prototype, {expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, pageSize:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pageSize\") ? this.Serializable$get(\"pageSize\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pageSize\", value);\n}}, pageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pageToken\") ? this.Serializable$get(\"pageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pageToken\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesResponseParameters = function module$contents$eeapiclient$ee_api_client_ComputeImagesResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"images\", null == parameters.images ? null : parameters.images);\n  this.Serializable$set(\"nextPageToken\", null == parameters.nextPageToken ? null : parameters.nextPageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputeImagesResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputeImagesResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeImagesResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{images:module$exports$eeapiclient$ee_api_client.EarthEngineAsset}, keys:[\"images\", \"nextPageToken\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputeImagesResponse.prototype, {images:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"images\") ? this.Serializable$get(\"images\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"images\", value);\n}}, nextPageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"nextPageToken\") ? this.Serializable$get(\"nextPageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"nextPageToken\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputePixelsRequestParameters = function module$contents$eeapiclient$ee_api_client_ComputePixelsRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputePixelsRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n  this.Serializable$set(\"bandIds\", null == parameters.bandIds ? null : parameters.bandIds);\n  this.Serializable$set(\"visualizationOptions\", null == parameters.visualizationOptions ? null : parameters.visualizationOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputePixelsRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputePixelsRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputePixelsRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputePixelsRequest.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum}, keys:[\"bandIds\", \"expression\", \"fileFormat\", \"grid\", \"visualizationOptions\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, grid:module$exports$eeapiclient$ee_api_client.PixelGrid, visualizationOptions:module$exports$eeapiclient$ee_api_client.VisualizationOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputePixelsRequest.prototype, {bandIds:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandIds\") ? this.Serializable$get(\"bandIds\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandIds\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, visualizationOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationOptions\") ? this.Serializable$get(\"visualizationOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputePixelsRequest, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ComputePixelsRequestFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputeValueRequestParameters = function module$contents$eeapiclient$ee_api_client_ComputeValueRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeValueRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputeValueRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputeValueRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputeValueRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeValueRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"expression\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputeValueRequest.prototype, {expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ComputeValueResponseParameters = function module$contents$eeapiclient$ee_api_client_ComputeValueResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeValueResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"result\", null == parameters.result ? null : parameters.result);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ComputeValueResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ComputeValueResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ComputeValueResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ComputeValueResponse.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"result\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ComputeValueResponse.prototype, {result:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"result\") ? this.Serializable$get(\"result\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"result\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ConditionParameters = function module$contents$eeapiclient$ee_api_client_ConditionParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Condition = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"iam\", null == parameters.iam ? null : parameters.iam);\n  this.Serializable$set(\"sys\", null == parameters.sys ? null : parameters.sys);\n  this.Serializable$set(\"svc\", null == parameters.svc ? null : parameters.svc);\n  this.Serializable$set(\"op\", null == parameters.op ? null : parameters.op);\n  this.Serializable$set(\"values\", null == parameters.values ? null : parameters.values);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Condition, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Condition.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Condition;\n};\nmodule$exports$eeapiclient$ee_api_client.Condition.prototype.getPartialClassMetadata = function() {\n  return {enums:{iam:module$exports$eeapiclient$ee_api_client.ConditionIamEnum, op:module$exports$eeapiclient$ee_api_client.ConditionOpEnum, sys:module$exports$eeapiclient$ee_api_client.ConditionSysEnum}, keys:[\"iam\", \"op\", \"svc\", \"sys\", \"values\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Condition.prototype, {iam:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"iam\") ? this.Serializable$get(\"iam\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"iam\", value);\n}}, op:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"op\") ? this.Serializable$get(\"op\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"op\", value);\n}}, svc:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"svc\") ? this.Serializable$get(\"svc\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"svc\", value);\n}}, sys:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sys\") ? this.Serializable$get(\"sys\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sys\", value);\n}}, values:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"values\") ? this.Serializable$get(\"values\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"values\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Condition, {Iam:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ConditionIamEnum;\n}}, Op:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ConditionOpEnum;\n}}, Sys:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ConditionSysEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.CopyAssetRequestParameters = function module$contents$eeapiclient$ee_api_client_CopyAssetRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CopyAssetRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"destinationName\", null == parameters.destinationName ? null : parameters.destinationName);\n  this.Serializable$set(\"overwrite\", null == parameters.overwrite ? null : parameters.overwrite);\n  this.Serializable$set(\"bandIds\", null == parameters.bandIds ? null : parameters.bandIds);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CopyAssetRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CopyAssetRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CopyAssetRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.CopyAssetRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"bandIds\", \"destinationName\", \"overwrite\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CopyAssetRequest.prototype, {bandIds:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandIds\") ? this.Serializable$get(\"bandIds\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandIds\", value);\n}}, destinationName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"destinationName\") ? this.Serializable$get(\"destinationName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"destinationName\", value);\n}}, overwrite:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"overwrite\") ? this.Serializable$get(\"overwrite\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"overwrite\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.CounterOptionsParameters = function module$contents$eeapiclient$ee_api_client_CounterOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CounterOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"metric\", null == parameters.metric ? null : parameters.metric);\n  this.Serializable$set(\"field\", null == parameters.field ? null : parameters.field);\n  this.Serializable$set(\"customFields\", null == parameters.customFields ? null : parameters.customFields);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CounterOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CounterOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CounterOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.CounterOptions.prototype.getPartialClassMetadata = function() {\n  return {arrays:{customFields:module$exports$eeapiclient$ee_api_client.CustomField}, keys:[\"customFields\", \"field\", \"metric\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CounterOptions.prototype, {customFields:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"customFields\") ? this.Serializable$get(\"customFields\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"customFields\", value);\n}}, field:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"field\") ? this.Serializable$get(\"field\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"field\", value);\n}}, metric:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"metric\") ? this.Serializable$get(\"metric\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"metric\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.CustomFieldParameters = function module$contents$eeapiclient$ee_api_client_CustomFieldParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.CustomField = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"value\", null == parameters.value ? null : parameters.value);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.CustomField, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.CustomField.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.CustomField;\n};\nmodule$exports$eeapiclient$ee_api_client.CustomField.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"name\", \"value\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.CustomField.prototype, {name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, value:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"value\") ? this.Serializable$get(\"value\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"value\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DMSMapParameters = function module$contents$eeapiclient$ee_api_client_DMSMapParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DMSMap = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"asset\", null == parameters.asset ? null : parameters.asset);\n  this.Serializable$set(\"dmsName\", null == parameters.dmsName ? null : parameters.dmsName);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"visualizationOptions\", null == parameters.visualizationOptions ? null : parameters.visualizationOptions);\n  this.Serializable$set(\"visualizationExpression\", null == parameters.visualizationExpression ? null : parameters.visualizationExpression);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DMSMap, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DMSMap.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DMSMap;\n};\nmodule$exports$eeapiclient$ee_api_client.DMSMap.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"asset\", \"dmsName\", \"name\", \"visualizationExpression\", \"visualizationOptions\"], objects:{visualizationExpression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DMSMap.prototype, {asset:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"asset\") ? this.Serializable$get(\"asset\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"asset\", value);\n}}, dmsName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsName\") ? this.Serializable$get(\"dmsName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsName\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, visualizationExpression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationExpression\") ? this.Serializable$get(\"visualizationExpression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationExpression\", value);\n}}, visualizationOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationOptions\") ? this.Serializable$get(\"visualizationOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationOptions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DataAccessOptionsParameters = function module$contents$eeapiclient$ee_api_client_DataAccessOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DataAccessOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"logMode\", null == parameters.logMode ? null : parameters.logMode);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DataAccessOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DataAccessOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DataAccessOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.DataAccessOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{logMode:module$exports$eeapiclient$ee_api_client.DataAccessOptionsLogModeEnum}, keys:[\"logMode\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DataAccessOptions.prototype, {logMode:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"logMode\") ? this.Serializable$get(\"logMode\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"logMode\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DataAccessOptions, {LogMode:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.DataAccessOptionsLogModeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.DictionaryValueParameters = function module$contents$eeapiclient$ee_api_client_DictionaryValueParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DictionaryValue = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"values\", null == parameters.values ? null : parameters.values);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DictionaryValue, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DictionaryValue.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DictionaryValue;\n};\nmodule$exports$eeapiclient$ee_api_client.DictionaryValue.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"values\"], objectMaps:{values:{ctor:module$exports$eeapiclient$ee_api_client.ValueNode, isPropertyArray:!1, isSerializable:!0, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DictionaryValue.prototype, {values:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"values\") ? this.Serializable$get(\"values\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"values\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DmsAssetExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_DmsAssetExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsAssetExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"dmsDestination\", null == parameters.dmsDestination ? null : parameters.dmsDestination);\n  this.Serializable$set(\"ingestionTimeParameters\", null == parameters.ingestionTimeParameters ? null : parameters.ingestionTimeParameters);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DmsAssetExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DmsAssetExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DmsAssetExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.DmsAssetExportOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"dmsDestination\", \"ingestionTimeParameters\"], objects:{dmsDestination:module$exports$eeapiclient$ee_api_client.DmsDestination, ingestionTimeParameters:module$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsAssetExportOptions.prototype, {dmsDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsDestination\") ? this.Serializable$get(\"dmsDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsDestination\", value);\n}}, ingestionTimeParameters:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"ingestionTimeParameters\") ? this.Serializable$get(\"ingestionTimeParameters\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"ingestionTimeParameters\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DmsAttributeParameters = function module$contents$eeapiclient$ee_api_client_DmsAttributeParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsAttribute = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DmsAttribute, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DmsAttribute.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DmsAttribute;\n};\nmodule$exports$eeapiclient$ee_api_client.DmsAttribute.prototype.getPartialClassMetadata = function() {\n  return {enums:{type:module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum}, keys:[\"name\", \"type\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsAttribute.prototype, {name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsAttribute, {Type:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.DmsAttributeTypeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.DmsDestinationParameters = function module$contents$eeapiclient$ee_api_client_DmsDestinationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsDestination = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"dmsName\", null == parameters.dmsName ? null : parameters.dmsName);\n  this.Serializable$set(\"assetVersion\", null == parameters.assetVersion ? null : parameters.assetVersion);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DmsDestination, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DmsDestination.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DmsDestination;\n};\nmodule$exports$eeapiclient$ee_api_client.DmsDestination.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"assetVersion\", \"dmsName\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsDestination.prototype, {assetVersion:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetVersion\") ? this.Serializable$get(\"assetVersion\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetVersion\", value);\n}}, dmsName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsName\") ? this.Serializable$get(\"dmsName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsName\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DmsIngestionTimeParametersParameters = function module$contents$eeapiclient$ee_api_client_DmsIngestionTimeParametersParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"thinningOptions\", null == parameters.thinningOptions ? null : parameters.thinningOptions);\n  this.Serializable$set(\"rankingOptions\", null == parameters.rankingOptions ? null : parameters.rankingOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters;\n};\nmodule$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"rankingOptions\", \"thinningOptions\"], objects:{rankingOptions:module$exports$eeapiclient$ee_api_client.RankingOptions, thinningOptions:module$exports$eeapiclient$ee_api_client.ThinningOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters.prototype, {rankingOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankingOptions\") ? this.Serializable$get(\"rankingOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankingOptions\", value);\n}}, thinningOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"thinningOptions\") ? this.Serializable$get(\"thinningOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"thinningOptions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DmsLocationParameters = function module$contents$eeapiclient$ee_api_client_DmsLocationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsLocation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"location\", null == parameters.location ? null : parameters.location);\n  this.Serializable$set(\"dmsAssetOptions\", null == parameters.dmsAssetOptions ? null : parameters.dmsAssetOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DmsLocation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DmsLocation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DmsLocation;\n};\nmodule$exports$eeapiclient$ee_api_client.DmsLocation.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"dmsAssetOptions\", \"location\"], objects:{dmsAssetOptions:module$exports$eeapiclient$ee_api_client.DmsOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsLocation.prototype, {dmsAssetOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsAssetOptions\") ? this.Serializable$get(\"dmsAssetOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsAssetOptions\", value);\n}}, location:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"location\") ? this.Serializable$get(\"location\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"location\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DmsOptionsParameters = function module$contents$eeapiclient$ee_api_client_DmsOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DmsOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"attributes\", null == parameters.attributes ? null : parameters.attributes);\n  this.Serializable$set(\"dmsAttributes\", null == parameters.dmsAttributes ? null : parameters.dmsAttributes);\n  this.Serializable$set(\"ingestionTimeParameters\", null == parameters.ingestionTimeParameters ? null : parameters.ingestionTimeParameters);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DmsOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DmsOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DmsOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.DmsOptions.prototype.getPartialClassMetadata = function() {\n  return {arrays:{dmsAttributes:module$exports$eeapiclient$ee_api_client.DmsAttribute}, keys:[\"attributes\", \"dmsAttributes\", \"ingestionTimeParameters\"], objects:{ingestionTimeParameters:module$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DmsOptions.prototype, {attributes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"attributes\") ? this.Serializable$get(\"attributes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"attributes\", value);\n}}, dmsAttributes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsAttributes\") ? this.Serializable$get(\"dmsAttributes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsAttributes\", value);\n}}, ingestionTimeParameters:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"ingestionTimeParameters\") ? this.Serializable$get(\"ingestionTimeParameters\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"ingestionTimeParameters\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DoubleRangeParameters = function module$contents$eeapiclient$ee_api_client_DoubleRangeParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DoubleRange = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"min\", null == parameters.min ? null : parameters.min);\n  this.Serializable$set(\"max\", null == parameters.max ? null : parameters.max);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DoubleRange, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DoubleRange.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DoubleRange;\n};\nmodule$exports$eeapiclient$ee_api_client.DoubleRange.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"max\", \"min\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DoubleRange.prototype, {max:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"max\") ? this.Serializable$get(\"max\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"max\", value);\n}}, min:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"min\") ? this.Serializable$get(\"min\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"min\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.DriveDestinationParameters = function module$contents$eeapiclient$ee_api_client_DriveDestinationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.DriveDestination = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"folder\", null == parameters.folder ? null : parameters.folder);\n  this.Serializable$set(\"filenamePrefix\", null == parameters.filenamePrefix ? null : parameters.filenamePrefix);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.DriveDestination, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.DriveDestination.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.DriveDestination;\n};\nmodule$exports$eeapiclient$ee_api_client.DriveDestination.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"filenamePrefix\", \"folder\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.DriveDestination.prototype, {filenamePrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"filenamePrefix\") ? this.Serializable$get(\"filenamePrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"filenamePrefix\", value);\n}}, folder:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"folder\") ? this.Serializable$get(\"folder\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"folder\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.EarthEngineAssetParameters = function module$contents$eeapiclient$ee_api_client_EarthEngineAssetParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineAsset = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"tilestoreLocation\", null == parameters.tilestoreLocation ? null : parameters.tilestoreLocation);\n  this.Serializable$set(\"cloudStorageLocation\", null == parameters.cloudStorageLocation ? null : parameters.cloudStorageLocation);\n  this.Serializable$set(\"tilestoreEntry\", null == parameters.tilestoreEntry ? null : parameters.tilestoreEntry);\n  this.Serializable$set(\"gcsLocation\", null == parameters.gcsLocation ? null : parameters.gcsLocation);\n  this.Serializable$set(\"featureViewAssetLocation\", null == parameters.featureViewAssetLocation ? null : parameters.featureViewAssetLocation);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"id\", null == parameters.id ? null : parameters.id);\n  this.Serializable$set(\"updateTime\", null == parameters.updateTime ? null : parameters.updateTime);\n  this.Serializable$set(\"title\", null == parameters.title ? null : parameters.title);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"properties\", null == parameters.properties ? null : parameters.properties);\n  this.Serializable$set(\"startTime\", null == parameters.startTime ? null : parameters.startTime);\n  this.Serializable$set(\"endTime\", null == parameters.endTime ? null : parameters.endTime);\n  this.Serializable$set(\"geometry\", null == parameters.geometry ? null : parameters.geometry);\n  this.Serializable$set(\"bands\", null == parameters.bands ? null : parameters.bands);\n  this.Serializable$set(\"sizeBytes\", null == parameters.sizeBytes ? null : parameters.sizeBytes);\n  this.Serializable$set(\"featureCount\", null == parameters.featureCount ? null : parameters.featureCount);\n  this.Serializable$set(\"quota\", null == parameters.quota ? null : parameters.quota);\n  this.Serializable$set(\"dmsAssetLocation\", null == parameters.dmsAssetLocation ? null : parameters.dmsAssetLocation);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.EarthEngineAsset, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.EarthEngineAsset.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.EarthEngineAsset;\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineAsset.prototype.getPartialClassMetadata = function() {\n  return {arrays:{bands:module$exports$eeapiclient$ee_api_client.ImageBand}, enums:{type:module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum}, keys:\"bands cloudStorageLocation description dmsAssetLocation endTime expression featureCount featureViewAssetLocation gcsLocation geometry id name properties quota sizeBytes startTime tilestoreEntry tilestoreLocation title type updateTime\".split(\" \"), objectMaps:{geometry:{ctor:null, \n  isPropertyArray:!1, isSerializable:!1, isValueArray:!1}, properties:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}, objects:{cloudStorageLocation:module$exports$eeapiclient$ee_api_client.CloudStorageLocation, dmsAssetLocation:module$exports$eeapiclient$ee_api_client.DmsLocation, expression:module$exports$eeapiclient$ee_api_client.Expression, featureViewAssetLocation:module$exports$eeapiclient$ee_api_client.FeatureViewLocation, \n  gcsLocation:module$exports$eeapiclient$ee_api_client.GcsLocation, quota:module$exports$eeapiclient$ee_api_client.FolderQuota, tilestoreEntry:module$exports$eeapiclient$ee_api_client.TilestoreEntry, tilestoreLocation:module$exports$eeapiclient$ee_api_client.TilestoreLocation}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.EarthEngineAsset.prototype, {bands:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bands\") ? this.Serializable$get(\"bands\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bands\", value);\n}}, cloudStorageLocation:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"cloudStorageLocation\") ? this.Serializable$get(\"cloudStorageLocation\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"cloudStorageLocation\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, dmsAssetLocation:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsAssetLocation\") ? this.Serializable$get(\"dmsAssetLocation\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsAssetLocation\", value);\n}}, endTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"endTime\") ? this.Serializable$get(\"endTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"endTime\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, featureCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"featureCount\") ? this.Serializable$get(\"featureCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"featureCount\", value);\n}}, featureViewAssetLocation:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"featureViewAssetLocation\") ? this.Serializable$get(\"featureViewAssetLocation\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"featureViewAssetLocation\", value);\n}}, gcsLocation:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"gcsLocation\") ? this.Serializable$get(\"gcsLocation\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"gcsLocation\", value);\n}}, geometry:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"geometry\") ? this.Serializable$get(\"geometry\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"geometry\", value);\n}}, id:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"id\") ? this.Serializable$get(\"id\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"id\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, properties:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"properties\") ? this.Serializable$get(\"properties\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"properties\", value);\n}}, quota:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"quota\") ? this.Serializable$get(\"quota\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"quota\", value);\n}}, sizeBytes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sizeBytes\") ? this.Serializable$get(\"sizeBytes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sizeBytes\", value);\n}}, startTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"startTime\") ? this.Serializable$get(\"startTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"startTime\", value);\n}}, tilestoreEntry:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilestoreEntry\") ? this.Serializable$get(\"tilestoreEntry\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilestoreEntry\", value);\n}}, tilestoreLocation:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilestoreLocation\") ? this.Serializable$get(\"tilestoreLocation\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilestoreLocation\", value);\n}}, title:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"title\") ? this.Serializable$get(\"title\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"title\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}, updateTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"updateTime\") ? this.Serializable$get(\"updateTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"updateTime\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.EarthEngineAsset, {Type:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.EarthEngineAssetTypeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.EarthEngineDestinationParameters = function module$contents$eeapiclient$ee_api_client_EarthEngineDestinationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineDestination = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.EarthEngineDestination, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.EarthEngineDestination.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.EarthEngineDestination;\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineDestination.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"name\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.EarthEngineDestination.prototype, {name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.EarthEngineMapParameters = function module$contents$eeapiclient$ee_api_client_EarthEngineMapParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineMap = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"bandIds\", null == parameters.bandIds ? null : parameters.bandIds);\n  this.Serializable$set(\"visualizationOptions\", null == parameters.visualizationOptions ? null : parameters.visualizationOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.EarthEngineMap, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.EarthEngineMap.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.EarthEngineMap;\n};\nmodule$exports$eeapiclient$ee_api_client.EarthEngineMap.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum}, keys:[\"bandIds\", \"expression\", \"fileFormat\", \"name\", \"visualizationOptions\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, visualizationOptions:module$exports$eeapiclient$ee_api_client.VisualizationOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.EarthEngineMap.prototype, {bandIds:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandIds\") ? this.Serializable$get(\"bandIds\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandIds\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, visualizationOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationOptions\") ? this.Serializable$get(\"visualizationOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.EarthEngineMap, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.EarthEngineMapFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.EmptyParameters = function module$contents$eeapiclient$ee_api_client_EmptyParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Empty = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Empty, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Empty.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Empty;\n};\nmodule$exports$eeapiclient$ee_api_client.Empty.prototype.getPartialClassMetadata = function() {\n  return {keys:[]};\n};\nmodule$exports$eeapiclient$ee_api_client.ExportClassifierRequestParameters = function module$contents$eeapiclient$ee_api_client_ExportClassifierRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportClassifierRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n  this.Serializable$set(\"assetExportOptions\", null == parameters.assetExportOptions ? null : parameters.assetExportOptions);\n  this.Serializable$set(\"maxWorkers\", null == parameters.maxWorkers ? null : parameters.maxWorkers);\n  this.Serializable$set(\"maxWorkerCount\", null == parameters.maxWorkerCount ? null : parameters.maxWorkerCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ExportClassifierRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ExportClassifierRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ExportClassifierRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ExportClassifierRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:\"assetExportOptions description expression maxWorkerCount maxWorkers requestId\".split(\" \"), objects:{assetExportOptions:module$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions, expression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportClassifierRequest.prototype, {assetExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetExportOptions\") ? this.Serializable$get(\"assetExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetExportOptions\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, maxWorkerCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkerCount\") ? this.Serializable$get(\"maxWorkerCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkerCount\", value);\n}}, maxWorkers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkers\") ? this.Serializable$get(\"maxWorkers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkers\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExportImageRequestParameters = function module$contents$eeapiclient$ee_api_client_ExportImageRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportImageRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"fileExportOptions\", null == parameters.fileExportOptions ? null : parameters.fileExportOptions);\n  this.Serializable$set(\"assetExportOptions\", null == parameters.assetExportOptions ? null : parameters.assetExportOptions);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"maxPixels\", null == parameters.maxPixels ? null : parameters.maxPixels);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n  this.Serializable$set(\"maxWorkers\", null == parameters.maxWorkers ? null : parameters.maxWorkers);\n  this.Serializable$set(\"maxWorkerCount\", null == parameters.maxWorkerCount ? null : parameters.maxWorkerCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ExportImageRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ExportImageRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ExportImageRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ExportImageRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:\"assetExportOptions description expression fileExportOptions grid maxPixels maxWorkerCount maxWorkers requestId\".split(\" \"), objects:{assetExportOptions:module$exports$eeapiclient$ee_api_client.ImageAssetExportOptions, expression:module$exports$eeapiclient$ee_api_client.Expression, fileExportOptions:module$exports$eeapiclient$ee_api_client.ImageFileExportOptions, grid:module$exports$eeapiclient$ee_api_client.PixelGrid}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportImageRequest.prototype, {assetExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetExportOptions\") ? this.Serializable$get(\"assetExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetExportOptions\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileExportOptions\") ? this.Serializable$get(\"fileExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileExportOptions\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, maxPixels:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxPixels\") ? this.Serializable$get(\"maxPixels\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxPixels\", value);\n}}, maxWorkerCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkerCount\") ? this.Serializable$get(\"maxWorkerCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkerCount\", value);\n}}, maxWorkers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkers\") ? this.Serializable$get(\"maxWorkers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkers\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExportMapRequestParameters = function module$contents$eeapiclient$ee_api_client_ExportMapRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportMapRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"tileOptions\", null == parameters.tileOptions ? null : parameters.tileOptions);\n  this.Serializable$set(\"tileExportOptions\", null == parameters.tileExportOptions ? null : parameters.tileExportOptions);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n  this.Serializable$set(\"maxWorkers\", null == parameters.maxWorkers ? null : parameters.maxWorkers);\n  this.Serializable$set(\"maxWorkerCount\", null == parameters.maxWorkerCount ? null : parameters.maxWorkerCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ExportMapRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ExportMapRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ExportMapRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ExportMapRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:\"description expression maxWorkerCount maxWorkers requestId tileExportOptions tileOptions\".split(\" \"), objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, tileExportOptions:module$exports$eeapiclient$ee_api_client.ImageFileExportOptions, tileOptions:module$exports$eeapiclient$ee_api_client.TileOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportMapRequest.prototype, {description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, maxWorkerCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkerCount\") ? this.Serializable$get(\"maxWorkerCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkerCount\", value);\n}}, maxWorkers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkers\") ? this.Serializable$get(\"maxWorkers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkers\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}, tileExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileExportOptions\") ? this.Serializable$get(\"tileExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileExportOptions\", value);\n}}, tileOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileOptions\") ? this.Serializable$get(\"tileOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileOptions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExportTableRequestParameters = function module$contents$eeapiclient$ee_api_client_ExportTableRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportTableRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"fileExportOptions\", null == parameters.fileExportOptions ? null : parameters.fileExportOptions);\n  this.Serializable$set(\"assetExportOptions\", null == parameters.assetExportOptions ? null : parameters.assetExportOptions);\n  this.Serializable$set(\"dmsExportOptions\", null == parameters.dmsExportOptions ? null : parameters.dmsExportOptions);\n  this.Serializable$set(\"featureViewExportOptions\", null == parameters.featureViewExportOptions ? null : parameters.featureViewExportOptions);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"selectors\", null == parameters.selectors ? null : parameters.selectors);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n  this.Serializable$set(\"maxErrorMeters\", null == parameters.maxErrorMeters ? null : parameters.maxErrorMeters);\n  this.Serializable$set(\"maxWorkers\", null == parameters.maxWorkers ? null : parameters.maxWorkers);\n  this.Serializable$set(\"maxWorkerCount\", null == parameters.maxWorkerCount ? null : parameters.maxWorkerCount);\n  this.Serializable$set(\"maxVertices\", null == parameters.maxVertices ? null : parameters.maxVertices);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ExportTableRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ExportTableRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ExportTableRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ExportTableRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:\"assetExportOptions description dmsExportOptions expression featureViewExportOptions fileExportOptions maxErrorMeters maxVertices maxWorkerCount maxWorkers requestId selectors\".split(\" \"), objects:{assetExportOptions:module$exports$eeapiclient$ee_api_client.TableAssetExportOptions, dmsExportOptions:module$exports$eeapiclient$ee_api_client.DmsAssetExportOptions, expression:module$exports$eeapiclient$ee_api_client.Expression, \n  featureViewExportOptions:module$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions, fileExportOptions:module$exports$eeapiclient$ee_api_client.TableFileExportOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportTableRequest.prototype, {assetExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetExportOptions\") ? this.Serializable$get(\"assetExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetExportOptions\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, dmsExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dmsExportOptions\") ? this.Serializable$get(\"dmsExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dmsExportOptions\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, featureViewExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"featureViewExportOptions\") ? this.Serializable$get(\"featureViewExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"featureViewExportOptions\", value);\n}}, fileExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileExportOptions\") ? this.Serializable$get(\"fileExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileExportOptions\", value);\n}}, maxErrorMeters:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxErrorMeters\") ? this.Serializable$get(\"maxErrorMeters\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxErrorMeters\", value);\n}}, maxVertices:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxVertices\") ? this.Serializable$get(\"maxVertices\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxVertices\", value);\n}}, maxWorkerCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkerCount\") ? this.Serializable$get(\"maxWorkerCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkerCount\", value);\n}}, maxWorkers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkers\") ? this.Serializable$get(\"maxWorkers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkers\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}, selectors:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"selectors\") ? this.Serializable$get(\"selectors\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"selectors\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExportVideoMapRequestParameters = function module$contents$eeapiclient$ee_api_client_ExportVideoMapRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportVideoMapRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"videoOptions\", null == parameters.videoOptions ? null : parameters.videoOptions);\n  this.Serializable$set(\"tileOptions\", null == parameters.tileOptions ? null : parameters.tileOptions);\n  this.Serializable$set(\"tileExportOptions\", null == parameters.tileExportOptions ? null : parameters.tileExportOptions);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n  this.Serializable$set(\"version\", null == parameters.version ? null : parameters.version);\n  this.Serializable$set(\"maxWorkers\", null == parameters.maxWorkers ? null : parameters.maxWorkers);\n  this.Serializable$set(\"maxWorkerCount\", null == parameters.maxWorkerCount ? null : parameters.maxWorkerCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ExportVideoMapRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ExportVideoMapRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ExportVideoMapRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ExportVideoMapRequest.prototype.getPartialClassMetadata = function() {\n  return {enums:{version:module$exports$eeapiclient$ee_api_client.ExportVideoMapRequestVersionEnum}, keys:\"description expression maxWorkerCount maxWorkers requestId tileExportOptions tileOptions version videoOptions\".split(\" \"), objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, tileExportOptions:module$exports$eeapiclient$ee_api_client.VideoFileExportOptions, tileOptions:module$exports$eeapiclient$ee_api_client.TileOptions, \n  videoOptions:module$exports$eeapiclient$ee_api_client.VideoOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportVideoMapRequest.prototype, {description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, maxWorkerCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkerCount\") ? this.Serializable$get(\"maxWorkerCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkerCount\", value);\n}}, maxWorkers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkers\") ? this.Serializable$get(\"maxWorkers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkers\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}, tileExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileExportOptions\") ? this.Serializable$get(\"tileExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileExportOptions\", value);\n}}, tileOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileOptions\") ? this.Serializable$get(\"tileOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileOptions\", value);\n}}, version:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"version\") ? this.Serializable$get(\"version\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"version\", value);\n}}, videoOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"videoOptions\") ? this.Serializable$get(\"videoOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"videoOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportVideoMapRequest, {Version:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ExportVideoMapRequestVersionEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExportVideoRequestParameters = function module$contents$eeapiclient$ee_api_client_ExportVideoRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ExportVideoRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"videoOptions\", null == parameters.videoOptions ? null : parameters.videoOptions);\n  this.Serializable$set(\"fileExportOptions\", null == parameters.fileExportOptions ? null : parameters.fileExportOptions);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n  this.Serializable$set(\"maxWorkers\", null == parameters.maxWorkers ? null : parameters.maxWorkers);\n  this.Serializable$set(\"maxWorkerCount\", null == parameters.maxWorkerCount ? null : parameters.maxWorkerCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ExportVideoRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ExportVideoRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ExportVideoRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ExportVideoRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:\"description expression fileExportOptions maxWorkerCount maxWorkers requestId videoOptions\".split(\" \"), objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, fileExportOptions:module$exports$eeapiclient$ee_api_client.VideoFileExportOptions, videoOptions:module$exports$eeapiclient$ee_api_client.VideoOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ExportVideoRequest.prototype, {description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileExportOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileExportOptions\") ? this.Serializable$get(\"fileExportOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileExportOptions\", value);\n}}, maxWorkerCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkerCount\") ? this.Serializable$get(\"maxWorkerCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkerCount\", value);\n}}, maxWorkers:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxWorkers\") ? this.Serializable$get(\"maxWorkers\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxWorkers\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}, videoOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"videoOptions\") ? this.Serializable$get(\"videoOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"videoOptions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExprParameters = function module$contents$eeapiclient$ee_api_client_ExprParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Expr = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"title\", null == parameters.title ? null : parameters.title);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"location\", null == parameters.location ? null : parameters.location);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Expr, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Expr.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Expr;\n};\nmodule$exports$eeapiclient$ee_api_client.Expr.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"description\", \"expression\", \"location\", \"title\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Expr.prototype, {description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, location:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"location\") ? this.Serializable$get(\"location\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"location\", value);\n}}, title:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"title\") ? this.Serializable$get(\"title\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"title\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ExpressionParameters = function module$contents$eeapiclient$ee_api_client_ExpressionParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Expression = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"values\", null == parameters.values ? null : parameters.values);\n  this.Serializable$set(\"result\", null == parameters.result ? null : parameters.result);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Expression, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Expression.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Expression;\n};\nmodule$exports$eeapiclient$ee_api_client.Expression.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"result\", \"values\"], objectMaps:{values:{ctor:module$exports$eeapiclient$ee_api_client.ValueNode, isPropertyArray:!1, isSerializable:!0, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Expression.prototype, {result:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"result\") ? this.Serializable$get(\"result\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"result\", value);\n}}, values:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"values\") ? this.Serializable$get(\"values\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"values\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureParameters = function module$contents$eeapiclient$ee_api_client_FeatureParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Feature = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n  this.Serializable$set(\"geometry\", null == parameters.geometry ? null : parameters.geometry);\n  this.Serializable$set(\"properties\", null == parameters.properties ? null : parameters.properties);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Feature, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Feature.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Feature;\n};\nmodule$exports$eeapiclient$ee_api_client.Feature.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"geometry\", \"properties\", \"type\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Feature.prototype, {geometry:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"geometry\") ? this.Serializable$get(\"geometry\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"geometry\", value);\n}}, properties:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"properties\") ? this.Serializable$get(\"properties\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"properties\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureView = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"asset\", null == parameters.asset ? null : parameters.asset);\n  this.Serializable$set(\"mapName\", null == parameters.mapName ? null : parameters.mapName);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"visualizationExpression\", null == parameters.visualizationExpression ? null : parameters.visualizationExpression);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureView, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureView.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureView;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureView.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"asset\", \"mapName\", \"name\", \"visualizationExpression\"], objects:{visualizationExpression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureView.prototype, {asset:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"asset\") ? this.Serializable$get(\"asset\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"asset\", value);\n}}, mapName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"mapName\") ? this.Serializable$get(\"mapName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"mapName\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, visualizationExpression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationExpression\") ? this.Serializable$get(\"visualizationExpression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationExpression\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewAssetExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"featureViewDestination\", null == parameters.featureViewDestination ? null : parameters.featureViewDestination);\n  this.Serializable$set(\"ingestionTimeParameters\", null == parameters.ingestionTimeParameters ? null : parameters.ingestionTimeParameters);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"featureViewDestination\", \"ingestionTimeParameters\"], objects:{featureViewDestination:module$exports$eeapiclient$ee_api_client.FeatureViewDestination, ingestionTimeParameters:module$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewAssetExportOptions.prototype, {featureViewDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"featureViewDestination\") ? this.Serializable$get(\"featureViewDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"featureViewDestination\", value);\n}}, ingestionTimeParameters:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"ingestionTimeParameters\") ? this.Serializable$get(\"ingestionTimeParameters\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"ingestionTimeParameters\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAttributeParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewAttributeParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAttribute = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureViewAttribute, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAttribute.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewAttribute;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewAttribute.prototype.getPartialClassMetadata = function() {\n  return {enums:{type:module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum}, keys:[\"name\", \"type\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewAttribute.prototype, {name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewAttribute, {Type:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewAttributeTypeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewDestinationParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewDestinationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewDestination = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"assetVersion\", null == parameters.assetVersion ? null : parameters.assetVersion);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureViewDestination, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureViewDestination.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewDestination;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewDestination.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"assetVersion\", \"name\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewDestination.prototype, {assetVersion:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetVersion\") ? this.Serializable$get(\"assetVersion\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetVersion\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParametersParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewIngestionTimeParametersParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"thinningOptions\", null == parameters.thinningOptions ? null : parameters.thinningOptions);\n  this.Serializable$set(\"rankingOptions\", null == parameters.rankingOptions ? null : parameters.rankingOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"rankingOptions\", \"thinningOptions\"], objects:{rankingOptions:module$exports$eeapiclient$ee_api_client.RankingOptions, thinningOptions:module$exports$eeapiclient$ee_api_client.ThinningOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters.prototype, {rankingOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankingOptions\") ? this.Serializable$get(\"rankingOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankingOptions\", value);\n}}, thinningOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"thinningOptions\") ? this.Serializable$get(\"thinningOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"thinningOptions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewLocationParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewLocationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewLocation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"location\", null == parameters.location ? null : parameters.location);\n  this.Serializable$set(\"assetOptions\", null == parameters.assetOptions ? null : parameters.assetOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureViewLocation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureViewLocation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewLocation;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewLocation.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"assetOptions\", \"location\"], objects:{assetOptions:module$exports$eeapiclient$ee_api_client.FeatureViewOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewLocation.prototype, {assetOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetOptions\") ? this.Serializable$get(\"assetOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetOptions\", value);\n}}, location:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"location\") ? this.Serializable$get(\"location\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"location\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FeatureViewOptionsParameters = function module$contents$eeapiclient$ee_api_client_FeatureViewOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"featureViewAttributes\", null == parameters.featureViewAttributes ? null : parameters.featureViewAttributes);\n  this.Serializable$set(\"ingestionTimeParameters\", null == parameters.ingestionTimeParameters ? null : parameters.ingestionTimeParameters);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FeatureViewOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FeatureViewOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FeatureViewOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.FeatureViewOptions.prototype.getPartialClassMetadata = function() {\n  return {arrays:{featureViewAttributes:module$exports$eeapiclient$ee_api_client.FeatureViewAttribute}, keys:[\"featureViewAttributes\", \"ingestionTimeParameters\"], objects:{ingestionTimeParameters:module$exports$eeapiclient$ee_api_client.FeatureViewIngestionTimeParameters}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FeatureViewOptions.prototype, {featureViewAttributes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"featureViewAttributes\") ? this.Serializable$get(\"featureViewAttributes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"featureViewAttributes\", value);\n}}, ingestionTimeParameters:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"ingestionTimeParameters\") ? this.Serializable$get(\"ingestionTimeParameters\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"ingestionTimeParameters\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FilmstripThumbnailParameters = function module$contents$eeapiclient$ee_api_client_FilmstripThumbnailParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FilmstripThumbnail = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"orientation\", null == parameters.orientation ? null : parameters.orientation);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FilmstripThumbnail, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FilmstripThumbnail.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FilmstripThumbnail;\n};\nmodule$exports$eeapiclient$ee_api_client.FilmstripThumbnail.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum, orientation:module$exports$eeapiclient$ee_api_client.FilmstripThumbnailOrientationEnum}, keys:[\"expression\", \"fileFormat\", \"grid\", \"name\", \"orientation\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, grid:module$exports$eeapiclient$ee_api_client.PixelGrid}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FilmstripThumbnail.prototype, {expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, orientation:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"orientation\") ? this.Serializable$get(\"orientation\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"orientation\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FilmstripThumbnail, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.FilmstripThumbnailFileFormatEnum;\n}}, Orientation:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.FilmstripThumbnailOrientationEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.FolderQuotaParameters = function module$contents$eeapiclient$ee_api_client_FolderQuotaParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FolderQuota = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"sizeBytes\", null == parameters.sizeBytes ? null : parameters.sizeBytes);\n  this.Serializable$set(\"maxSizeBytes\", null == parameters.maxSizeBytes ? null : parameters.maxSizeBytes);\n  this.Serializable$set(\"assetCount\", null == parameters.assetCount ? null : parameters.assetCount);\n  this.Serializable$set(\"maxAssets\", null == parameters.maxAssets ? null : parameters.maxAssets);\n  this.Serializable$set(\"maxAssetCount\", null == parameters.maxAssetCount ? null : parameters.maxAssetCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FolderQuota, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FolderQuota.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FolderQuota;\n};\nmodule$exports$eeapiclient$ee_api_client.FolderQuota.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"assetCount\", \"maxAssetCount\", \"maxAssets\", \"maxSizeBytes\", \"sizeBytes\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FolderQuota.prototype, {assetCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assetCount\") ? this.Serializable$get(\"assetCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assetCount\", value);\n}}, maxAssetCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxAssetCount\") ? this.Serializable$get(\"maxAssetCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxAssetCount\", value);\n}}, maxAssets:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxAssets\") ? this.Serializable$get(\"maxAssets\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxAssets\", value);\n}}, maxSizeBytes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxSizeBytes\") ? this.Serializable$get(\"maxSizeBytes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxSizeBytes\", value);\n}}, sizeBytes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sizeBytes\") ? this.Serializable$get(\"sizeBytes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sizeBytes\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FunctionDefinitionParameters = function module$contents$eeapiclient$ee_api_client_FunctionDefinitionParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FunctionDefinition = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"argumentNames\", null == parameters.argumentNames ? null : parameters.argumentNames);\n  this.Serializable$set(\"body\", null == parameters.body ? null : parameters.body);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FunctionDefinition, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FunctionDefinition.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FunctionDefinition;\n};\nmodule$exports$eeapiclient$ee_api_client.FunctionDefinition.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"argumentNames\", \"body\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FunctionDefinition.prototype, {argumentNames:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"argumentNames\") ? this.Serializable$get(\"argumentNames\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"argumentNames\", value);\n}}, body:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"body\") ? this.Serializable$get(\"body\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"body\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.FunctionInvocationParameters = function module$contents$eeapiclient$ee_api_client_FunctionInvocationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.FunctionInvocation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"functionName\", null == parameters.functionName ? null : parameters.functionName);\n  this.Serializable$set(\"functionReference\", null == parameters.functionReference ? null : parameters.functionReference);\n  this.Serializable$set(\"arguments\", null == parameters.arguments ? null : parameters.arguments);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.FunctionInvocation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.FunctionInvocation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.FunctionInvocation;\n};\nmodule$exports$eeapiclient$ee_api_client.FunctionInvocation.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"arguments\", \"functionName\", \"functionReference\"], objectMaps:{arguments:{ctor:module$exports$eeapiclient$ee_api_client.ValueNode, isPropertyArray:!1, isSerializable:!0, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.FunctionInvocation.prototype, {arguments:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"arguments\") ? this.Serializable$get(\"arguments\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"arguments\", value);\n}}, functionName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"functionName\") ? this.Serializable$get(\"functionName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"functionName\", value);\n}}, functionReference:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"functionReference\") ? this.Serializable$get(\"functionReference\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"functionReference\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.GcsDestinationParameters = function module$contents$eeapiclient$ee_api_client_GcsDestinationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GcsDestination = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"bucket\", null == parameters.bucket ? null : parameters.bucket);\n  this.Serializable$set(\"filenamePrefix\", null == parameters.filenamePrefix ? null : parameters.filenamePrefix);\n  this.Serializable$set(\"permissions\", null == parameters.permissions ? null : parameters.permissions);\n  this.Serializable$set(\"bucketCorsUris\", null == parameters.bucketCorsUris ? null : parameters.bucketCorsUris);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GcsDestination, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GcsDestination.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GcsDestination;\n};\nmodule$exports$eeapiclient$ee_api_client.GcsDestination.prototype.getPartialClassMetadata = function() {\n  return {enums:{permissions:module$exports$eeapiclient$ee_api_client.GcsDestinationPermissionsEnum}, keys:[\"bucket\", \"bucketCorsUris\", \"filenamePrefix\", \"permissions\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GcsDestination.prototype, {bucket:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bucket\") ? this.Serializable$get(\"bucket\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bucket\", value);\n}}, bucketCorsUris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bucketCorsUris\") ? this.Serializable$get(\"bucketCorsUris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bucketCorsUris\", value);\n}}, filenamePrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"filenamePrefix\") ? this.Serializable$get(\"filenamePrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"filenamePrefix\", value);\n}}, permissions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"permissions\") ? this.Serializable$get(\"permissions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"permissions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GcsDestination, {Permissions:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.GcsDestinationPermissionsEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.GcsLocationParameters = function module$contents$eeapiclient$ee_api_client_GcsLocationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GcsLocation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"uris\", null == parameters.uris ? null : parameters.uris);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GcsLocation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GcsLocation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GcsLocation;\n};\nmodule$exports$eeapiclient$ee_api_client.GcsLocation.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"uris\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GcsLocation.prototype, {uris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"uris\") ? this.Serializable$get(\"uris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"uris\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_GeoTiffImageExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"cloudOptimized\", null == parameters.cloudOptimized ? null : parameters.cloudOptimized);\n  this.Serializable$set(\"tileDimensions\", null == parameters.tileDimensions ? null : parameters.tileDimensions);\n  this.Serializable$set(\"skipEmptyFiles\", null == parameters.skipEmptyFiles ? null : parameters.skipEmptyFiles);\n  this.Serializable$set(\"tileSize\", null == parameters.tileSize ? null : parameters.tileSize);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"cloudOptimized\", \"skipEmptyFiles\", \"tileDimensions\", \"tileSize\"], objects:{tileDimensions:module$exports$eeapiclient$ee_api_client.GridDimensions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions.prototype, {cloudOptimized:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"cloudOptimized\") ? this.Serializable$get(\"cloudOptimized\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"cloudOptimized\", value);\n}}, skipEmptyFiles:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"skipEmptyFiles\") ? this.Serializable$get(\"skipEmptyFiles\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"skipEmptyFiles\", value);\n}}, tileDimensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileDimensions\") ? this.Serializable$get(\"tileDimensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileDimensions\", value);\n}}, tileSize:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileSize\") ? this.Serializable$get(\"tileSize\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileSize\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.GetIamPolicyRequestParameters = function module$contents$eeapiclient$ee_api_client_GetIamPolicyRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GetIamPolicyRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"options\", null == parameters.options ? null : parameters.options);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GetIamPolicyRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GetIamPolicyRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GetIamPolicyRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.GetIamPolicyRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"options\"], objects:{options:module$exports$eeapiclient$ee_api_client.GetPolicyOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GetIamPolicyRequest.prototype, {options:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"options\") ? this.Serializable$get(\"options\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"options\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.GetLinkedAssetRequestParameters = function module$contents$eeapiclient$ee_api_client_GetLinkedAssetRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GetLinkedAssetRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GetLinkedAssetRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GetLinkedAssetRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GetLinkedAssetRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.GetLinkedAssetRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[]};\n};\nmodule$exports$eeapiclient$ee_api_client.GetPixelsRequestParameters = function module$contents$eeapiclient$ee_api_client_GetPixelsRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GetPixelsRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n  this.Serializable$set(\"region\", null == parameters.region ? null : parameters.region);\n  this.Serializable$set(\"bandIds\", null == parameters.bandIds ? null : parameters.bandIds);\n  this.Serializable$set(\"visualizationOptions\", null == parameters.visualizationOptions ? null : parameters.visualizationOptions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GetPixelsRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GetPixelsRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GetPixelsRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.GetPixelsRequest.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum}, keys:[\"bandIds\", \"fileFormat\", \"grid\", \"region\", \"visualizationOptions\"], objectMaps:{region:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}, objects:{grid:module$exports$eeapiclient$ee_api_client.PixelGrid, visualizationOptions:module$exports$eeapiclient$ee_api_client.VisualizationOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GetPixelsRequest.prototype, {bandIds:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandIds\") ? this.Serializable$get(\"bandIds\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandIds\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, region:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"region\") ? this.Serializable$get(\"region\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"region\", value);\n}}, visualizationOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationOptions\") ? this.Serializable$get(\"visualizationOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GetPixelsRequest, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.GetPixelsRequestFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.GetPolicyOptionsParameters = function module$contents$eeapiclient$ee_api_client_GetPolicyOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GetPolicyOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"requestedPolicyVersion\", null == parameters.requestedPolicyVersion ? null : parameters.requestedPolicyVersion);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GetPolicyOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GetPolicyOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GetPolicyOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.GetPolicyOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"requestedPolicyVersion\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GetPolicyOptions.prototype, {requestedPolicyVersion:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestedPolicyVersion\") ? this.Serializable$get(\"requestedPolicyVersion\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestedPolicyVersion\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.GridDimensionsParameters = function module$contents$eeapiclient$ee_api_client_GridDimensionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GridDimensions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"width\", null == parameters.width ? null : parameters.width);\n  this.Serializable$set(\"height\", null == parameters.height ? null : parameters.height);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GridDimensions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GridDimensions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GridDimensions;\n};\nmodule$exports$eeapiclient$ee_api_client.GridDimensions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"height\", \"width\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GridDimensions.prototype, {height:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"height\") ? this.Serializable$get(\"height\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"height\", value);\n}}, width:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"width\") ? this.Serializable$get(\"width\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"width\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.GridPointParameters = function module$contents$eeapiclient$ee_api_client_GridPointParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.GridPoint = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"x\", null == parameters.x ? null : parameters.x);\n  this.Serializable$set(\"y\", null == parameters.y ? null : parameters.y);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.GridPoint, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.GridPoint.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.GridPoint;\n};\nmodule$exports$eeapiclient$ee_api_client.GridPoint.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"x\", \"y\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.GridPoint.prototype, {x:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"x\") ? this.Serializable$get(\"x\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"x\", value);\n}}, y:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"y\") ? this.Serializable$get(\"y\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"y\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.HttpBodyParameters = function module$contents$eeapiclient$ee_api_client_HttpBodyParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.HttpBody = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"contentType\", null == parameters.contentType ? null : parameters.contentType);\n  this.Serializable$set(\"data\", null == parameters.data ? null : parameters.data);\n  this.Serializable$set(\"extensions\", null == parameters.extensions ? null : parameters.extensions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.HttpBody, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.HttpBody.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.HttpBody;\n};\nmodule$exports$eeapiclient$ee_api_client.HttpBody.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"contentType\", \"data\", \"extensions\"], objectMaps:{extensions:{ctor:null, isPropertyArray:!0, isSerializable:!1, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.HttpBody.prototype, {contentType:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"contentType\") ? this.Serializable$get(\"contentType\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"contentType\", value);\n}}, data:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"data\") ? this.Serializable$get(\"data\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"data\", value);\n}}, extensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"extensions\") ? this.Serializable$get(\"extensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"extensions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImageParameters = function module$contents$eeapiclient$ee_api_client_ImageParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Image = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"id\", null == parameters.id ? null : parameters.id);\n  this.Serializable$set(\"updateTime\", null == parameters.updateTime ? null : parameters.updateTime);\n  this.Serializable$set(\"title\", null == parameters.title ? null : parameters.title);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"properties\", null == parameters.properties ? null : parameters.properties);\n  this.Serializable$set(\"startTime\", null == parameters.startTime ? null : parameters.startTime);\n  this.Serializable$set(\"endTime\", null == parameters.endTime ? null : parameters.endTime);\n  this.Serializable$set(\"geometry\", null == parameters.geometry ? null : parameters.geometry);\n  this.Serializable$set(\"bands\", null == parameters.bands ? null : parameters.bands);\n  this.Serializable$set(\"sizeBytes\", null == parameters.sizeBytes ? null : parameters.sizeBytes);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Image, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Image.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Image;\n};\nmodule$exports$eeapiclient$ee_api_client.Image.prototype.getPartialClassMetadata = function() {\n  return {arrays:{bands:module$exports$eeapiclient$ee_api_client.ImageBand}, keys:\"bands description endTime geometry id name properties sizeBytes startTime title updateTime\".split(\" \"), objectMaps:{geometry:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}, properties:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Image.prototype, {bands:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bands\") ? this.Serializable$get(\"bands\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bands\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, endTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"endTime\") ? this.Serializable$get(\"endTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"endTime\", value);\n}}, geometry:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"geometry\") ? this.Serializable$get(\"geometry\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"geometry\", value);\n}}, id:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"id\") ? this.Serializable$get(\"id\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"id\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, properties:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"properties\") ? this.Serializable$get(\"properties\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"properties\", value);\n}}, sizeBytes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sizeBytes\") ? this.Serializable$get(\"sizeBytes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sizeBytes\", value);\n}}, startTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"startTime\") ? this.Serializable$get(\"startTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"startTime\", value);\n}}, title:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"title\") ? this.Serializable$get(\"title\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"title\", value);\n}}, updateTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"updateTime\") ? this.Serializable$get(\"updateTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"updateTime\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_ImageAssetExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageAssetExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"earthEngineDestination\", null == parameters.earthEngineDestination ? null : parameters.earthEngineDestination);\n  this.Serializable$set(\"pyramidingPolicy\", null == parameters.pyramidingPolicy ? null : parameters.pyramidingPolicy);\n  this.Serializable$set(\"pyramidingPolicyOverrides\", null == parameters.pyramidingPolicyOverrides ? null : parameters.pyramidingPolicyOverrides);\n  this.Serializable$set(\"tileSize\", null == parameters.tileSize ? null : parameters.tileSize);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImageAssetExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImageAssetExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImageAssetExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.ImageAssetExportOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{pyramidingPolicy:module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum, pyramidingPolicyOverrides:module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum}, keys:[\"earthEngineDestination\", \"pyramidingPolicy\", \"pyramidingPolicyOverrides\", \"tileSize\"], objectMaps:{pyramidingPolicyOverrides:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}, \n  objects:{earthEngineDestination:module$exports$eeapiclient$ee_api_client.EarthEngineDestination}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageAssetExportOptions.prototype, {earthEngineDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"earthEngineDestination\") ? this.Serializable$get(\"earthEngineDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"earthEngineDestination\", value);\n}}, pyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pyramidingPolicy\") ? this.Serializable$get(\"pyramidingPolicy\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pyramidingPolicy\", value);\n}}, pyramidingPolicyOverrides:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pyramidingPolicyOverrides\") ? this.Serializable$get(\"pyramidingPolicyOverrides\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pyramidingPolicyOverrides\", value);\n}}, tileSize:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileSize\") ? this.Serializable$get(\"tileSize\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileSize\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageAssetExportOptions, {PyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyEnum;\n}}, PyramidingPolicyOverrides:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ImageAssetExportOptionsPyramidingPolicyOverridesEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImageBandParameters = function module$contents$eeapiclient$ee_api_client_ImageBandParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageBand = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"id\", null == parameters.id ? null : parameters.id);\n  this.Serializable$set(\"dataType\", null == parameters.dataType ? null : parameters.dataType);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n  this.Serializable$set(\"pyramidingPolicy\", null == parameters.pyramidingPolicy ? null : parameters.pyramidingPolicy);\n  this.Serializable$set(\"tilesets\", null == parameters.tilesets ? null : parameters.tilesets);\n  this.Serializable$set(\"missingData\", null == parameters.missingData ? null : parameters.missingData);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImageBand, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImageBand.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImageBand;\n};\nmodule$exports$eeapiclient$ee_api_client.ImageBand.prototype.getPartialClassMetadata = function() {\n  return {arrays:{tilesets:module$exports$eeapiclient$ee_api_client.TilestoreTileset}, enums:{pyramidingPolicy:module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum}, keys:\"dataType grid id missingData pyramidingPolicy tilesets\".split(\" \"), objects:{dataType:module$exports$eeapiclient$ee_api_client.PixelDataType, grid:module$exports$eeapiclient$ee_api_client.PixelGrid, \n  missingData:module$exports$eeapiclient$ee_api_client.MissingData}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageBand.prototype, {dataType:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dataType\") ? this.Serializable$get(\"dataType\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dataType\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, id:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"id\") ? this.Serializable$get(\"id\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"id\", value);\n}}, missingData:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"missingData\") ? this.Serializable$get(\"missingData\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"missingData\", value);\n}}, pyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pyramidingPolicy\") ? this.Serializable$get(\"pyramidingPolicy\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pyramidingPolicy\", value);\n}}, tilesets:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilesets\") ? this.Serializable$get(\"tilesets\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilesets\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageBand, {PyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ImageBandPyramidingPolicyEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImageFileExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_ImageFileExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageFileExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"driveDestination\", null == parameters.driveDestination ? null : parameters.driveDestination);\n  this.Serializable$set(\"cloudStorageDestination\", null == parameters.cloudStorageDestination ? null : parameters.cloudStorageDestination);\n  this.Serializable$set(\"gcsDestination\", null == parameters.gcsDestination ? null : parameters.gcsDestination);\n  this.Serializable$set(\"geoTiffOptions\", null == parameters.geoTiffOptions ? null : parameters.geoTiffOptions);\n  this.Serializable$set(\"tfRecordOptions\", null == parameters.tfRecordOptions ? null : parameters.tfRecordOptions);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImageFileExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImageFileExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImageFileExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.ImageFileExportOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum}, keys:\"cloudStorageDestination driveDestination fileFormat gcsDestination geoTiffOptions tfRecordOptions\".split(\" \"), objects:{cloudStorageDestination:module$exports$eeapiclient$ee_api_client.CloudStorageDestination, driveDestination:module$exports$eeapiclient$ee_api_client.DriveDestination, \n  gcsDestination:module$exports$eeapiclient$ee_api_client.GcsDestination, geoTiffOptions:module$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions, tfRecordOptions:module$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageFileExportOptions.prototype, {cloudStorageDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"cloudStorageDestination\") ? this.Serializable$get(\"cloudStorageDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"cloudStorageDestination\", value);\n}}, driveDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"driveDestination\") ? this.Serializable$get(\"driveDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"driveDestination\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, gcsDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"gcsDestination\") ? this.Serializable$get(\"gcsDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"gcsDestination\", value);\n}}, geoTiffOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"geoTiffOptions\") ? this.Serializable$get(\"geoTiffOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"geoTiffOptions\", value);\n}}, tfRecordOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tfRecordOptions\") ? this.Serializable$get(\"tfRecordOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tfRecordOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageFileExportOptions, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ImageFileExportOptionsFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImageManifestParameters = function module$contents$eeapiclient$ee_api_client_ImageManifestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageManifest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"properties\", null == parameters.properties ? null : parameters.properties);\n  this.Serializable$set(\"uriPrefix\", null == parameters.uriPrefix ? null : parameters.uriPrefix);\n  this.Serializable$set(\"tilesets\", null == parameters.tilesets ? null : parameters.tilesets);\n  this.Serializable$set(\"bands\", null == parameters.bands ? null : parameters.bands);\n  this.Serializable$set(\"maskBands\", null == parameters.maskBands ? null : parameters.maskBands);\n  this.Serializable$set(\"footprint\", null == parameters.footprint ? null : parameters.footprint);\n  this.Serializable$set(\"missingData\", null == parameters.missingData ? null : parameters.missingData);\n  this.Serializable$set(\"pyramidingPolicy\", null == parameters.pyramidingPolicy ? null : parameters.pyramidingPolicy);\n  this.Serializable$set(\"startTime\", null == parameters.startTime ? null : parameters.startTime);\n  this.Serializable$set(\"endTime\", null == parameters.endTime ? null : parameters.endTime);\n  this.Serializable$set(\"minTileAreaRatio\", null == parameters.minTileAreaRatio ? null : parameters.minTileAreaRatio);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImageManifest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImageManifest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImageManifest;\n};\nmodule$exports$eeapiclient$ee_api_client.ImageManifest.prototype.getPartialClassMetadata = function() {\n  return {arrays:{bands:module$exports$eeapiclient$ee_api_client.TilesetBand, maskBands:module$exports$eeapiclient$ee_api_client.TilesetMaskBand, tilesets:module$exports$eeapiclient$ee_api_client.Tileset}, enums:{pyramidingPolicy:module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum}, keys:\"bands endTime footprint maskBands minTileAreaRatio missingData name properties pyramidingPolicy startTime tilesets uriPrefix\".split(\" \"), \n  objectMaps:{properties:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}, objects:{footprint:module$exports$eeapiclient$ee_api_client.PixelFootprint, missingData:module$exports$eeapiclient$ee_api_client.MissingData}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageManifest.prototype, {bands:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bands\") ? this.Serializable$get(\"bands\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bands\", value);\n}}, endTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"endTime\") ? this.Serializable$get(\"endTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"endTime\", value);\n}}, footprint:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"footprint\") ? this.Serializable$get(\"footprint\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"footprint\", value);\n}}, maskBands:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maskBands\") ? this.Serializable$get(\"maskBands\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maskBands\", value);\n}}, minTileAreaRatio:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"minTileAreaRatio\") ? this.Serializable$get(\"minTileAreaRatio\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"minTileAreaRatio\", value);\n}}, missingData:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"missingData\") ? this.Serializable$get(\"missingData\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"missingData\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, properties:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"properties\") ? this.Serializable$get(\"properties\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"properties\", value);\n}}, pyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pyramidingPolicy\") ? this.Serializable$get(\"pyramidingPolicy\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pyramidingPolicy\", value);\n}}, startTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"startTime\") ? this.Serializable$get(\"startTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"startTime\", value);\n}}, tilesets:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilesets\") ? this.Serializable$get(\"tilesets\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilesets\", value);\n}}, uriPrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"uriPrefix\") ? this.Serializable$get(\"uriPrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"uriPrefix\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageManifest, {PyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ImageManifestPyramidingPolicyEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImageSourceParameters = function module$contents$eeapiclient$ee_api_client_ImageSourceParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImageSource = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"uris\", null == parameters.uris ? null : parameters.uris);\n  this.Serializable$set(\"affineTransform\", null == parameters.affineTransform ? null : parameters.affineTransform);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImageSource, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImageSource.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImageSource;\n};\nmodule$exports$eeapiclient$ee_api_client.ImageSource.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"affineTransform\", \"uris\"], objects:{affineTransform:module$exports$eeapiclient$ee_api_client.AffineTransform}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImageSource.prototype, {affineTransform:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"affineTransform\") ? this.Serializable$get(\"affineTransform\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"affineTransform\", value);\n}}, uris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"uris\") ? this.Serializable$get(\"uris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"uris\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImportImageRequestParameters = function module$contents$eeapiclient$ee_api_client_ImportImageRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImportImageRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"imageManifest\", null == parameters.imageManifest ? null : parameters.imageManifest);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"overwrite\", null == parameters.overwrite ? null : parameters.overwrite);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImportImageRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImportImageRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImportImageRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ImportImageRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"description\", \"imageManifest\", \"overwrite\", \"requestId\"], objects:{imageManifest:module$exports$eeapiclient$ee_api_client.ImageManifest}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImportImageRequest.prototype, {description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, imageManifest:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"imageManifest\") ? this.Serializable$get(\"imageManifest\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"imageManifest\", value);\n}}, overwrite:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"overwrite\") ? this.Serializable$get(\"overwrite\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"overwrite\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ImportTableRequestParameters = function module$contents$eeapiclient$ee_api_client_ImportTableRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ImportTableRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"tableManifest\", null == parameters.tableManifest ? null : parameters.tableManifest);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"overwrite\", null == parameters.overwrite ? null : parameters.overwrite);\n  this.Serializable$set(\"requestId\", null == parameters.requestId ? null : parameters.requestId);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ImportTableRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ImportTableRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ImportTableRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.ImportTableRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"description\", \"overwrite\", \"requestId\", \"tableManifest\"], objects:{tableManifest:module$exports$eeapiclient$ee_api_client.TableManifest}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ImportTableRequest.prototype, {description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, overwrite:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"overwrite\") ? this.Serializable$get(\"overwrite\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"overwrite\", value);\n}}, requestId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"requestId\") ? this.Serializable$get(\"requestId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"requestId\", value);\n}}, tableManifest:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tableManifest\") ? this.Serializable$get(\"tableManifest\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tableManifest\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.LinkAssetRequestParameters = function module$contents$eeapiclient$ee_api_client_LinkAssetRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.LinkAssetRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"destinationName\", null == parameters.destinationName ? null : parameters.destinationName);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.LinkAssetRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.LinkAssetRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.LinkAssetRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.LinkAssetRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"destinationName\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.LinkAssetRequest.prototype, {destinationName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"destinationName\") ? this.Serializable$get(\"destinationName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"destinationName\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ListAlgorithmsResponseParameters = function module$contents$eeapiclient$ee_api_client_ListAlgorithmsResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"algorithms\", null == parameters.algorithms ? null : parameters.algorithms);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{algorithms:module$exports$eeapiclient$ee_api_client.Algorithm}, keys:[\"algorithms\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse.prototype, {algorithms:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"algorithms\") ? this.Serializable$get(\"algorithms\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"algorithms\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ListAssetsResponseParameters = function module$contents$eeapiclient$ee_api_client_ListAssetsResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ListAssetsResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"assets\", null == parameters.assets ? null : parameters.assets);\n  this.Serializable$set(\"nextPageToken\", null == parameters.nextPageToken ? null : parameters.nextPageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ListAssetsResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ListAssetsResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ListAssetsResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ListAssetsResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{assets:module$exports$eeapiclient$ee_api_client.EarthEngineAsset}, keys:[\"assets\", \"nextPageToken\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ListAssetsResponse.prototype, {assets:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"assets\") ? this.Serializable$get(\"assets\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"assets\", value);\n}}, nextPageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"nextPageToken\") ? this.Serializable$get(\"nextPageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"nextPageToken\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ListFeaturesResponseParameters = function module$contents$eeapiclient$ee_api_client_ListFeaturesResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ListFeaturesResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n  this.Serializable$set(\"features\", null == parameters.features ? null : parameters.features);\n  this.Serializable$set(\"nextPageToken\", null == parameters.nextPageToken ? null : parameters.nextPageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ListFeaturesResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ListFeaturesResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ListFeaturesResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ListFeaturesResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{features:module$exports$eeapiclient$ee_api_client.Feature}, keys:[\"features\", \"nextPageToken\", \"type\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ListFeaturesResponse.prototype, {features:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"features\") ? this.Serializable$get(\"features\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"features\", value);\n}}, nextPageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"nextPageToken\") ? this.Serializable$get(\"nextPageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"nextPageToken\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ListImagesResponseParameters = function module$contents$eeapiclient$ee_api_client_ListImagesResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ListImagesResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"images\", null == parameters.images ? null : parameters.images);\n  this.Serializable$set(\"nextPageToken\", null == parameters.nextPageToken ? null : parameters.nextPageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ListImagesResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ListImagesResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ListImagesResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ListImagesResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{images:module$exports$eeapiclient$ee_api_client.Image}, keys:[\"images\", \"nextPageToken\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ListImagesResponse.prototype, {images:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"images\") ? this.Serializable$get(\"images\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"images\", value);\n}}, nextPageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"nextPageToken\") ? this.Serializable$get(\"nextPageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"nextPageToken\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ListOperationsResponseParameters = function module$contents$eeapiclient$ee_api_client_ListOperationsResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ListOperationsResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"operations\", null == parameters.operations ? null : parameters.operations);\n  this.Serializable$set(\"nextPageToken\", null == parameters.nextPageToken ? null : parameters.nextPageToken);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ListOperationsResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ListOperationsResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ListOperationsResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.ListOperationsResponse.prototype.getPartialClassMetadata = function() {\n  return {arrays:{operations:module$exports$eeapiclient$ee_api_client.Operation}, keys:[\"nextPageToken\", \"operations\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ListOperationsResponse.prototype, {nextPageToken:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"nextPageToken\") ? this.Serializable$get(\"nextPageToken\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"nextPageToken\", value);\n}}, operations:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"operations\") ? this.Serializable$get(\"operations\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"operations\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.LogConfigParameters = function module$contents$eeapiclient$ee_api_client_LogConfigParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.LogConfig = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"counter\", null == parameters.counter ? null : parameters.counter);\n  this.Serializable$set(\"dataAccess\", null == parameters.dataAccess ? null : parameters.dataAccess);\n  this.Serializable$set(\"cloudAudit\", null == parameters.cloudAudit ? null : parameters.cloudAudit);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.LogConfig, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.LogConfig.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.LogConfig;\n};\nmodule$exports$eeapiclient$ee_api_client.LogConfig.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"cloudAudit\", \"counter\", \"dataAccess\"], objects:{cloudAudit:module$exports$eeapiclient$ee_api_client.CloudAuditOptions, counter:module$exports$eeapiclient$ee_api_client.CounterOptions, dataAccess:module$exports$eeapiclient$ee_api_client.DataAccessOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.LogConfig.prototype, {cloudAudit:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"cloudAudit\") ? this.Serializable$get(\"cloudAudit\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"cloudAudit\", value);\n}}, counter:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"counter\") ? this.Serializable$get(\"counter\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"counter\", value);\n}}, dataAccess:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dataAccess\") ? this.Serializable$get(\"dataAccess\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dataAccess\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.MissingDataParameters = function module$contents$eeapiclient$ee_api_client_MissingDataParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.MissingData = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"values\", null == parameters.values ? null : parameters.values);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.MissingData, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.MissingData.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.MissingData;\n};\nmodule$exports$eeapiclient$ee_api_client.MissingData.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"values\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.MissingData.prototype, {values:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"values\") ? this.Serializable$get(\"values\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"values\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.MoveAssetRequestParameters = function module$contents$eeapiclient$ee_api_client_MoveAssetRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.MoveAssetRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"destinationName\", null == parameters.destinationName ? null : parameters.destinationName);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.MoveAssetRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.MoveAssetRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.MoveAssetRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.MoveAssetRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"destinationName\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.MoveAssetRequest.prototype, {destinationName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"destinationName\") ? this.Serializable$get(\"destinationName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"destinationName\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.OperationParameters = function module$contents$eeapiclient$ee_api_client_OperationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Operation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"metadata\", null == parameters.metadata ? null : parameters.metadata);\n  this.Serializable$set(\"done\", null == parameters.done ? null : parameters.done);\n  this.Serializable$set(\"error\", null == parameters.error ? null : parameters.error);\n  this.Serializable$set(\"response\", null == parameters.response ? null : parameters.response);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Operation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Operation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Operation;\n};\nmodule$exports$eeapiclient$ee_api_client.Operation.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"done\", \"error\", \"metadata\", \"name\", \"response\"], objectMaps:{metadata:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}, response:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}, objects:{error:module$exports$eeapiclient$ee_api_client.Status}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Operation.prototype, {done:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"done\") ? this.Serializable$get(\"done\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"done\", value);\n}}, error:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"error\") ? this.Serializable$get(\"error\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"error\", value);\n}}, metadata:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"metadata\") ? this.Serializable$get(\"metadata\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"metadata\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, response:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"response\") ? this.Serializable$get(\"response\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"response\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.OperationMetadataParameters = function module$contents$eeapiclient$ee_api_client_OperationMetadataParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.OperationMetadata = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"state\", null == parameters.state ? null : parameters.state);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"type\", null == parameters.type ? null : parameters.type);\n  this.Serializable$set(\"priority\", null == parameters.priority ? null : parameters.priority);\n  this.Serializable$set(\"createTime\", null == parameters.createTime ? null : parameters.createTime);\n  this.Serializable$set(\"updateTime\", null == parameters.updateTime ? null : parameters.updateTime);\n  this.Serializable$set(\"startTime\", null == parameters.startTime ? null : parameters.startTime);\n  this.Serializable$set(\"endTime\", null == parameters.endTime ? null : parameters.endTime);\n  this.Serializable$set(\"progress\", null == parameters.progress ? null : parameters.progress);\n  this.Serializable$set(\"stages\", null == parameters.stages ? null : parameters.stages);\n  this.Serializable$set(\"attempt\", null == parameters.attempt ? null : parameters.attempt);\n  this.Serializable$set(\"scriptUri\", null == parameters.scriptUri ? null : parameters.scriptUri);\n  this.Serializable$set(\"destinationUris\", null == parameters.destinationUris ? null : parameters.destinationUris);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.OperationMetadata, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.OperationMetadata.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.OperationMetadata;\n};\nmodule$exports$eeapiclient$ee_api_client.OperationMetadata.prototype.getPartialClassMetadata = function() {\n  return {arrays:{stages:module$exports$eeapiclient$ee_api_client.OperationStage}, enums:{state:module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum}, keys:\"attempt createTime description destinationUris endTime priority progress scriptUri stages startTime state type updateTime\".split(\" \")};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.OperationMetadata.prototype, {attempt:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"attempt\") ? this.Serializable$get(\"attempt\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"attempt\", value);\n}}, createTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"createTime\") ? this.Serializable$get(\"createTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"createTime\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, destinationUris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"destinationUris\") ? this.Serializable$get(\"destinationUris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"destinationUris\", value);\n}}, endTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"endTime\") ? this.Serializable$get(\"endTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"endTime\", value);\n}}, priority:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"priority\") ? this.Serializable$get(\"priority\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"priority\", value);\n}}, progress:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"progress\") ? this.Serializable$get(\"progress\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"progress\", value);\n}}, scriptUri:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"scriptUri\") ? this.Serializable$get(\"scriptUri\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"scriptUri\", value);\n}}, stages:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"stages\") ? this.Serializable$get(\"stages\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"stages\", value);\n}}, startTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"startTime\") ? this.Serializable$get(\"startTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"startTime\", value);\n}}, state:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"state\") ? this.Serializable$get(\"state\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"state\", value);\n}}, type:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"type\") ? this.Serializable$get(\"type\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"type\", value);\n}}, updateTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"updateTime\") ? this.Serializable$get(\"updateTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"updateTime\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.OperationMetadata, {State:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.OperationMetadataStateEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.OperationStageParameters = function module$contents$eeapiclient$ee_api_client_OperationStageParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.OperationStage = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"displayName\", null == parameters.displayName ? null : parameters.displayName);\n  this.Serializable$set(\"completeWorkUnits\", null == parameters.completeWorkUnits ? null : parameters.completeWorkUnits);\n  this.Serializable$set(\"totalWorkUnits\", null == parameters.totalWorkUnits ? null : parameters.totalWorkUnits);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.OperationStage, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.OperationStage.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.OperationStage;\n};\nmodule$exports$eeapiclient$ee_api_client.OperationStage.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"completeWorkUnits\", \"description\", \"displayName\", \"totalWorkUnits\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.OperationStage.prototype, {completeWorkUnits:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"completeWorkUnits\") ? this.Serializable$get(\"completeWorkUnits\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"completeWorkUnits\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, displayName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"displayName\") ? this.Serializable$get(\"displayName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"displayName\", value);\n}}, totalWorkUnits:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"totalWorkUnits\") ? this.Serializable$get(\"totalWorkUnits\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"totalWorkUnits\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.PixelDataTypeParameters = function module$contents$eeapiclient$ee_api_client_PixelDataTypeParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.PixelDataType = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"precision\", null == parameters.precision ? null : parameters.precision);\n  this.Serializable$set(\"range\", null == parameters.range ? null : parameters.range);\n  this.Serializable$set(\"dimensionsCount\", null == parameters.dimensionsCount ? null : parameters.dimensionsCount);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.PixelDataType, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.PixelDataType.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.PixelDataType;\n};\nmodule$exports$eeapiclient$ee_api_client.PixelDataType.prototype.getPartialClassMetadata = function() {\n  return {enums:{precision:module$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum}, keys:[\"dimensionsCount\", \"precision\", \"range\"], objects:{range:module$exports$eeapiclient$ee_api_client.DoubleRange}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.PixelDataType.prototype, {dimensionsCount:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dimensionsCount\") ? this.Serializable$get(\"dimensionsCount\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dimensionsCount\", value);\n}}, precision:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"precision\") ? this.Serializable$get(\"precision\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"precision\", value);\n}}, range:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"range\") ? this.Serializable$get(\"range\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"range\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.PixelDataType, {Precision:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.PixelDataTypePrecisionEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.PixelFootprintParameters = function module$contents$eeapiclient$ee_api_client_PixelFootprintParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.PixelFootprint = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"points\", null == parameters.points ? null : parameters.points);\n  this.Serializable$set(\"bandId\", null == parameters.bandId ? null : parameters.bandId);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.PixelFootprint, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.PixelFootprint.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.PixelFootprint;\n};\nmodule$exports$eeapiclient$ee_api_client.PixelFootprint.prototype.getPartialClassMetadata = function() {\n  return {arrays:{points:module$exports$eeapiclient$ee_api_client.GridPoint}, keys:[\"bandId\", \"points\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.PixelFootprint.prototype, {bandId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandId\") ? this.Serializable$get(\"bandId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandId\", value);\n}}, points:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"points\") ? this.Serializable$get(\"points\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"points\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.PixelGridParameters = function module$contents$eeapiclient$ee_api_client_PixelGridParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.PixelGrid = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"crsCode\", null == parameters.crsCode ? null : parameters.crsCode);\n  this.Serializable$set(\"crsWkt\", null == parameters.crsWkt ? null : parameters.crsWkt);\n  this.Serializable$set(\"dimensions\", null == parameters.dimensions ? null : parameters.dimensions);\n  this.Serializable$set(\"affineTransform\", null == parameters.affineTransform ? null : parameters.affineTransform);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.PixelGrid, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.PixelGrid.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.PixelGrid;\n};\nmodule$exports$eeapiclient$ee_api_client.PixelGrid.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"affineTransform\", \"crsCode\", \"crsWkt\", \"dimensions\"], objects:{affineTransform:module$exports$eeapiclient$ee_api_client.AffineTransform, dimensions:module$exports$eeapiclient$ee_api_client.GridDimensions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.PixelGrid.prototype, {affineTransform:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"affineTransform\") ? this.Serializable$get(\"affineTransform\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"affineTransform\", value);\n}}, crsCode:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"crsCode\") ? this.Serializable$get(\"crsCode\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"crsCode\", value);\n}}, crsWkt:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"crsWkt\") ? this.Serializable$get(\"crsWkt\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"crsWkt\", value);\n}}, dimensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dimensions\") ? this.Serializable$get(\"dimensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dimensions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.PolicyParameters = function module$contents$eeapiclient$ee_api_client_PolicyParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Policy = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"version\", null == parameters.version ? null : parameters.version);\n  this.Serializable$set(\"bindings\", null == parameters.bindings ? null : parameters.bindings);\n  this.Serializable$set(\"auditConfigs\", null == parameters.auditConfigs ? null : parameters.auditConfigs);\n  this.Serializable$set(\"rules\", null == parameters.rules ? null : parameters.rules);\n  this.Serializable$set(\"etag\", null == parameters.etag ? null : parameters.etag);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Policy, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Policy.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Policy;\n};\nmodule$exports$eeapiclient$ee_api_client.Policy.prototype.getPartialClassMetadata = function() {\n  return {arrays:{auditConfigs:module$exports$eeapiclient$ee_api_client.AuditConfig, bindings:module$exports$eeapiclient$ee_api_client.Binding, rules:module$exports$eeapiclient$ee_api_client.Rule}, keys:[\"auditConfigs\", \"bindings\", \"etag\", \"rules\", \"version\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Policy.prototype, {auditConfigs:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"auditConfigs\") ? this.Serializable$get(\"auditConfigs\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"auditConfigs\", value);\n}}, bindings:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bindings\") ? this.Serializable$get(\"bindings\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bindings\", value);\n}}, etag:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"etag\") ? this.Serializable$get(\"etag\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"etag\", value);\n}}, rules:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rules\") ? this.Serializable$get(\"rules\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rules\", value);\n}}, version:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"version\") ? this.Serializable$get(\"version\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"version\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.RankByAttributeRuleParameters = function module$contents$eeapiclient$ee_api_client_RankByAttributeRuleParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankByAttributeRule = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"attributeName\", null == parameters.attributeName ? null : parameters.attributeName);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankByAttributeRule, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankByAttributeRule.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankByAttributeRule;\n};\nmodule$exports$eeapiclient$ee_api_client.RankByAttributeRule.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"attributeName\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.RankByAttributeRule.prototype, {attributeName:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"attributeName\") ? this.Serializable$get(\"attributeName\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"attributeName\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.RankByGeometryTypeRuleParameters = function module$contents$eeapiclient$ee_api_client_RankByGeometryTypeRuleParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule;\n};\nmodule$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule.prototype.getPartialClassMetadata = function() {\n  return {keys:[]};\n};\nmodule$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRuleParameters = function module$contents$eeapiclient$ee_api_client_RankByMinVisibleLodRuleParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule;\n};\nmodule$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule.prototype.getPartialClassMetadata = function() {\n  return {keys:[]};\n};\nmodule$exports$eeapiclient$ee_api_client.RankByNaturalOrderParameters = function module$contents$eeapiclient$ee_api_client_RankByNaturalOrderParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankByNaturalOrder = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankByNaturalOrder, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankByNaturalOrder.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankByNaturalOrder;\n};\nmodule$exports$eeapiclient$ee_api_client.RankByNaturalOrder.prototype.getPartialClassMetadata = function() {\n  return {keys:[]};\n};\nmodule$exports$eeapiclient$ee_api_client.RankByOneThingRuleParameters = function module$contents$eeapiclient$ee_api_client_RankByOneThingRuleParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankByOneThingRule = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"rankByAttributeRule\", null == parameters.rankByAttributeRule ? null : parameters.rankByAttributeRule);\n  this.Serializable$set(\"rankByMinVisibleLodRule\", null == parameters.rankByMinVisibleLodRule ? null : parameters.rankByMinVisibleLodRule);\n  this.Serializable$set(\"rankByGeometryTypeRule\", null == parameters.rankByGeometryTypeRule ? null : parameters.rankByGeometryTypeRule);\n  this.Serializable$set(\"rankByNaturalOrderRule\", null == parameters.rankByNaturalOrderRule ? null : parameters.rankByNaturalOrderRule);\n  this.Serializable$set(\"direction\", null == parameters.direction ? null : parameters.direction);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankByOneThingRule, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankByOneThingRule.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankByOneThingRule;\n};\nmodule$exports$eeapiclient$ee_api_client.RankByOneThingRule.prototype.getPartialClassMetadata = function() {\n  return {enums:{direction:module$exports$eeapiclient$ee_api_client.RankByOneThingRuleDirectionEnum}, keys:[\"direction\", \"rankByAttributeRule\", \"rankByGeometryTypeRule\", \"rankByMinVisibleLodRule\", \"rankByNaturalOrderRule\"], objects:{rankByAttributeRule:module$exports$eeapiclient$ee_api_client.RankByAttributeRule, rankByGeometryTypeRule:module$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule, \n  rankByMinVisibleLodRule:module$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule, rankByNaturalOrderRule:module$exports$eeapiclient$ee_api_client.RankByNaturalOrder}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.RankByOneThingRule.prototype, {direction:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"direction\") ? this.Serializable$get(\"direction\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"direction\", value);\n}}, rankByAttributeRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankByAttributeRule\") ? this.Serializable$get(\"rankByAttributeRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankByAttributeRule\", value);\n}}, rankByGeometryTypeRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankByGeometryTypeRule\") ? this.Serializable$get(\"rankByGeometryTypeRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankByGeometryTypeRule\", value);\n}}, rankByMinVisibleLodRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankByMinVisibleLodRule\") ? this.Serializable$get(\"rankByMinVisibleLodRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankByMinVisibleLodRule\", value);\n}}, rankByNaturalOrderRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankByNaturalOrderRule\") ? this.Serializable$get(\"rankByNaturalOrderRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankByNaturalOrderRule\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.RankByOneThingRule, {Direction:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.RankByOneThingRuleDirectionEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.RankingOptionsParameters = function module$contents$eeapiclient$ee_api_client_RankingOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankingOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"zOrderRankingRule\", null == parameters.zOrderRankingRule ? null : parameters.zOrderRankingRule);\n  this.Serializable$set(\"thinningRankingRule\", null == parameters.thinningRankingRule ? null : parameters.thinningRankingRule);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankingOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankingOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankingOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.RankingOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"thinningRankingRule\", \"zOrderRankingRule\"], objects:{thinningRankingRule:module$exports$eeapiclient$ee_api_client.RankingRule, zOrderRankingRule:module$exports$eeapiclient$ee_api_client.RankingRule}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.RankingOptions.prototype, {thinningRankingRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"thinningRankingRule\") ? this.Serializable$get(\"thinningRankingRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"thinningRankingRule\", value);\n}}, zOrderRankingRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"zOrderRankingRule\") ? this.Serializable$get(\"zOrderRankingRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"zOrderRankingRule\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.RankingRuleParameters = function module$contents$eeapiclient$ee_api_client_RankingRuleParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.RankingRule = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"rankByOneThingRule\", null == parameters.rankByOneThingRule ? null : parameters.rankByOneThingRule);\n  this.Serializable$set(\"pseudoRandomTiebreaking\", null == parameters.pseudoRandomTiebreaking ? null : parameters.pseudoRandomTiebreaking);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.RankingRule, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.RankingRule.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.RankingRule;\n};\nmodule$exports$eeapiclient$ee_api_client.RankingRule.prototype.getPartialClassMetadata = function() {\n  return {arrays:{rankByOneThingRule:module$exports$eeapiclient$ee_api_client.RankByOneThingRule}, keys:[\"pseudoRandomTiebreaking\", \"rankByOneThingRule\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.RankingRule.prototype, {pseudoRandomTiebreaking:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pseudoRandomTiebreaking\") ? this.Serializable$get(\"pseudoRandomTiebreaking\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pseudoRandomTiebreaking\", value);\n}}, rankByOneThingRule:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"rankByOneThingRule\") ? this.Serializable$get(\"rankByOneThingRule\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"rankByOneThingRule\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.RuleParameters = function module$contents$eeapiclient$ee_api_client_RuleParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Rule = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"description\", null == parameters.description ? null : parameters.description);\n  this.Serializable$set(\"permissions\", null == parameters.permissions ? null : parameters.permissions);\n  this.Serializable$set(\"action\", null == parameters.action ? null : parameters.action);\n  this.Serializable$set(\"in\", null == parameters.in ? null : parameters.in);\n  this.Serializable$set(\"notIn\", null == parameters.notIn ? null : parameters.notIn);\n  this.Serializable$set(\"conditions\", null == parameters.conditions ? null : parameters.conditions);\n  this.Serializable$set(\"logConfig\", null == parameters.logConfig ? null : parameters.logConfig);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Rule, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Rule.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Rule;\n};\nmodule$exports$eeapiclient$ee_api_client.Rule.prototype.getPartialClassMetadata = function() {\n  return {arrays:{conditions:module$exports$eeapiclient$ee_api_client.Condition, logConfig:module$exports$eeapiclient$ee_api_client.LogConfig}, enums:{action:module$exports$eeapiclient$ee_api_client.RuleActionEnum}, keys:\"action conditions description in logConfig notIn permissions\".split(\" \")};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Rule.prototype, {action:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"action\") ? this.Serializable$get(\"action\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"action\", value);\n}}, conditions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"conditions\") ? this.Serializable$get(\"conditions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"conditions\", value);\n}}, description:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"description\") ? this.Serializable$get(\"description\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"description\", value);\n}}, in:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"in\") ? this.Serializable$get(\"in\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"in\", value);\n}}, logConfig:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"logConfig\") ? this.Serializable$get(\"logConfig\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"logConfig\", value);\n}}, notIn:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"notIn\") ? this.Serializable$get(\"notIn\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"notIn\", value);\n}}, permissions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"permissions\") ? this.Serializable$get(\"permissions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"permissions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Rule, {Action:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.RuleActionEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.SetIamPolicyRequestParameters = function module$contents$eeapiclient$ee_api_client_SetIamPolicyRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.SetIamPolicyRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"policy\", null == parameters.policy ? null : parameters.policy);\n  this.Serializable$set(\"updateMask\", null == parameters.updateMask ? null : parameters.updateMask);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.SetIamPolicyRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.SetIamPolicyRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.SetIamPolicyRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.SetIamPolicyRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"policy\", \"updateMask\"], objects:{policy:module$exports$eeapiclient$ee_api_client.Policy}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.SetIamPolicyRequest.prototype, {policy:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"policy\") ? this.Serializable$get(\"policy\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"policy\", value);\n}}, updateMask:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"updateMask\") ? this.Serializable$get(\"updateMask\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"updateMask\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.StatusParameters = function module$contents$eeapiclient$ee_api_client_StatusParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Status = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"code\", null == parameters.code ? null : parameters.code);\n  this.Serializable$set(\"message\", null == parameters.message ? null : parameters.message);\n  this.Serializable$set(\"details\", null == parameters.details ? null : parameters.details);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Status, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Status.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Status;\n};\nmodule$exports$eeapiclient$ee_api_client.Status.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"code\", \"details\", \"message\"], objectMaps:{details:{ctor:null, isPropertyArray:!0, isSerializable:!1, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Status.prototype, {code:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"code\") ? this.Serializable$get(\"code\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"code\", value);\n}}, details:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"details\") ? this.Serializable$get(\"details\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"details\", value);\n}}, message:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"message\") ? this.Serializable$get(\"message\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"message\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TableParameters = function module$contents$eeapiclient$ee_api_client_TableParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Table = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"selectors\", null == parameters.selectors ? null : parameters.selectors);\n  this.Serializable$set(\"filename\", null == parameters.filename ? null : parameters.filename);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Table, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Table.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Table;\n};\nmodule$exports$eeapiclient$ee_api_client.Table.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.TableFileFormatEnum}, keys:[\"expression\", \"fileFormat\", \"filename\", \"name\", \"selectors\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Table.prototype, {expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, filename:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"filename\") ? this.Serializable$get(\"filename\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"filename\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, selectors:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"selectors\") ? this.Serializable$get(\"selectors\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"selectors\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Table, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.TableFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.TableAssetExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_TableAssetExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableAssetExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"earthEngineDestination\", null == parameters.earthEngineDestination ? null : parameters.earthEngineDestination);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TableAssetExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TableAssetExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TableAssetExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.TableAssetExportOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"earthEngineDestination\"], objects:{earthEngineDestination:module$exports$eeapiclient$ee_api_client.EarthEngineDestination}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TableAssetExportOptions.prototype, {earthEngineDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"earthEngineDestination\") ? this.Serializable$get(\"earthEngineDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"earthEngineDestination\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TableFileExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_TableFileExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableFileExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"driveDestination\", null == parameters.driveDestination ? null : parameters.driveDestination);\n  this.Serializable$set(\"cloudStorageDestination\", null == parameters.cloudStorageDestination ? null : parameters.cloudStorageDestination);\n  this.Serializable$set(\"gcsDestination\", null == parameters.gcsDestination ? null : parameters.gcsDestination);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TableFileExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TableFileExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TableFileExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.TableFileExportOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum}, keys:[\"cloudStorageDestination\", \"driveDestination\", \"fileFormat\", \"gcsDestination\"], objects:{cloudStorageDestination:module$exports$eeapiclient$ee_api_client.CloudStorageDestination, driveDestination:module$exports$eeapiclient$ee_api_client.DriveDestination, gcsDestination:module$exports$eeapiclient$ee_api_client.GcsDestination}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TableFileExportOptions.prototype, {cloudStorageDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"cloudStorageDestination\") ? this.Serializable$get(\"cloudStorageDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"cloudStorageDestination\", value);\n}}, driveDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"driveDestination\") ? this.Serializable$get(\"driveDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"driveDestination\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, gcsDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"gcsDestination\") ? this.Serializable$get(\"gcsDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"gcsDestination\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TableFileExportOptions, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.TableFileExportOptionsFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.TableManifestParameters = function module$contents$eeapiclient$ee_api_client_TableManifestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableManifest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"properties\", null == parameters.properties ? null : parameters.properties);\n  this.Serializable$set(\"uriPrefix\", null == parameters.uriPrefix ? null : parameters.uriPrefix);\n  this.Serializable$set(\"sources\", null == parameters.sources ? null : parameters.sources);\n  this.Serializable$set(\"startTime\", null == parameters.startTime ? null : parameters.startTime);\n  this.Serializable$set(\"endTime\", null == parameters.endTime ? null : parameters.endTime);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TableManifest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TableManifest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TableManifest;\n};\nmodule$exports$eeapiclient$ee_api_client.TableManifest.prototype.getPartialClassMetadata = function() {\n  return {arrays:{sources:module$exports$eeapiclient$ee_api_client.TableSource}, keys:\"endTime name properties sources startTime uriPrefix\".split(\" \"), objectMaps:{properties:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TableManifest.prototype, {endTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"endTime\") ? this.Serializable$get(\"endTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"endTime\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, properties:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"properties\") ? this.Serializable$get(\"properties\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"properties\", value);\n}}, sources:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sources\") ? this.Serializable$get(\"sources\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sources\", value);\n}}, startTime:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"startTime\") ? this.Serializable$get(\"startTime\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"startTime\", value);\n}}, uriPrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"uriPrefix\") ? this.Serializable$get(\"uriPrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"uriPrefix\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TableSourceParameters = function module$contents$eeapiclient$ee_api_client_TableSourceParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TableSource = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"uris\", null == parameters.uris ? null : parameters.uris);\n  this.Serializable$set(\"charset\", null == parameters.charset ? null : parameters.charset);\n  this.Serializable$set(\"maxErrorMeters\", null == parameters.maxErrorMeters ? null : parameters.maxErrorMeters);\n  this.Serializable$set(\"maxVertices\", null == parameters.maxVertices ? null : parameters.maxVertices);\n  this.Serializable$set(\"crs\", null == parameters.crs ? null : parameters.crs);\n  this.Serializable$set(\"geodesic\", null == parameters.geodesic ? null : parameters.geodesic);\n  this.Serializable$set(\"primaryGeometryColumn\", null == parameters.primaryGeometryColumn ? null : parameters.primaryGeometryColumn);\n  this.Serializable$set(\"xColumn\", null == parameters.xColumn ? null : parameters.xColumn);\n  this.Serializable$set(\"yColumn\", null == parameters.yColumn ? null : parameters.yColumn);\n  this.Serializable$set(\"dateFormat\", null == parameters.dateFormat ? null : parameters.dateFormat);\n  this.Serializable$set(\"csvDelimiter\", null == parameters.csvDelimiter ? null : parameters.csvDelimiter);\n  this.Serializable$set(\"csvQualifier\", null == parameters.csvQualifier ? null : parameters.csvQualifier);\n  this.Serializable$set(\"csvColumnDataTypeOverrides\", null == parameters.csvColumnDataTypeOverrides ? null : parameters.csvColumnDataTypeOverrides);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TableSource, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TableSource.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TableSource;\n};\nmodule$exports$eeapiclient$ee_api_client.TableSource.prototype.getPartialClassMetadata = function() {\n  return {enums:{csvColumnDataTypeOverrides:module$exports$eeapiclient$ee_api_client.TableSourceCsvColumnDataTypeOverridesEnum}, keys:\"charset crs csvColumnDataTypeOverrides csvDelimiter csvQualifier dateFormat geodesic maxErrorMeters maxVertices primaryGeometryColumn uris xColumn yColumn\".split(\" \"), objectMaps:{csvColumnDataTypeOverrides:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TableSource.prototype, {charset:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"charset\") ? this.Serializable$get(\"charset\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"charset\", value);\n}}, crs:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"crs\") ? this.Serializable$get(\"crs\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"crs\", value);\n}}, csvColumnDataTypeOverrides:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"csvColumnDataTypeOverrides\") ? this.Serializable$get(\"csvColumnDataTypeOverrides\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"csvColumnDataTypeOverrides\", value);\n}}, csvDelimiter:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"csvDelimiter\") ? this.Serializable$get(\"csvDelimiter\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"csvDelimiter\", value);\n}}, csvQualifier:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"csvQualifier\") ? this.Serializable$get(\"csvQualifier\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"csvQualifier\", value);\n}}, dateFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dateFormat\") ? this.Serializable$get(\"dateFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dateFormat\", value);\n}}, geodesic:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"geodesic\") ? this.Serializable$get(\"geodesic\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"geodesic\", value);\n}}, maxErrorMeters:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxErrorMeters\") ? this.Serializable$get(\"maxErrorMeters\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxErrorMeters\", value);\n}}, maxVertices:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxVertices\") ? this.Serializable$get(\"maxVertices\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxVertices\", value);\n}}, primaryGeometryColumn:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"primaryGeometryColumn\") ? this.Serializable$get(\"primaryGeometryColumn\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"primaryGeometryColumn\", value);\n}}, uris:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"uris\") ? this.Serializable$get(\"uris\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"uris\", value);\n}}, xColumn:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"xColumn\") ? this.Serializable$get(\"xColumn\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"xColumn\", value);\n}}, yColumn:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"yColumn\") ? this.Serializable$get(\"yColumn\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"yColumn\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TableSource, {CsvColumnDataTypeOverrides:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.TableSourceCsvColumnDataTypeOverridesEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsRequestParameters = function module$contents$eeapiclient$ee_api_client_TestIamPermissionsRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"permissions\", null == parameters.permissions ? null : parameters.permissions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TestIamPermissionsRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TestIamPermissionsRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"permissions\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TestIamPermissionsRequest.prototype, {permissions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"permissions\") ? this.Serializable$get(\"permissions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"permissions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsResponseParameters = function module$contents$eeapiclient$ee_api_client_TestIamPermissionsResponseParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"permissions\", null == parameters.permissions ? null : parameters.permissions);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse;\n};\nmodule$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"permissions\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse.prototype, {permissions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"permissions\") ? this.Serializable$get(\"permissions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"permissions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TfRecordImageExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_TfRecordImageExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"tileDimensions\", null == parameters.tileDimensions ? null : parameters.tileDimensions);\n  this.Serializable$set(\"marginDimensions\", null == parameters.marginDimensions ? null : parameters.marginDimensions);\n  this.Serializable$set(\"compress\", null == parameters.compress ? null : parameters.compress);\n  this.Serializable$set(\"maxSizeBytes\", null == parameters.maxSizeBytes ? null : parameters.maxSizeBytes);\n  this.Serializable$set(\"defaultValue\", null == parameters.defaultValue ? null : parameters.defaultValue);\n  this.Serializable$set(\"tensorDepths\", null == parameters.tensorDepths ? null : parameters.tensorDepths);\n  this.Serializable$set(\"sequenceData\", null == parameters.sequenceData ? null : parameters.sequenceData);\n  this.Serializable$set(\"collapseBands\", null == parameters.collapseBands ? null : parameters.collapseBands);\n  this.Serializable$set(\"maxMaskedRatio\", null == parameters.maxMaskedRatio ? null : parameters.maxMaskedRatio);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:\"collapseBands compress defaultValue marginDimensions maxMaskedRatio maxSizeBytes sequenceData tensorDepths tileDimensions\".split(\" \"), objectMaps:{tensorDepths:{ctor:null, isPropertyArray:!1, isSerializable:!1, isValueArray:!1}}, objects:{marginDimensions:module$exports$eeapiclient$ee_api_client.GridDimensions, tileDimensions:module$exports$eeapiclient$ee_api_client.GridDimensions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions.prototype, {collapseBands:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"collapseBands\") ? this.Serializable$get(\"collapseBands\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"collapseBands\", value);\n}}, compress:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"compress\") ? this.Serializable$get(\"compress\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"compress\", value);\n}}, defaultValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"defaultValue\") ? this.Serializable$get(\"defaultValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"defaultValue\", value);\n}}, marginDimensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"marginDimensions\") ? this.Serializable$get(\"marginDimensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"marginDimensions\", value);\n}}, maxMaskedRatio:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxMaskedRatio\") ? this.Serializable$get(\"maxMaskedRatio\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxMaskedRatio\", value);\n}}, maxSizeBytes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxSizeBytes\") ? this.Serializable$get(\"maxSizeBytes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxSizeBytes\", value);\n}}, sequenceData:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sequenceData\") ? this.Serializable$get(\"sequenceData\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sequenceData\", value);\n}}, tensorDepths:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tensorDepths\") ? this.Serializable$get(\"tensorDepths\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tensorDepths\", value);\n}}, tileDimensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileDimensions\") ? this.Serializable$get(\"tileDimensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileDimensions\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ThinningOptionsParameters = function module$contents$eeapiclient$ee_api_client_ThinningOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ThinningOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"maxFeaturesPerTile\", null == parameters.maxFeaturesPerTile ? null : parameters.maxFeaturesPerTile);\n  this.Serializable$set(\"thinningStrategy\", null == parameters.thinningStrategy ? null : parameters.thinningStrategy);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ThinningOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ThinningOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ThinningOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.ThinningOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{thinningStrategy:module$exports$eeapiclient$ee_api_client.ThinningOptionsThinningStrategyEnum}, keys:[\"maxFeaturesPerTile\", \"thinningStrategy\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ThinningOptions.prototype, {maxFeaturesPerTile:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxFeaturesPerTile\") ? this.Serializable$get(\"maxFeaturesPerTile\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxFeaturesPerTile\", value);\n}}, thinningStrategy:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"thinningStrategy\") ? this.Serializable$get(\"thinningStrategy\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"thinningStrategy\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ThinningOptions, {ThinningStrategy:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ThinningOptionsThinningStrategyEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.ThumbnailParameters = function module$contents$eeapiclient$ee_api_client_ThumbnailParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Thumbnail = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"bandIds\", null == parameters.bandIds ? null : parameters.bandIds);\n  this.Serializable$set(\"visualizationOptions\", null == parameters.visualizationOptions ? null : parameters.visualizationOptions);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n  this.Serializable$set(\"filenamePrefix\", null == parameters.filenamePrefix ? null : parameters.filenamePrefix);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Thumbnail, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Thumbnail.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Thumbnail;\n};\nmodule$exports$eeapiclient$ee_api_client.Thumbnail.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum}, keys:\"bandIds expression fileFormat filenamePrefix grid name visualizationOptions\".split(\" \"), objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, grid:module$exports$eeapiclient$ee_api_client.PixelGrid, visualizationOptions:module$exports$eeapiclient$ee_api_client.VisualizationOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Thumbnail.prototype, {bandIds:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandIds\") ? this.Serializable$get(\"bandIds\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandIds\", value);\n}}, expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, filenamePrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"filenamePrefix\") ? this.Serializable$get(\"filenamePrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"filenamePrefix\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, visualizationOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"visualizationOptions\") ? this.Serializable$get(\"visualizationOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"visualizationOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Thumbnail, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.ThumbnailFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.TileOptionsParameters = function module$contents$eeapiclient$ee_api_client_TileOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TileOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"endZoom\", null == parameters.endZoom ? null : parameters.endZoom);\n  this.Serializable$set(\"maxZoom\", null == parameters.maxZoom ? null : parameters.maxZoom);\n  this.Serializable$set(\"scale\", null == parameters.scale ? null : parameters.scale);\n  this.Serializable$set(\"startZoom\", null == parameters.startZoom ? null : parameters.startZoom);\n  this.Serializable$set(\"minZoom\", null == parameters.minZoom ? null : parameters.minZoom);\n  this.Serializable$set(\"skipEmpty\", null == parameters.skipEmpty ? null : parameters.skipEmpty);\n  this.Serializable$set(\"skipEmptyTiles\", null == parameters.skipEmptyTiles ? null : parameters.skipEmptyTiles);\n  this.Serializable$set(\"mapsApiKey\", null == parameters.mapsApiKey ? null : parameters.mapsApiKey);\n  this.Serializable$set(\"dimensions\", null == parameters.dimensions ? null : parameters.dimensions);\n  this.Serializable$set(\"tileDimensions\", null == parameters.tileDimensions ? null : parameters.tileDimensions);\n  this.Serializable$set(\"stride\", null == parameters.stride ? null : parameters.stride);\n  this.Serializable$set(\"zoomSubset\", null == parameters.zoomSubset ? null : parameters.zoomSubset);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TileOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TileOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TileOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.TileOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:\"dimensions endZoom mapsApiKey maxZoom minZoom scale skipEmpty skipEmptyTiles startZoom stride tileDimensions zoomSubset\".split(\" \"), objects:{dimensions:module$exports$eeapiclient$ee_api_client.GridDimensions, tileDimensions:module$exports$eeapiclient$ee_api_client.GridDimensions, zoomSubset:module$exports$eeapiclient$ee_api_client.ZoomSubset}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TileOptions.prototype, {dimensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dimensions\") ? this.Serializable$get(\"dimensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dimensions\", value);\n}}, endZoom:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"endZoom\") ? this.Serializable$get(\"endZoom\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"endZoom\", value);\n}}, mapsApiKey:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"mapsApiKey\") ? this.Serializable$get(\"mapsApiKey\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"mapsApiKey\", value);\n}}, maxZoom:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxZoom\") ? this.Serializable$get(\"maxZoom\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxZoom\", value);\n}}, minZoom:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"minZoom\") ? this.Serializable$get(\"minZoom\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"minZoom\", value);\n}}, scale:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"scale\") ? this.Serializable$get(\"scale\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"scale\", value);\n}}, skipEmpty:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"skipEmpty\") ? this.Serializable$get(\"skipEmpty\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"skipEmpty\", value);\n}}, skipEmptyTiles:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"skipEmptyTiles\") ? this.Serializable$get(\"skipEmptyTiles\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"skipEmptyTiles\", value);\n}}, startZoom:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"startZoom\") ? this.Serializable$get(\"startZoom\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"startZoom\", value);\n}}, stride:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"stride\") ? this.Serializable$get(\"stride\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"stride\", value);\n}}, tileDimensions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tileDimensions\") ? this.Serializable$get(\"tileDimensions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tileDimensions\", value);\n}}, zoomSubset:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"zoomSubset\") ? this.Serializable$get(\"zoomSubset\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"zoomSubset\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilesetParameters = function module$contents$eeapiclient$ee_api_client_TilesetParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.Tileset = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"id\", null == parameters.id ? null : parameters.id);\n  this.Serializable$set(\"sources\", null == parameters.sources ? null : parameters.sources);\n  this.Serializable$set(\"dataType\", null == parameters.dataType ? null : parameters.dataType);\n  this.Serializable$set(\"crs\", null == parameters.crs ? null : parameters.crs);\n  this.Serializable$set(\"subdatasetPrefix\", null == parameters.subdatasetPrefix ? null : parameters.subdatasetPrefix);\n  this.Serializable$set(\"subdatasetSuffix\", null == parameters.subdatasetSuffix ? null : parameters.subdatasetSuffix);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.Tileset, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.Tileset.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.Tileset;\n};\nmodule$exports$eeapiclient$ee_api_client.Tileset.prototype.getPartialClassMetadata = function() {\n  return {arrays:{sources:module$exports$eeapiclient$ee_api_client.ImageSource}, enums:{dataType:module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum}, keys:\"crs dataType id sources subdatasetPrefix subdatasetSuffix\".split(\" \")};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Tileset.prototype, {crs:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"crs\") ? this.Serializable$get(\"crs\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"crs\", value);\n}}, dataType:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dataType\") ? this.Serializable$get(\"dataType\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dataType\", value);\n}}, id:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"id\") ? this.Serializable$get(\"id\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"id\", value);\n}}, sources:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sources\") ? this.Serializable$get(\"sources\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sources\", value);\n}}, subdatasetPrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"subdatasetPrefix\") ? this.Serializable$get(\"subdatasetPrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"subdatasetPrefix\", value);\n}}, subdatasetSuffix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"subdatasetSuffix\") ? this.Serializable$get(\"subdatasetSuffix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"subdatasetSuffix\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.Tileset, {DataType:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.TilesetDataTypeEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilesetBandParameters = function module$contents$eeapiclient$ee_api_client_TilesetBandParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilesetBand = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"id\", null == parameters.id ? null : parameters.id);\n  this.Serializable$set(\"tilesetId\", null == parameters.tilesetId ? null : parameters.tilesetId);\n  this.Serializable$set(\"tilesetBandIndex\", null == parameters.tilesetBandIndex ? null : parameters.tilesetBandIndex);\n  this.Serializable$set(\"missingData\", null == parameters.missingData ? null : parameters.missingData);\n  this.Serializable$set(\"pyramidingPolicy\", null == parameters.pyramidingPolicy ? null : parameters.pyramidingPolicy);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TilesetBand, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TilesetBand.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TilesetBand;\n};\nmodule$exports$eeapiclient$ee_api_client.TilesetBand.prototype.getPartialClassMetadata = function() {\n  return {enums:{pyramidingPolicy:module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum}, keys:[\"id\", \"missingData\", \"pyramidingPolicy\", \"tilesetBandIndex\", \"tilesetId\"], objects:{missingData:module$exports$eeapiclient$ee_api_client.MissingData}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilesetBand.prototype, {id:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"id\") ? this.Serializable$get(\"id\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"id\", value);\n}}, missingData:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"missingData\") ? this.Serializable$get(\"missingData\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"missingData\", value);\n}}, pyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pyramidingPolicy\") ? this.Serializable$get(\"pyramidingPolicy\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pyramidingPolicy\", value);\n}}, tilesetBandIndex:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilesetBandIndex\") ? this.Serializable$get(\"tilesetBandIndex\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilesetBandIndex\", value);\n}}, tilesetId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilesetId\") ? this.Serializable$get(\"tilesetId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilesetId\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilesetBand, {PyramidingPolicy:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.TilesetBandPyramidingPolicyEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilesetMaskBandParameters = function module$contents$eeapiclient$ee_api_client_TilesetMaskBandParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilesetMaskBand = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"tilesetId\", null == parameters.tilesetId ? null : parameters.tilesetId);\n  this.Serializable$set(\"bandIds\", null == parameters.bandIds ? null : parameters.bandIds);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TilesetMaskBand, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TilesetMaskBand.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TilesetMaskBand;\n};\nmodule$exports$eeapiclient$ee_api_client.TilesetMaskBand.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"bandIds\", \"tilesetId\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilesetMaskBand.prototype, {bandIds:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bandIds\") ? this.Serializable$get(\"bandIds\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bandIds\", value);\n}}, tilesetId:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilesetId\") ? this.Serializable$get(\"tilesetId\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilesetId\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilestoreEntryParameters = function module$contents$eeapiclient$ee_api_client_TilestoreEntryParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreEntry = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"sources\", null == parameters.sources ? null : parameters.sources);\n  this.Serializable$set(\"pathPrefix\", null == parameters.pathPrefix ? null : parameters.pathPrefix);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TilestoreEntry, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TilestoreEntry.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TilestoreEntry;\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreEntry.prototype.getPartialClassMetadata = function() {\n  return {arrays:{sources:module$exports$eeapiclient$ee_api_client.TilestoreSource}, keys:[\"pathPrefix\", \"sources\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilestoreEntry.prototype, {pathPrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pathPrefix\") ? this.Serializable$get(\"pathPrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pathPrefix\", value);\n}}, sources:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sources\") ? this.Serializable$get(\"sources\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sources\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilestoreLocationParameters = function module$contents$eeapiclient$ee_api_client_TilestoreLocationParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreLocation = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"sources\", null == parameters.sources ? null : parameters.sources);\n  this.Serializable$set(\"pathPrefix\", null == parameters.pathPrefix ? null : parameters.pathPrefix);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TilestoreLocation, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TilestoreLocation.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TilestoreLocation;\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreLocation.prototype.getPartialClassMetadata = function() {\n  return {arrays:{sources:module$exports$eeapiclient$ee_api_client.TilestoreSource}, keys:[\"pathPrefix\", \"sources\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilestoreLocation.prototype, {pathPrefix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pathPrefix\") ? this.Serializable$get(\"pathPrefix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pathPrefix\", value);\n}}, sources:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"sources\") ? this.Serializable$get(\"sources\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"sources\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilestoreSourceParameters = function module$contents$eeapiclient$ee_api_client_TilestoreSourceParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreSource = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"pathSuffix\", null == parameters.pathSuffix ? null : parameters.pathSuffix);\n  this.Serializable$set(\"headerSizeBytes\", null == parameters.headerSizeBytes ? null : parameters.headerSizeBytes);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TilestoreSource, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TilestoreSource.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TilestoreSource;\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreSource.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"headerSizeBytes\", \"pathSuffix\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilestoreSource.prototype, {headerSizeBytes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"headerSizeBytes\") ? this.Serializable$get(\"headerSizeBytes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"headerSizeBytes\", value);\n}}, pathSuffix:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"pathSuffix\") ? this.Serializable$get(\"pathSuffix\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"pathSuffix\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.TilestoreTilesetParameters = function module$contents$eeapiclient$ee_api_client_TilestoreTilesetParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreTileset = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"fileIndexes\", null == parameters.fileIndexes ? null : parameters.fileIndexes);\n  this.Serializable$set(\"firstTileIndex\", null == parameters.firstTileIndex ? null : parameters.firstTileIndex);\n  this.Serializable$set(\"tilesPerFile\", null == parameters.tilesPerFile ? null : parameters.tilesPerFile);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.TilestoreTileset, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.TilestoreTileset.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.TilestoreTileset;\n};\nmodule$exports$eeapiclient$ee_api_client.TilestoreTileset.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"fileIndexes\", \"firstTileIndex\", \"tilesPerFile\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.TilestoreTileset.prototype, {fileIndexes:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileIndexes\") ? this.Serializable$get(\"fileIndexes\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileIndexes\", value);\n}}, firstTileIndex:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"firstTileIndex\") ? this.Serializable$get(\"firstTileIndex\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"firstTileIndex\", value);\n}}, tilesPerFile:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"tilesPerFile\") ? this.Serializable$get(\"tilesPerFile\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"tilesPerFile\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.UpdateAssetRequestParameters = function module$contents$eeapiclient$ee_api_client_UpdateAssetRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.UpdateAssetRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"asset\", null == parameters.asset ? null : parameters.asset);\n  this.Serializable$set(\"updateMask\", null == parameters.updateMask ? null : parameters.updateMask);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.UpdateAssetRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.UpdateAssetRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.UpdateAssetRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.UpdateAssetRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"asset\", \"updateMask\"], objects:{asset:module$exports$eeapiclient$ee_api_client.EarthEngineAsset}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.UpdateAssetRequest.prototype, {asset:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"asset\") ? this.Serializable$get(\"asset\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"asset\", value);\n}}, updateMask:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"updateMask\") ? this.Serializable$get(\"updateMask\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"updateMask\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ValueNodeParameters = function module$contents$eeapiclient$ee_api_client_ValueNodeParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ValueNode = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"constantValue\", null == parameters.constantValue ? null : parameters.constantValue);\n  this.Serializable$set(\"integerValue\", null == parameters.integerValue ? null : parameters.integerValue);\n  this.Serializable$set(\"bytesValue\", null == parameters.bytesValue ? null : parameters.bytesValue);\n  this.Serializable$set(\"arrayValue\", null == parameters.arrayValue ? null : parameters.arrayValue);\n  this.Serializable$set(\"dictionaryValue\", null == parameters.dictionaryValue ? null : parameters.dictionaryValue);\n  this.Serializable$set(\"functionDefinitionValue\", null == parameters.functionDefinitionValue ? null : parameters.functionDefinitionValue);\n  this.Serializable$set(\"functionInvocationValue\", null == parameters.functionInvocationValue ? null : parameters.functionInvocationValue);\n  this.Serializable$set(\"argumentReference\", null == parameters.argumentReference ? null : parameters.argumentReference);\n  this.Serializable$set(\"valueReference\", null == parameters.valueReference ? null : parameters.valueReference);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ValueNode, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ValueNode.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ValueNode;\n};\nmodule$exports$eeapiclient$ee_api_client.ValueNode.prototype.getPartialClassMetadata = function() {\n  return {keys:\"argumentReference arrayValue bytesValue constantValue dictionaryValue functionDefinitionValue functionInvocationValue integerValue valueReference\".split(\" \"), objects:{arrayValue:module$exports$eeapiclient$ee_api_client.ArrayValue, dictionaryValue:module$exports$eeapiclient$ee_api_client.DictionaryValue, functionDefinitionValue:module$exports$eeapiclient$ee_api_client.FunctionDefinition, \n  functionInvocationValue:module$exports$eeapiclient$ee_api_client.FunctionInvocation}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ValueNode.prototype, {argumentReference:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"argumentReference\") ? this.Serializable$get(\"argumentReference\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"argumentReference\", value);\n}}, arrayValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"arrayValue\") ? this.Serializable$get(\"arrayValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"arrayValue\", value);\n}}, bytesValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"bytesValue\") ? this.Serializable$get(\"bytesValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"bytesValue\", value);\n}}, constantValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"constantValue\") ? this.Serializable$get(\"constantValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"constantValue\", value);\n}}, dictionaryValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"dictionaryValue\") ? this.Serializable$get(\"dictionaryValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"dictionaryValue\", value);\n}}, functionDefinitionValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"functionDefinitionValue\") ? this.Serializable$get(\"functionDefinitionValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"functionDefinitionValue\", value);\n}}, functionInvocationValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"functionInvocationValue\") ? this.Serializable$get(\"functionInvocationValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"functionInvocationValue\", value);\n}}, integerValue:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"integerValue\") ? this.Serializable$get(\"integerValue\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"integerValue\", value);\n}}, valueReference:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"valueReference\") ? this.Serializable$get(\"valueReference\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"valueReference\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.VideoFileExportOptionsParameters = function module$contents$eeapiclient$ee_api_client_VideoFileExportOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.VideoFileExportOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"driveDestination\", null == parameters.driveDestination ? null : parameters.driveDestination);\n  this.Serializable$set(\"cloudStorageDestination\", null == parameters.cloudStorageDestination ? null : parameters.cloudStorageDestination);\n  this.Serializable$set(\"gcsDestination\", null == parameters.gcsDestination ? null : parameters.gcsDestination);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.VideoFileExportOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.VideoFileExportOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.VideoFileExportOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.VideoFileExportOptions.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum}, keys:[\"cloudStorageDestination\", \"driveDestination\", \"fileFormat\", \"gcsDestination\"], objects:{cloudStorageDestination:module$exports$eeapiclient$ee_api_client.CloudStorageDestination, driveDestination:module$exports$eeapiclient$ee_api_client.DriveDestination, gcsDestination:module$exports$eeapiclient$ee_api_client.GcsDestination}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.VideoFileExportOptions.prototype, {cloudStorageDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"cloudStorageDestination\") ? this.Serializable$get(\"cloudStorageDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"cloudStorageDestination\", value);\n}}, driveDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"driveDestination\") ? this.Serializable$get(\"driveDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"driveDestination\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, gcsDestination:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"gcsDestination\") ? this.Serializable$get(\"gcsDestination\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"gcsDestination\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.VideoFileExportOptions, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.VideoFileExportOptionsFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.VideoOptionsParameters = function module$contents$eeapiclient$ee_api_client_VideoOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.VideoOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"framesPerSecond\", null == parameters.framesPerSecond ? null : parameters.framesPerSecond);\n  this.Serializable$set(\"maxFrames\", null == parameters.maxFrames ? null : parameters.maxFrames);\n  this.Serializable$set(\"maxPixelsPerFrame\", null == parameters.maxPixelsPerFrame ? null : parameters.maxPixelsPerFrame);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.VideoOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.VideoOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.VideoOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.VideoOptions.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"framesPerSecond\", \"maxFrames\", \"maxPixelsPerFrame\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.VideoOptions.prototype, {framesPerSecond:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"framesPerSecond\") ? this.Serializable$get(\"framesPerSecond\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"framesPerSecond\", value);\n}}, maxFrames:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxFrames\") ? this.Serializable$get(\"maxFrames\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxFrames\", value);\n}}, maxPixelsPerFrame:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"maxPixelsPerFrame\") ? this.Serializable$get(\"maxPixelsPerFrame\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"maxPixelsPerFrame\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.VideoThumbnailParameters = function module$contents$eeapiclient$ee_api_client_VideoThumbnailParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.VideoThumbnail = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"name\", null == parameters.name ? null : parameters.name);\n  this.Serializable$set(\"expression\", null == parameters.expression ? null : parameters.expression);\n  this.Serializable$set(\"videoOptions\", null == parameters.videoOptions ? null : parameters.videoOptions);\n  this.Serializable$set(\"fileFormat\", null == parameters.fileFormat ? null : parameters.fileFormat);\n  this.Serializable$set(\"grid\", null == parameters.grid ? null : parameters.grid);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.VideoThumbnail, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.VideoThumbnail.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.VideoThumbnail;\n};\nmodule$exports$eeapiclient$ee_api_client.VideoThumbnail.prototype.getPartialClassMetadata = function() {\n  return {enums:{fileFormat:module$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum}, keys:[\"expression\", \"fileFormat\", \"grid\", \"name\", \"videoOptions\"], objects:{expression:module$exports$eeapiclient$ee_api_client.Expression, grid:module$exports$eeapiclient$ee_api_client.PixelGrid, videoOptions:module$exports$eeapiclient$ee_api_client.VideoOptions}};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.VideoThumbnail.prototype, {expression:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"expression\") ? this.Serializable$get(\"expression\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"expression\", value);\n}}, fileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"fileFormat\") ? this.Serializable$get(\"fileFormat\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"fileFormat\", value);\n}}, grid:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"grid\") ? this.Serializable$get(\"grid\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"grid\", value);\n}}, name:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"name\") ? this.Serializable$get(\"name\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"name\", value);\n}}, videoOptions:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"videoOptions\") ? this.Serializable$get(\"videoOptions\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"videoOptions\", value);\n}}});\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.VideoThumbnail, {FileFormat:{configurable:!0, enumerable:!0, get:function() {\n  return module$exports$eeapiclient$ee_api_client.VideoThumbnailFileFormatEnum;\n}}});\nmodule$exports$eeapiclient$ee_api_client.VisualizationOptionsParameters = function module$contents$eeapiclient$ee_api_client_VisualizationOptionsParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.VisualizationOptions = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"ranges\", null == parameters.ranges ? null : parameters.ranges);\n  this.Serializable$set(\"paletteColors\", null == parameters.paletteColors ? null : parameters.paletteColors);\n  this.Serializable$set(\"gamma\", null == parameters.gamma ? null : parameters.gamma);\n  this.Serializable$set(\"opacity\", null == parameters.opacity ? null : parameters.opacity);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.VisualizationOptions, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.VisualizationOptions.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.VisualizationOptions;\n};\nmodule$exports$eeapiclient$ee_api_client.VisualizationOptions.prototype.getPartialClassMetadata = function() {\n  return {arrays:{ranges:module$exports$eeapiclient$ee_api_client.DoubleRange}, keys:[\"gamma\", \"opacity\", \"paletteColors\", \"ranges\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.VisualizationOptions.prototype, {gamma:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"gamma\") ? this.Serializable$get(\"gamma\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"gamma\", value);\n}}, opacity:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"opacity\") ? this.Serializable$get(\"opacity\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"opacity\", value);\n}}, paletteColors:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"paletteColors\") ? this.Serializable$get(\"paletteColors\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"paletteColors\", value);\n}}, ranges:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"ranges\") ? this.Serializable$get(\"ranges\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"ranges\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.WaitOperationRequestParameters = function module$contents$eeapiclient$ee_api_client_WaitOperationRequestParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.WaitOperationRequest = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"timeout\", null == parameters.timeout ? null : parameters.timeout);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.WaitOperationRequest, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.WaitOperationRequest.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.WaitOperationRequest;\n};\nmodule$exports$eeapiclient$ee_api_client.WaitOperationRequest.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"timeout\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.WaitOperationRequest.prototype, {timeout:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"timeout\") ? this.Serializable$get(\"timeout\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"timeout\", value);\n}}});\nmodule$exports$eeapiclient$ee_api_client.ZoomSubsetParameters = function module$contents$eeapiclient$ee_api_client_ZoomSubsetParameters() {\n};\nmodule$exports$eeapiclient$ee_api_client.ZoomSubset = function(parameters) {\n  parameters = void 0 === parameters ? {} : parameters;\n  module$exports$eeapiclient$domain_object.Serializable.call(this);\n  this.Serializable$set(\"start\", null == parameters.start ? null : parameters.start);\n  this.Serializable$set(\"end\", null == parameters.end ? null : parameters.end);\n  this.Serializable$set(\"min\", null == parameters.min ? null : parameters.min);\n  this.Serializable$set(\"max\", null == parameters.max ? null : parameters.max);\n};\n$jscomp.inherits(module$exports$eeapiclient$ee_api_client.ZoomSubset, module$exports$eeapiclient$domain_object.Serializable);\nmodule$exports$eeapiclient$ee_api_client.ZoomSubset.prototype.getConstructor = function() {\n  return module$exports$eeapiclient$ee_api_client.ZoomSubset;\n};\nmodule$exports$eeapiclient$ee_api_client.ZoomSubset.prototype.getPartialClassMetadata = function() {\n  return {keys:[\"end\", \"max\", \"min\", \"start\"]};\n};\n$jscomp.global.Object.defineProperties(module$exports$eeapiclient$ee_api_client.ZoomSubset.prototype, {end:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"end\") ? this.Serializable$get(\"end\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"end\", value);\n}}, max:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"max\") ? this.Serializable$get(\"max\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"max\", value);\n}}, min:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"min\") ? this.Serializable$get(\"min\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"min\", value);\n}}, start:{configurable:!0, enumerable:!0, get:function() {\n  return this.Serializable$has(\"start\") ? this.Serializable$get(\"start\") : null;\n}, set:function(value) {\n  this.Serializable$set(\"start\", value);\n}}});\nvar module$contents$eeapiclient$ee_api_client_PARAM_MAP_0 = {$Xgafv:\"$.xgafv\", access_token:\"access_token\", alt:\"alt\", assetId:\"assetId\", callback:\"callback\", endTime:\"endTime\", fields:\"fields\", filter:\"filter\", key:\"key\", oauth_token:\"oauth_token\", overwrite:\"overwrite\", pageSize:\"pageSize\", pageToken:\"pageToken\", prettyPrint:\"prettyPrint\", quotaUser:\"quotaUser\", region:\"region\", startTime:\"startTime\", uploadType:\"uploadType\", upload_protocol:\"upload_protocol\", \nview:\"view\"};\nmodule$exports$eeapiclient$ee_api_client.IProjectsAlgorithmsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsAlgorithmsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsAlgorithmsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsAlgorithmsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientImpl.prototype.list = function(parent, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.algorithms.list\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/algorithms\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ListAlgorithmsResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsApiClientViewEnum = function module$contents$eeapiclient$ee_api_client_IProjectsApiClientViewEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClientViewEnum = {BASIC:\"BASIC\", EARTH_ENGINE_ASSET_VIEW_UNSPECIFIED:\"EARTH_ENGINE_ASSET_VIEW_UNSPECIFIED\", FULL:\"FULL\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsApiClientViewEnum.EARTH_ENGINE_ASSET_VIEW_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ProjectsApiClientViewEnum.FULL, module$exports$eeapiclient$ee_api_client.ProjectsApiClientViewEnum.BASIC];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClientImpl.prototype.getCapabilities = function(parent, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.getCapabilities\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/capabilities\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Capabilities});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClientImpl.prototype.listAssets = function(parent, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.listAssets\", path:\"/\" + this.gapiVersion + \"/\" + parent + \":listAssets\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ListAssetsResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsAssetsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsAssetsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsAssetsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsAssetsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsAssetsApiClientViewEnum = function module$contents$eeapiclient$ee_api_client_IProjectsAssetsApiClientViewEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientViewEnum = {BASIC:\"BASIC\", EARTH_ENGINE_ASSET_VIEW_UNSPECIFIED:\"EARTH_ENGINE_ASSET_VIEW_UNSPECIFIED\", FULL:\"FULL\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientViewEnum.EARTH_ENGINE_ASSET_VIEW_UNSPECIFIED, module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientViewEnum.FULL, module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientViewEnum.BASIC];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.copy = function(sourceName, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(sourceName, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.copy\", path:\"/\" + this.gapiVersion + \"/\" + sourceName + \":copy\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/assets\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.delete = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"DELETE\", methodId:\"earthengine.projects.assets.delete\", path:\"/\" + this.gapiVersion + \"/\" + name, queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Empty});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.get = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.assets.get\", path:\"/\" + this.gapiVersion + \"/\" + name, queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.getIamPolicy = function(resource, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(resource, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.getIamPolicy\", path:\"/\" + this.gapiVersion + \"/\" + resource + \":getIamPolicy\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Policy});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.getLinked = function(name, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.getLinked\", path:\"/\" + this.gapiVersion + \"/\" + name + \":getLinked\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.getPixels = function(name, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.getPixels\", path:\"/\" + this.gapiVersion + \"/\" + name + \":getPixels\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.link = function(sourceName, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(sourceName, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.link\", path:\"/\" + this.gapiVersion + \"/\" + sourceName + \":link\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.listAssets = function(parent, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.assets.listAssets\", path:\"/\" + this.gapiVersion + \"/\" + parent + \":listAssets\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ListAssetsResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.listFeatures = function(asset, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(asset, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.assets.listFeatures\", path:\"/\" + this.gapiVersion + \"/\" + asset + \":listFeatures\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ListFeaturesResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.listImages = function(parent, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.assets.listImages\", path:\"/\" + this.gapiVersion + \"/\" + parent + \":listImages\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ListImagesResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.move = function(sourceName, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(sourceName, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.move\", path:\"/\" + this.gapiVersion + \"/\" + sourceName + \":move\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.patch = function(name, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"PATCH\", methodId:\"earthengine.projects.assets.patch\", path:\"/\" + this.gapiVersion + \"/\" + name, queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.setIamPolicy = function(resource, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(resource, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.setIamPolicy\", path:\"/\" + this.gapiVersion + \"/\" + resource + \":setIamPolicy\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Policy});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl.prototype.testIamPermissions = function(resource, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(resource, RegExp(\"^projects/[^/]+/assets/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.assets.testIamPermissions\", path:\"/\" + this.gapiVersion + \"/\" + resource + \":testIamPermissions\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.TestIamPermissionsResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsClassifierApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsClassifierApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsClassifierApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsClassifierApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientImpl.prototype.export = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.classifier.export\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/classifier:export\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsDmsMapsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsDmsMapsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsDmsMapsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsDmsMapsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.dmsMaps.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/dmsMaps\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.DMSMap});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsFeatureViewApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsFeatureViewApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsFeatureViewApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsFeatureViewApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.featureView.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/featureView\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.FeatureView});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFeatureViewApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsFilmstripThumbnailsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsFilmstripThumbnailsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsFilmstripThumbnailsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsFilmstripThumbnailsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.filmstripThumbnails.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/filmstripThumbnails\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.FilmstripThumbnail});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientImpl.prototype.getPixels = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/filmstripThumbnails/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.filmstripThumbnails.getPixels\", path:\"/\" + this.gapiVersion + \"/\" + name + \":getPixels\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsImageApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsImageApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsImageApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsImageApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsImageApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsImageApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsImageApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsImageApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsImageApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClientImpl.prototype.computePixels = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.image.computePixels\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/image:computePixels\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClientImpl.prototype.export = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.image.export\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/image:export\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClientImpl.prototype.import = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.image.import\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/image:import\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsImageCollectionApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsImageCollectionApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsImageCollectionApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsImageCollectionApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClientImpl.prototype.computeImages = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.imageCollection.computeImages\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/imageCollection:computeImages\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ComputeImagesResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsImageCollectionApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsAssetsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsAssetsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsAssetsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsAssetsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/locations/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.locations.assets.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/assets\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineAsset});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsAssetsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsFilmstripThumbnailsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsFilmstripThumbnailsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsFilmstripThumbnailsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsFilmstripThumbnailsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/locations/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.locations.filmstripThumbnails.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/filmstripThumbnails\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.FilmstripThumbnail});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsFilmstripThumbnailsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsMapsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsMapsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsMapsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsMapsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/locations/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.locations.maps.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/maps\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineMap});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsMapsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsTablesApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsTablesApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsTablesApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsTablesApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/locations/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.locations.tables.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/tables\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Table});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsTablesApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsThumbnailsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsThumbnailsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsThumbnailsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsThumbnailsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/locations/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.locations.thumbnails.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/thumbnails\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Thumbnail});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsThumbnailsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsVideoThumbnailsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsVideoThumbnailsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsLocationsVideoThumbnailsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsLocationsVideoThumbnailsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/locations/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.locations.videoThumbnails.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/videoThumbnails\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.VideoThumbnail});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsLocationsVideoThumbnailsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsMapApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsMapApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsMapApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsMapApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsMapApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsMapApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsMapApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsMapApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsMapApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapApiClientImpl.prototype.export = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.map.export\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/map:export\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsMapsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsMapsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsMapsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsMapsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsMapsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsMapsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.maps.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/maps\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.EarthEngineMap});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsMapsTilesApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsMapsTilesApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsMapsTilesApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsMapsTilesApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClientImpl.prototype.get = function(parent, zoom, x, y, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+/maps/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.maps.tiles.get\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/tiles/\" + zoom + \"/\" + x + \"/\" + y, queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsMapsTilesApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsOperationsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsOperationsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsOperationsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsOperationsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl.prototype.cancel = function(name, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/operations/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.operations.cancel\", path:\"/\" + this.gapiVersion + \"/\" + name + \":cancel\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Empty});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl.prototype.delete = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/operations/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"DELETE\", methodId:\"earthengine.projects.operations.delete\", path:\"/\" + this.gapiVersion + \"/\" + name, queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Empty});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl.prototype.get = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/operations/.*$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.operations.get\", path:\"/\" + this.gapiVersion + \"/\" + name, queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl.prototype.list = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.operations.list\", path:\"/\" + this.gapiVersion + \"/\" + name + \"/operations\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ListOperationsResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl.prototype.wait = function(name, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/operations/.*$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.operations.wait\", path:\"/\" + this.gapiVersion + \"/\" + name + \":wait\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsTableApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsTableApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsTableApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsTableApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsTableApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsTableApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsTableApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsTableApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsTableApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClientImpl.prototype.computeFeatures = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.table.computeFeatures\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/table:computeFeatures\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ComputeFeaturesResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClientImpl.prototype.export = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.table.export\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/table:export\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClientImpl.prototype.import = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.table.import\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/table:import\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTableApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsTablesApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsTablesApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTablesApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsTablesApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsTablesApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsTablesApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsTablesApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.tables.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/tables\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Table});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientImpl.prototype.getFeatures = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/tables/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.tables.getFeatures\", path:\"/\" + this.gapiVersion + \"/\" + name + \":getFeatures\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsTablesApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsThumbnailsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsThumbnailsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsThumbnailsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsThumbnailsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.thumbnails.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/thumbnails\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Thumbnail});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientImpl.prototype.getPixels = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/thumbnails/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.thumbnails.getPixels\", path:\"/\" + this.gapiVersion + \"/\" + name + \":getPixels\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsValueApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsValueApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsValueApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsValueApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsValueApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsValueApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsValueApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsValueApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsValueApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsValueApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsValueApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsValueApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsValueApiClientImpl.prototype.compute = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.value.compute\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/value:compute\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.ComputeValueResponse});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsValueApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsVideoApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsVideoApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsVideoApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsVideoApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsVideoApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsVideoApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientImpl.prototype.export = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.video.export\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/video:export\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsVideoMapApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsVideoMapApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsVideoMapApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsVideoMapApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientImpl.prototype.export = function(project, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(project, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.videoMap.export\", path:\"/\" + this.gapiVersion + \"/\" + project + \"/videoMap:export\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.Operation});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClient = function() {\n};\nmodule$exports$eeapiclient$ee_api_client.IProjectsVideoThumbnailsApiClient$XgafvEnum = function module$contents$eeapiclient$ee_api_client_IProjectsVideoThumbnailsApiClient$XgafvEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClient$XgafvEnum = {1:\"1\", 2:\"2\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClient$XgafvEnum[1], module$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClient$XgafvEnum[2]];\n}};\nmodule$exports$eeapiclient$ee_api_client.IProjectsVideoThumbnailsApiClientAltEnum = function module$contents$eeapiclient$ee_api_client_IProjectsVideoThumbnailsApiClientAltEnum() {\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientAltEnum = {JSON:\"json\", MEDIA:\"media\", PROTO:\"proto\", values:function() {\n  return [module$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientAltEnum.JSON, module$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientAltEnum.MEDIA, module$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientAltEnum.PROTO];\n}};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientImpl = function(gapiVersion, gapiRequestService, apiClientHookFactory) {\n  this.gapiVersion = gapiVersion;\n  this.$apiClient = new module$exports$eeapiclient$promise_api_client.PromiseApiClient(gapiRequestService, void 0 === apiClientHookFactory ? null : apiClientHookFactory);\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientImpl.prototype.create = function(parent, $requestBody, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(parent, RegExp(\"^projects/[^/]+$\"));\n  return this.$apiClient.$request({body:$requestBody, httpMethod:\"POST\", methodId:\"earthengine.projects.videoThumbnails.create\", path:\"/\" + this.gapiVersion + \"/\" + parent + \"/videoThumbnails\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.VideoThumbnail});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientImpl.prototype.getPixels = function(name, namedParameters, passthroughNamedParameters) {\n  namedParameters = void 0 === namedParameters ? {} : namedParameters;\n  passthroughNamedParameters = void 0 === passthroughNamedParameters ? {} : passthroughNamedParameters;\n  this.$apiClient.$validateParameter(name, RegExp(\"^projects/[^/]+/videoThumbnails/[^/]+$\"));\n  return this.$apiClient.$request({body:null, httpMethod:\"GET\", methodId:\"earthengine.projects.videoThumbnails.getPixels\", path:\"/\" + this.gapiVersion + \"/\" + name + \":getPixels\", queryParams:module$contents$eeapiclient$request_params_buildQueryParams(namedParameters, module$contents$eeapiclient$ee_api_client_PARAM_MAP_0, passthroughNamedParameters), responseCtor:module$exports$eeapiclient$ee_api_client.HttpBody});\n};\nmodule$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClient = function() {\n};\nee.api = module$exports$eeapiclient$ee_api_client;\nvar module$exports$ee$apiVersion = {V1ALPHA:\"v1alpha\"};\nmodule$exports$ee$apiVersion.VERSION = module$exports$ee$apiVersion.V1ALPHA;\nvar module$exports$eeapiclient$promise_request_service = {}, module$contents$eeapiclient$promise_request_service_module = module$contents$eeapiclient$promise_request_service_module || {id:\"javascript/typescript/contrib/apiclient/request_service/promise_request_service.closure.js\"};\nmodule$exports$eeapiclient$promise_request_service.PromiseRequestService = function() {\n};\nmodule$exports$eeapiclient$promise_request_service.PromiseRequestService.prototype.send = function(params, responseCtor) {\n  module$contents$eeapiclient$request_params_processParams(params);\n  return this.makeRequest(params).then(function(response) {\n    return responseCtor ? module$contents$eeapiclient$domain_object_deserialize(responseCtor, response) : response;\n  });\n};\ngoog.async = {};\ngoog.async.FreeList = function(create, reset, limit) {\n  this.limit_ = limit;\n  this.create_ = create;\n  this.reset_ = reset;\n  this.occupants_ = 0;\n  this.head_ = null;\n};\ngoog.async.FreeList.prototype.get = function() {\n  if (0 < this.occupants_) {\n    this.occupants_--;\n    var item = this.head_;\n    this.head_ = item.next;\n    item.next = null;\n  } else {\n    item = this.create_();\n  }\n  return item;\n};\ngoog.async.FreeList.prototype.put = function(item) {\n  this.reset_(item);\n  this.occupants_ < this.limit_ && (this.occupants_++, item.next = this.head_, this.head_ = item);\n};\ngoog.async.FreeList.prototype.occupants = function() {\n  return this.occupants_;\n};\ngoog.dom.BrowserFeature = {};\ngoog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS = !1;\ngoog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS = !1;\ngoog.dom.BrowserFeature.detectOffscreenCanvas_ = function(contextName) {\n  try {\n    return !!(new self.OffscreenCanvas(0, 0)).getContext(contextName);\n  } catch (ex) {\n  }\n  return !1;\n};\ngoog.dom.BrowserFeature.OFFSCREEN_CANVAS_2D = !goog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS && (goog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS || goog.dom.BrowserFeature.detectOffscreenCanvas_(\"2d\"));\ngoog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES = !0;\ngoog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE = !0;\ngoog.dom.BrowserFeature.CAN_USE_INNER_TEXT = !1;\ngoog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY = goog.userAgent.IE || goog.userAgent.WEBKIT;\ngoog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT = goog.userAgent.IE;\ngoog.math.Coordinate = function(opt_x, opt_y) {\n  this.x = void 0 !== opt_x ? opt_x : 0;\n  this.y = void 0 !== opt_y ? opt_y : 0;\n};\ngoog.math.Coordinate.prototype.clone = function() {\n  return new goog.math.Coordinate(this.x, this.y);\n};\ngoog.DEBUG && (goog.math.Coordinate.prototype.toString = function() {\n  return \"(\" + this.x + \", \" + this.y + \")\";\n});\ngoog.math.Coordinate.prototype.equals = function(other) {\n  return other instanceof goog.math.Coordinate && goog.math.Coordinate.equals(this, other);\n};\ngoog.math.Coordinate.equals = function(a, b) {\n  return a == b ? !0 : a && b ? a.x == b.x && a.y == b.y : !1;\n};\ngoog.math.Coordinate.distance = function(a, b) {\n  var dx = a.x - b.x, dy = a.y - b.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\ngoog.math.Coordinate.magnitude = function(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n};\ngoog.math.Coordinate.azimuth = function(a) {\n  return goog.math.angle(0, 0, a.x, a.y);\n};\ngoog.math.Coordinate.squaredDistance = function(a, b) {\n  var dx = a.x - b.x, dy = a.y - b.y;\n  return dx * dx + dy * dy;\n};\ngoog.math.Coordinate.difference = function(a, b) {\n  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);\n};\ngoog.math.Coordinate.sum = function(a, b) {\n  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);\n};\ngoog.math.Coordinate.prototype.ceil = function() {\n  this.x = Math.ceil(this.x);\n  this.y = Math.ceil(this.y);\n  return this;\n};\ngoog.math.Coordinate.prototype.floor = function() {\n  this.x = Math.floor(this.x);\n  this.y = Math.floor(this.y);\n  return this;\n};\ngoog.math.Coordinate.prototype.round = function() {\n  this.x = Math.round(this.x);\n  this.y = Math.round(this.y);\n  return this;\n};\ngoog.math.Coordinate.prototype.translate = function(tx, opt_ty) {\n  tx instanceof goog.math.Coordinate ? (this.x += tx.x, this.y += tx.y) : (this.x += Number(tx), \"number\" === typeof opt_ty && (this.y += opt_ty));\n  return this;\n};\ngoog.math.Coordinate.prototype.scale = function(sx, opt_sy) {\n  var sy;\n  this.x *= sx;\n  this.y *= \"number\" === typeof opt_sy ? opt_sy : sx;\n  return this;\n};\ngoog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {\n  var center = opt_center || new goog.math.Coordinate(0, 0), x = this.x, y = this.y, cos = Math.cos(radians), sin = Math.sin(radians);\n  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;\n  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;\n};\ngoog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {\n  this.rotateRadians(goog.math.toRadians(degrees), opt_center);\n};\ngoog.math.Size = function(width, height) {\n  this.width = width;\n  this.height = height;\n};\ngoog.math.Size.equals = function(a, b) {\n  return a == b ? !0 : a && b ? a.width == b.width && a.height == b.height : !1;\n};\ngoog.math.Size.prototype.clone = function() {\n  return new goog.math.Size(this.width, this.height);\n};\ngoog.DEBUG && (goog.math.Size.prototype.toString = function() {\n  return \"(\" + this.width + \" x \" + this.height + \")\";\n});\ngoog.math.Size.prototype.getLongest = function() {\n  return Math.max(this.width, this.height);\n};\ngoog.math.Size.prototype.getShortest = function() {\n  return Math.min(this.width, this.height);\n};\ngoog.math.Size.prototype.area = function() {\n  return this.width * this.height;\n};\ngoog.math.Size.prototype.perimeter = function() {\n  return 2 * (this.width + this.height);\n};\ngoog.math.Size.prototype.aspectRatio = function() {\n  return this.width / this.height;\n};\ngoog.math.Size.prototype.isEmpty = function() {\n  return !this.area();\n};\ngoog.math.Size.prototype.ceil = function() {\n  this.width = Math.ceil(this.width);\n  this.height = Math.ceil(this.height);\n  return this;\n};\ngoog.math.Size.prototype.fitsInside = function(target) {\n  return this.width <= target.width && this.height <= target.height;\n};\ngoog.math.Size.prototype.floor = function() {\n  this.width = Math.floor(this.width);\n  this.height = Math.floor(this.height);\n  return this;\n};\ngoog.math.Size.prototype.round = function() {\n  this.width = Math.round(this.width);\n  this.height = Math.round(this.height);\n  return this;\n};\ngoog.math.Size.prototype.scale = function(sx, opt_sy) {\n  var sy;\n  this.width *= sx;\n  this.height *= \"number\" === typeof opt_sy ? opt_sy : sx;\n  return this;\n};\ngoog.math.Size.prototype.scaleToCover = function(target) {\n  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;\n  return this.scale(s);\n};\ngoog.math.Size.prototype.scaleToFit = function(target) {\n  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;\n  return this.scale(s);\n};\ngoog.dom.Appendable = {};\ngoog.dom.ASSUME_QUIRKS_MODE = !1;\ngoog.dom.ASSUME_STANDARDS_MODE = !1;\ngoog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;\ngoog.dom.getDomHelper = function(opt_element) {\n  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper());\n};\ngoog.dom.getDocument = function() {\n  return document;\n};\ngoog.dom.getElement = function(element) {\n  return goog.dom.getElementHelper_(document, element);\n};\ngoog.dom.getHTMLElement = function(id) {\n  var element = goog.dom.getElement(id);\n  return element ? goog.asserts.assertInstanceof(element, HTMLElement) : null;\n};\ngoog.dom.getElementHelper_ = function(doc, element) {\n  return \"string\" === typeof element ? doc.getElementById(element) : element;\n};\ngoog.dom.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(document, id);\n};\ngoog.dom.getRequiredHTMLElement = function(id) {\n  return goog.asserts.assertInstanceof(goog.dom.getRequiredElementHelper_(document, id), HTMLElement);\n};\ngoog.dom.getRequiredElementHelper_ = function(doc, id) {\n  goog.asserts.assertString(id);\n  var element = goog.dom.getElementHelper_(doc, id);\n  return element = goog.asserts.assertElement(element, \"No element found with id: \" + id);\n};\ngoog.dom.$ = goog.dom.getElement;\ngoog.dom.getElementsByTagName = function(tagName, opt_parent) {\n  return (opt_parent || document).getElementsByTagName(String(tagName));\n};\ngoog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);\n};\ngoog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(document, opt_tag, opt_class, opt_el);\n};\ngoog.dom.getElementsByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  return goog.dom.canUseQuerySelector_(parent) ? parent.querySelectorAll(\".\" + className) : goog.dom.getElementsByTagNameAndClass_(document, \"*\", className, opt_el);\n};\ngoog.dom.getElementByClass = function(className, opt_el) {\n  var parent = opt_el || document, retVal = null;\n  return (retVal = parent.getElementsByClassName ? parent.getElementsByClassName(className)[0] : goog.dom.getElementByTagNameAndClass_(document, \"*\", className, opt_el)) || null;\n};\ngoog.dom.getHTMLElementByClass = function(className, opt_parent) {\n  var element = goog.dom.getElementByClass(className, opt_parent);\n  return element ? goog.asserts.assertInstanceof(element, HTMLElement) : null;\n};\ngoog.dom.getRequiredElementByClass = function(className, opt_root) {\n  var retValue = goog.dom.getElementByClass(className, opt_root);\n  return goog.asserts.assert(retValue, \"No element found with className: \" + className);\n};\ngoog.dom.getRequiredHTMLElementByClass = function(className, opt_parent) {\n  var retValue = goog.dom.getElementByClass(className, opt_parent);\n  return goog.asserts.assertInstanceof(retValue, HTMLElement, \"No HTMLElement found with className: \" + className);\n};\ngoog.dom.canUseQuerySelector_ = function(parent) {\n  return !(!parent.querySelectorAll || !parent.querySelector);\n};\ngoog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc, tagName = opt_tag && \"*\" != opt_tag ? String(opt_tag).toUpperCase() : \"\";\n  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {\n    return parent.querySelectorAll(tagName + (opt_class ? \".\" + opt_class : \"\"));\n  }\n  if (opt_class && parent.getElementsByClassName) {\n    var els = parent.getElementsByClassName(opt_class);\n    if (tagName) {\n      for (var arrayLike = {}, len = 0, i = 0, el; el = els[i]; i++) {\n        tagName == el.nodeName && (arrayLike[len++] = el);\n      }\n      arrayLike.length = len;\n      return arrayLike;\n    }\n    return els;\n  }\n  els = parent.getElementsByTagName(tagName || \"*\");\n  if (opt_class) {\n    arrayLike = {};\n    for (i = len = 0; el = els[i]; i++) {\n      var className = el.className;\n      \"function\" == typeof className.split && module$contents$goog$array_contains(className.split(/\\s+/), opt_class) && (arrayLike[len++] = el);\n    }\n    arrayLike.length = len;\n    return arrayLike;\n  }\n  return els;\n};\ngoog.dom.getElementByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc, tag = opt_tag && \"*\" != opt_tag ? String(opt_tag).toUpperCase() : \"\";\n  return goog.dom.canUseQuerySelector_(parent) && (tag || opt_class) ? parent.querySelector(tag + (opt_class ? \".\" + opt_class : \"\")) : goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el)[0] || null;\n};\ngoog.dom.$$ = goog.dom.getElementsByTagNameAndClass;\ngoog.dom.setProperties = function(element, properties) {\n  module$contents$goog$object_forEach(properties, function(val, key) {\n    val && \"object\" == typeof val && val.implementsGoogStringTypedString && (val = val.getTypedStringValue());\n    \"style\" == key ? element.style.cssText = val : \"class\" == key ? element.className = val : \"for\" == key ? element.htmlFor = val : goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key) ? element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val) : goog.string.startsWith(key, \"aria-\") || goog.string.startsWith(key, \"data-\") ? element.setAttribute(key, val) : element[key] = val;\n  });\n};\ngoog.dom.DIRECT_ATTRIBUTE_MAP_ = {cellpadding:\"cellPadding\", cellspacing:\"cellSpacing\", colspan:\"colSpan\", frameborder:\"frameBorder\", height:\"height\", maxlength:\"maxLength\", nonce:\"nonce\", role:\"role\", rowspan:\"rowSpan\", type:\"type\", usemap:\"useMap\", valign:\"vAlign\", width:\"width\"};\ngoog.dom.getViewportSize = function(opt_window) {\n  return goog.dom.getViewportSize_(opt_window || window);\n};\ngoog.dom.getViewportSize_ = function(win) {\n  var doc = win.document, el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;\n  return new goog.math.Size(el.clientWidth, el.clientHeight);\n};\ngoog.dom.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(window);\n};\ngoog.dom.getDocumentHeightForWindow = function(win) {\n  return goog.dom.getDocumentHeight_(win);\n};\ngoog.dom.getDocumentHeight_ = function(win) {\n  var doc = win.document, height = 0;\n  if (doc) {\n    var body = doc.body, docEl = doc.documentElement;\n    if (!docEl || !body) {\n      return 0;\n    }\n    var vh = goog.dom.getViewportSize_(win).height;\n    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {\n      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;\n    } else {\n      var sh = docEl.scrollHeight, oh = docEl.offsetHeight;\n      docEl.clientHeight != oh && (sh = body.scrollHeight, oh = body.offsetHeight);\n      height = sh > vh ? sh > oh ? sh : oh : sh < oh ? sh : oh;\n    }\n  }\n  return height;\n};\ngoog.dom.getPageScroll = function(opt_window) {\n  return goog.dom.getDomHelper((opt_window || goog.global || window).document).getDocumentScroll();\n};\ngoog.dom.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(document);\n};\ngoog.dom.getDocumentScroll_ = function(doc) {\n  var el = goog.dom.getDocumentScrollElement_(doc), win = goog.dom.getWindow_(doc);\n  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(\"10\") && win.pageYOffset != el.scrollTop ? new goog.math.Coordinate(el.scrollLeft, el.scrollTop) : new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\ngoog.dom.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(document);\n};\ngoog.dom.getDocumentScrollElement_ = function(doc) {\n  return doc.scrollingElement ? doc.scrollingElement : !goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body || doc.documentElement;\n};\ngoog.dom.getWindow = function(opt_doc) {\n  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;\n};\ngoog.dom.getWindow_ = function(doc) {\n  return doc.parentWindow || doc.defaultView;\n};\ngoog.dom.createDom = function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(document, arguments);\n};\ngoog.dom.createDom_ = function(doc, args) {\n  var attributes = args[1], element = goog.dom.createElement_(doc, String(args[0]));\n  attributes && (\"string\" === typeof attributes ? element.className = attributes : Array.isArray(attributes) ? element.className = attributes.join(\" \") : goog.dom.setProperties(element, attributes));\n  2 < args.length && goog.dom.append_(doc, element, args, 2);\n  return element;\n};\ngoog.dom.append_ = function(doc, parent, args, startIndex) {\n  function childHandler(child) {\n    child && parent.appendChild(\"string\" === typeof child ? doc.createTextNode(child) : child);\n  }\n  for (var i = startIndex; i < args.length; i++) {\n    var arg = args[i];\n    goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg) ? module$contents$goog$array_forEach(goog.dom.isNodeList(arg) ? module$contents$goog$array_toArray(arg) : arg, childHandler) : childHandler(arg);\n  }\n};\ngoog.dom.$dom = goog.dom.createDom;\ngoog.dom.createElement = function(name) {\n  return goog.dom.createElement_(document, name);\n};\ngoog.dom.createElement_ = function(doc, name) {\n  name = String(name);\n  \"application/xhtml+xml\" === doc.contentType && (name = name.toLowerCase());\n  return doc.createElement(name);\n};\ngoog.dom.createTextNode = function(content) {\n  return document.createTextNode(String(content));\n};\ngoog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);\n};\ngoog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {\n  for (var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE), tbody = table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY)), i = 0; i < rows; i++) {\n    for (var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR), j = 0; j < columns; j++) {\n      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);\n      fillWithNbsp && goog.dom.setTextContent(td, goog.string.Unicode.NBSP);\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n  }\n  return table;\n};\ngoog.dom.constHtmlToNode = function(var_args) {\n  var stringArray = Array.prototype.map.call(arguments, goog.string.Const.unwrap), safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\"Constant HTML string, that gets turned into a Node later, so it will be automatically balanced.\"), stringArray.join(\"\"));\n  return goog.dom.safeHtmlToNode(safeHtml);\n};\ngoog.dom.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(document, html);\n};\ngoog.dom.safeHtmlToNode_ = function(doc, html) {\n  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  goog.userAgent.IE ? (goog.dom.safe.setInnerHtml(tempDiv, module$contents$goog$html$SafeHtml_SafeHtml.concat(module$contents$goog$html$SafeHtml_SafeHtml.BR, html)), tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild))) : goog.dom.safe.setInnerHtml(tempDiv, html);\n  return goog.dom.childrenToNode_(doc, tempDiv);\n};\ngoog.dom.childrenToNode_ = function(doc, tempDiv) {\n  if (1 == tempDiv.childNodes.length) {\n    return tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  }\n  for (var fragment = doc.createDocumentFragment(); tempDiv.firstChild;) {\n    fragment.appendChild(tempDiv.firstChild);\n  }\n  return fragment;\n};\ngoog.dom.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(document);\n};\ngoog.dom.isCss1CompatMode_ = function(doc) {\n  return goog.dom.COMPAT_MODE_KNOWN_ ? goog.dom.ASSUME_STANDARDS_MODE : \"CSS1Compat\" == doc.compatMode;\n};\ngoog.dom.canHaveChildren = function(node) {\n  if (node.nodeType != goog.dom.NodeType.ELEMENT) {\n    return !1;\n  }\n  switch(node.tagName) {\n    case String(goog.dom.TagName.APPLET):\n    case String(goog.dom.TagName.AREA):\n    case String(goog.dom.TagName.BASE):\n    case String(goog.dom.TagName.BR):\n    case String(goog.dom.TagName.COL):\n    case String(goog.dom.TagName.COMMAND):\n    case String(goog.dom.TagName.EMBED):\n    case String(goog.dom.TagName.FRAME):\n    case String(goog.dom.TagName.HR):\n    case String(goog.dom.TagName.IMG):\n    case String(goog.dom.TagName.INPUT):\n    case String(goog.dom.TagName.IFRAME):\n    case String(goog.dom.TagName.ISINDEX):\n    case String(goog.dom.TagName.KEYGEN):\n    case String(goog.dom.TagName.LINK):\n    case String(goog.dom.TagName.NOFRAMES):\n    case String(goog.dom.TagName.NOSCRIPT):\n    case String(goog.dom.TagName.META):\n    case String(goog.dom.TagName.OBJECT):\n    case String(goog.dom.TagName.PARAM):\n    case String(goog.dom.TagName.SCRIPT):\n    case String(goog.dom.TagName.SOURCE):\n    case String(goog.dom.TagName.STYLE):\n    case String(goog.dom.TagName.TRACK):\n    case String(goog.dom.TagName.WBR):\n      return !1;\n  }\n  return !0;\n};\ngoog.dom.appendChild = function(parent, child) {\n  goog.asserts.assert(null != parent && null != child, \"goog.dom.appendChild expects non-null arguments\");\n  parent.appendChild(child);\n};\ngoog.dom.append = function(parent, var_args) {\n  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);\n};\ngoog.dom.removeChildren = function(node) {\n  for (var child; child = node.firstChild;) {\n    node.removeChild(child);\n  }\n};\ngoog.dom.insertSiblingBefore = function(newNode, refNode) {\n  goog.asserts.assert(null != newNode && null != refNode, \"goog.dom.insertSiblingBefore expects non-null arguments\");\n  refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode);\n};\ngoog.dom.insertSiblingAfter = function(newNode, refNode) {\n  goog.asserts.assert(null != newNode && null != refNode, \"goog.dom.insertSiblingAfter expects non-null arguments\");\n  refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n};\ngoog.dom.insertChildAt = function(parent, child, index) {\n  goog.asserts.assert(null != parent, \"goog.dom.insertChildAt expects a non-null parent\");\n  parent.insertBefore(child, parent.childNodes[index] || null);\n};\ngoog.dom.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\ngoog.dom.replaceNode = function(newNode, oldNode) {\n  goog.asserts.assert(null != newNode && null != oldNode, \"goog.dom.replaceNode expects non-null arguments\");\n  var parent = oldNode.parentNode;\n  parent && parent.replaceChild(newNode, oldNode);\n};\ngoog.dom.copyContents = function(target, source) {\n  goog.asserts.assert(null != target && null != source, \"goog.dom.copyContents expects non-null arguments\");\n  var childNodes = source.cloneNode(!0).childNodes;\n  for (goog.dom.removeChildren(target); childNodes.length;) {\n    target.appendChild(childNodes[0]);\n  }\n};\ngoog.dom.flattenElement = function(element) {\n  var child, parent = element.parentNode;\n  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    if (element.removeNode) {\n      return element.removeNode(!1);\n    }\n    for (; child = element.firstChild;) {\n      parent.insertBefore(child, element);\n    }\n    return goog.dom.removeNode(element);\n  }\n};\ngoog.dom.getChildren = function(element) {\n  return void 0 != element.children ? element.children : Array.prototype.filter.call(element.childNodes, function(node) {\n    return node.nodeType == goog.dom.NodeType.ELEMENT;\n  });\n};\ngoog.dom.getFirstElementChild = function(node) {\n  return void 0 !== node.firstElementChild ? node.firstElementChild : goog.dom.getNextElementNode_(node.firstChild, !0);\n};\ngoog.dom.getLastElementChild = function(node) {\n  return void 0 !== node.lastElementChild ? node.lastElementChild : goog.dom.getNextElementNode_(node.lastChild, !1);\n};\ngoog.dom.getNextElementSibling = function(node) {\n  return void 0 !== node.nextElementSibling ? node.nextElementSibling : goog.dom.getNextElementNode_(node.nextSibling, !0);\n};\ngoog.dom.getPreviousElementSibling = function(node) {\n  return void 0 !== node.previousElementSibling ? node.previousElementSibling : goog.dom.getNextElementNode_(node.previousSibling, !1);\n};\ngoog.dom.getNextElementNode_ = function(node, forward) {\n  for (; node && node.nodeType != goog.dom.NodeType.ELEMENT;) {\n    node = forward ? node.nextSibling : node.previousSibling;\n  }\n  return node;\n};\ngoog.dom.getNextNode = function(node) {\n  if (!node) {\n    return null;\n  }\n  if (node.firstChild) {\n    return node.firstChild;\n  }\n  for (; node && !node.nextSibling;) {\n    node = node.parentNode;\n  }\n  return node ? node.nextSibling : null;\n};\ngoog.dom.getPreviousNode = function(node) {\n  if (!node) {\n    return null;\n  }\n  if (!node.previousSibling) {\n    return node.parentNode;\n  }\n  for (node = node.previousSibling; node && node.lastChild;) {\n    node = node.lastChild;\n  }\n  return node;\n};\ngoog.dom.isNodeLike = function(obj) {\n  return goog.isObject(obj) && 0 < obj.nodeType;\n};\ngoog.dom.isElement = function(obj) {\n  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;\n};\ngoog.dom.isWindow = function(obj) {\n  return goog.isObject(obj) && obj.window == obj;\n};\ngoog.dom.getParentElement = function(element) {\n  var parent;\n  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY && !(goog.userAgent.IE && goog.userAgent.isVersionOrHigher(\"9\") && !goog.userAgent.isVersionOrHigher(\"10\") && goog.global.SVGElement && element instanceof goog.global.SVGElement) && (parent = element.parentElement)) {\n    return parent;\n  }\n  parent = element.parentNode;\n  return goog.dom.isElement(parent) ? parent : null;\n};\ngoog.dom.contains = function(parent, descendant) {\n  if (!parent || !descendant) {\n    return !1;\n  }\n  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {\n    return parent == descendant || parent.contains(descendant);\n  }\n  if (\"undefined\" != typeof parent.compareDocumentPosition) {\n    return parent == descendant || !!(parent.compareDocumentPosition(descendant) & 16);\n  }\n  for (; descendant && parent != descendant;) {\n    descendant = descendant.parentNode;\n  }\n  return descendant == parent;\n};\ngoog.dom.compareNodeOrder = function(node1, node2) {\n  if (node1 == node2) {\n    return 0;\n  }\n  if (node1.compareDocumentPosition) {\n    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;\n  }\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return -1;\n    }\n    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return 1;\n    }\n  }\n  if (\"sourceIndex\" in node1 || node1.parentNode && \"sourceIndex\" in node1.parentNode) {\n    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT, isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;\n    if (isElement1 && isElement2) {\n      return node1.sourceIndex - node2.sourceIndex;\n    }\n    var parent1 = node1.parentNode, parent2 = node2.parentNode;\n    return parent1 == parent2 ? goog.dom.compareSiblingOrder_(node1, node2) : !isElement1 && goog.dom.contains(parent1, node2) ? -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2) : !isElement2 && goog.dom.contains(parent2, node1) ? goog.dom.compareParentsDescendantNodeIe_(node2, node1) : (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);\n  }\n  var doc = goog.dom.getOwnerDocument(node1);\n  var range1 = doc.createRange();\n  range1.selectNode(node1);\n  range1.collapse(!0);\n  var range2 = doc.createRange();\n  range2.selectNode(node2);\n  range2.collapse(!0);\n  return range1.compareBoundaryPoints(goog.global.Range.START_TO_END, range2);\n};\ngoog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {\n  var parent = textNode.parentNode;\n  if (parent == node) {\n    return -1;\n  }\n  for (var sibling = node; sibling.parentNode != parent;) {\n    sibling = sibling.parentNode;\n  }\n  return goog.dom.compareSiblingOrder_(sibling, textNode);\n};\ngoog.dom.compareSiblingOrder_ = function(node1, node2) {\n  for (var s = node2; s = s.previousSibling;) {\n    if (s == node1) {\n      return -1;\n    }\n  }\n  return 1;\n};\ngoog.dom.findCommonAncestor = function(var_args) {\n  var i, count = arguments.length;\n  if (!count) {\n    return null;\n  }\n  if (1 == count) {\n    return arguments[0];\n  }\n  var paths = [], minLength = Infinity;\n  for (i = 0; i < count; i++) {\n    for (var ancestors = [], node = arguments[i]; node;) {\n      ancestors.unshift(node), node = node.parentNode;\n    }\n    paths.push(ancestors);\n    minLength = Math.min(minLength, ancestors.length);\n  }\n  var output = null;\n  for (i = 0; i < minLength; i++) {\n    for (var first = paths[0][i], j = 1; j < count; j++) {\n      if (first != paths[j][i]) {\n        return output;\n      }\n    }\n    output = first;\n  }\n  return output;\n};\ngoog.dom.isInDocument = function(node) {\n  return 16 == (node.ownerDocument.compareDocumentPosition(node) & 16);\n};\ngoog.dom.getOwnerDocument = function(node) {\n  goog.asserts.assert(node, \"Node cannot be null or undefined.\");\n  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document;\n};\ngoog.dom.getFrameContentDocument = function(frame) {\n  return frame.contentDocument || frame.contentWindow.document;\n};\ngoog.dom.getFrameContentWindow = function(frame) {\n  try {\n    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);\n  } catch (e) {\n  }\n  return null;\n};\ngoog.dom.setTextContent = function(node, text) {\n  goog.asserts.assert(null != node, \"goog.dom.setTextContent expects a non-null value for node\");\n  if (\"textContent\" in node) {\n    node.textContent = text;\n  } else {\n    if (node.nodeType == goog.dom.NodeType.TEXT) {\n      node.data = String(text);\n    } else {\n      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {\n        for (; node.lastChild != node.firstChild;) {\n          node.removeChild(goog.asserts.assert(node.lastChild));\n        }\n        node.firstChild.data = String(text);\n      } else {\n        goog.dom.removeChildren(node);\n        var doc = goog.dom.getOwnerDocument(node);\n        node.appendChild(doc.createTextNode(String(text)));\n      }\n    }\n  }\n};\ngoog.dom.getOuterHtml = function(element) {\n  goog.asserts.assert(null !== element, \"goog.dom.getOuterHtml expects a non-null value for element\");\n  if (\"outerHTML\" in element) {\n    return element.outerHTML;\n  }\n  var doc = goog.dom.getOwnerDocument(element), div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  div.appendChild(element.cloneNode(!0));\n  return div.innerHTML;\n};\ngoog.dom.findNode = function(root, p) {\n  var rv = [];\n  return goog.dom.findNodes_(root, p, rv, !0) ? rv[0] : void 0;\n};\ngoog.dom.findNodes = function(root, p) {\n  var rv = [];\n  goog.dom.findNodes_(root, p, rv, !1);\n  return rv;\n};\ngoog.dom.findNodes_ = function(root, p, rv, findOne) {\n  if (null != root) {\n    for (var child = root.firstChild; child;) {\n      if (p(child) && (rv.push(child), findOne) || goog.dom.findNodes_(child, p, rv, findOne)) {\n        return !0;\n      }\n      child = child.nextSibling;\n    }\n  }\n  return !1;\n};\ngoog.dom.findElement = function(root, pred) {\n  for (var stack = goog.dom.getChildrenReverse_(root); 0 < stack.length;) {\n    var next = stack.pop();\n    if (pred(next)) {\n      return next;\n    }\n    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return null;\n};\ngoog.dom.findElements = function(root, pred) {\n  for (var result = [], stack = goog.dom.getChildrenReverse_(root); 0 < stack.length;) {\n    var next = stack.pop();\n    pred(next) && result.push(next);\n    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return result;\n};\ngoog.dom.getChildrenReverse_ = function(node) {\n  if (node.nodeType == goog.dom.NodeType.DOCUMENT) {\n    return [node.documentElement];\n  }\n  for (var children = [], c = node.lastElementChild; c; c = c.previousElementSibling) {\n    children.push(c);\n  }\n  return children;\n};\ngoog.dom.TAGS_TO_IGNORE_ = {SCRIPT:1, STYLE:1, HEAD:1, IFRAME:1, OBJECT:1};\ngoog.dom.PREDEFINED_TAG_VALUES_ = {IMG:\" \", BR:\"\\n\"};\ngoog.dom.isFocusableTabIndex = function(element) {\n  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);\n};\ngoog.dom.setFocusableTabIndex = function(element, enable) {\n  enable ? element.tabIndex = 0 : (element.tabIndex = -1, element.removeAttribute(\"tabIndex\"));\n};\ngoog.dom.isFocusable = function(element) {\n  var focusable;\n  return (focusable = goog.dom.nativelySupportsFocus_(element) ? !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element)) : goog.dom.isFocusableTabIndex(element)) && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;\n};\ngoog.dom.hasSpecifiedTabIndex_ = function(element) {\n  return element.hasAttribute(\"tabindex\");\n};\ngoog.dom.isTabIndexFocusable_ = function(element) {\n  var index = element.tabIndex;\n  return \"number\" === typeof index && 0 <= index && 32768 > index;\n};\ngoog.dom.nativelySupportsFocus_ = function(element) {\n  return element.tagName == goog.dom.TagName.A && element.hasAttribute(\"href\") || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;\n};\ngoog.dom.hasNonZeroBoundingRect_ = function(element) {\n  var rect = \"function\" !== typeof element.getBoundingClientRect || goog.userAgent.IE && null == element.parentElement ? {height:element.offsetHeight, width:element.offsetWidth} : element.getBoundingClientRect();\n  return null != rect && 0 < rect.height && 0 < rect.width;\n};\ngoog.dom.getTextContent = function(node) {\n  var buf = [];\n  goog.dom.getTextContent_(node, buf, !0);\n  var textContent = buf.join(\"\");\n  textContent = textContent.replace(/ \\xAD /g, \" \").replace(/\\xAD/g, \"\");\n  textContent = textContent.replace(/\\u200B/g, \"\");\n  textContent = textContent.replace(/ +/g, \" \");\n  \" \" != textContent && (textContent = textContent.replace(/^\\s*/, \"\"));\n  return textContent;\n};\ngoog.dom.getRawTextContent = function(node) {\n  var buf = [];\n  goog.dom.getTextContent_(node, buf, !1);\n  return buf.join(\"\");\n};\ngoog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {\n  if (!(node.nodeName in goog.dom.TAGS_TO_IGNORE_)) {\n    if (node.nodeType == goog.dom.NodeType.TEXT) {\n      normalizeWhitespace ? buf.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, \"\")) : buf.push(node.nodeValue);\n    } else {\n      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);\n      } else {\n        for (var child = node.firstChild; child;) {\n          goog.dom.getTextContent_(child, buf, normalizeWhitespace), child = child.nextSibling;\n        }\n      }\n    }\n  }\n};\ngoog.dom.getNodeTextLength = function(node) {\n  return goog.dom.getTextContent(node).length;\n};\ngoog.dom.getNodeTextOffset = function(node, opt_offsetParent) {\n  for (var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body, buf = []; node && node != root;) {\n    for (var cur = node; cur = cur.previousSibling;) {\n      buf.unshift(goog.dom.getTextContent(cur));\n    }\n    node = node.parentNode;\n  }\n  return goog.string.trimLeft(buf.join(\"\")).replace(/ +/g, \" \").length;\n};\ngoog.dom.getNodeAtOffset = function(parent, offset, opt_result) {\n  for (var stack = [parent], pos = 0, cur = null; 0 < stack.length && pos < offset;) {\n    if (cur = stack.pop(), !(cur.nodeName in goog.dom.TAGS_TO_IGNORE_)) {\n      if (cur.nodeType == goog.dom.NodeType.TEXT) {\n        var text = cur.nodeValue.replace(/(\\r\\n|\\r|\\n)/g, \"\").replace(/ +/g, \" \");\n        pos += text.length;\n      } else {\n        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;\n        } else {\n          for (var i = cur.childNodes.length - 1; 0 <= i; i--) {\n            stack.push(cur.childNodes[i]);\n          }\n        }\n      }\n    }\n  }\n  goog.isObject(opt_result) && (opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0, opt_result.node = cur);\n  return cur;\n};\ngoog.dom.isNodeList = function(val) {\n  if (val && \"number\" == typeof val.length) {\n    if (goog.isObject(val)) {\n      return \"function\" == typeof val.item || \"string\" == typeof val.item;\n    }\n    if (\"function\" === typeof val) {\n      return \"function\" == typeof val.item;\n    }\n  }\n  return !1;\n};\ngoog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {\n  if (!opt_tag && !opt_class) {\n    return null;\n  }\n  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;\n  return goog.dom.getAncestor(element, function(node) {\n    return (!tagName || node.nodeName == tagName) && (!opt_class || \"string\" === typeof node.className && module$contents$goog$array_contains(node.className.split(/\\s+/), opt_class));\n  }, !0, opt_maxSearchSteps);\n};\ngoog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {\n  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);\n};\ngoog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {\n  element && !opt_includeNode && (element = element.parentNode);\n  for (var steps = 0; element && (null == opt_maxSearchSteps || steps <= opt_maxSearchSteps);) {\n    goog.asserts.assert(\"parentNode\" != element.name);\n    if (matcher(element)) {\n      return element;\n    }\n    element = element.parentNode;\n    steps++;\n  }\n  return null;\n};\ngoog.dom.getActiveElement = function(doc) {\n  try {\n    var activeElement = doc && doc.activeElement;\n    return activeElement && activeElement.nodeName ? activeElement : null;\n  } catch (e) {\n    return null;\n  }\n};\ngoog.dom.getPixelRatio = function() {\n  var win = goog.dom.getWindow();\n  return void 0 !== win.devicePixelRatio ? win.devicePixelRatio : win.matchMedia ? goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) || .75 : 1;\n};\ngoog.dom.matchesPixelRatio_ = function(pixelRatio) {\n  return goog.dom.getWindow().matchMedia(\"(min-resolution: \" + pixelRatio + \"dppx),(min--moz-device-pixel-ratio: \" + pixelRatio + \"),(min-resolution: \" + 96 * pixelRatio + \"dpi)\").matches ? pixelRatio : 0;\n};\ngoog.dom.getCanvasContext2D = function(canvas) {\n  return canvas.getContext(\"2d\");\n};\ngoog.dom.DomHelper = function(opt_document) {\n  this.document_ = opt_document || goog.global.document || document;\n};\ngoog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;\ngoog.dom.DomHelper.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\ngoog.dom.DomHelper.prototype.getDocument = function() {\n  return this.document_;\n};\ngoog.dom.DomHelper.prototype.getElement = function(element) {\n  return goog.dom.getElementHelper_(this.document_, element);\n};\ngoog.dom.DomHelper.prototype.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(this.document_, id);\n};\ngoog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;\ngoog.dom.DomHelper.prototype.getElementsByTagName = function(tagName, opt_parent) {\n  return (opt_parent || this.document_).getElementsByTagName(String(tagName));\n};\ngoog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);\n};\ngoog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);\n};\ngoog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {\n  return goog.dom.getElementsByClass(className, opt_el || this.document_);\n};\ngoog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {\n  return goog.dom.getElementByClass(className, opt_el || this.document_);\n};\ngoog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {\n  return goog.dom.getRequiredElementByClass(className, opt_root || this.document_);\n};\ngoog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;\ngoog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;\ngoog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {\n  return goog.dom.getViewportSize(opt_window || this.getWindow());\n};\ngoog.dom.DomHelper.prototype.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(this.getWindow());\n};\ngoog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(this.document_, arguments);\n};\ngoog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;\ngoog.dom.DomHelper.prototype.createElement = function(name) {\n  return goog.dom.createElement_(this.document_, name);\n};\ngoog.dom.DomHelper.prototype.createTextNode = function(content) {\n  return this.document_.createTextNode(String(content));\n};\ngoog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);\n};\ngoog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(this.document_, html);\n};\ngoog.dom.DomHelper.prototype.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getWindow = function() {\n  return goog.dom.getWindow_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {\n  return goog.dom.getActiveElement(opt_doc || this.document_);\n};\ngoog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;\ngoog.dom.DomHelper.prototype.append = goog.dom.append;\ngoog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;\ngoog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;\ngoog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;\ngoog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;\ngoog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;\ngoog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;\ngoog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;\ngoog.dom.DomHelper.prototype.copyContents = goog.dom.copyContents;\ngoog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;\ngoog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;\ngoog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;\ngoog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;\ngoog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;\ngoog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;\ngoog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;\ngoog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;\ngoog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;\ngoog.dom.DomHelper.prototype.isElement = goog.dom.isElement;\ngoog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;\ngoog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;\ngoog.dom.DomHelper.prototype.contains = goog.dom.contains;\ngoog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;\ngoog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;\ngoog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;\ngoog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;\ngoog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;\ngoog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;\ngoog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;\ngoog.dom.DomHelper.prototype.findNode = goog.dom.findNode;\ngoog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;\ngoog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;\ngoog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;\ngoog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;\ngoog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;\ngoog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;\ngoog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;\ngoog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;\ngoog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;\ngoog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;\ngoog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;\ngoog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;\ngoog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;\ngoog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {\n  var cb = callback;\n  opt_context && (cb = goog.bind(callback, opt_context));\n  cb = goog.async.nextTick.wrapCallback_(cb);\n  \"function\" === typeof goog.global.setImmediate && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_()) ? goog.global.setImmediate(cb) : (goog.async.nextTick.setImmediate_ || (goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_()), goog.async.nextTick.setImmediate_(cb));\n};\ngoog.async.nextTick.useSetImmediate_ = function() {\n  return goog.global.Window && goog.global.Window.prototype && !module$contents$goog$labs$userAgent$browser_matchEdgeHtml() && goog.global.Window.prototype.setImmediate == goog.global.setImmediate ? !1 : !0;\n};\ngoog.async.nextTick.getSetImmediateEmulator_ = function() {\n  var Channel = goog.global.MessageChannel;\n  \"undefined\" === typeof Channel && \"undefined\" !== typeof window && window.postMessage && window.addEventListener && !module$contents$goog$labs$userAgent$engine_isPresto() && (Channel = function() {\n    var iframe = goog.dom.createElement(goog.dom.TagName.IFRAME);\n    iframe.style.display = \"none\";\n    document.documentElement.appendChild(iframe);\n    var win = iframe.contentWindow, doc = win.document;\n    doc.open();\n    doc.close();\n    var message = \"callImmediate\" + Math.random(), origin = \"file:\" == win.location.protocol ? \"*\" : win.location.protocol + \"//\" + win.location.host, onmessage = goog.bind(function(e) {\n      if ((\"*\" == origin || e.origin == origin) && e.data == message) {\n        this.port1.onmessage();\n      }\n    }, this);\n    win.addEventListener(\"message\", onmessage, !1);\n    this.port1 = {};\n    this.port2 = {postMessage:function() {\n      win.postMessage(message, origin);\n    }};\n  });\n  if (\"undefined\" !== typeof Channel && !module$contents$goog$labs$userAgent$browser_matchIE()) {\n    var channel = new Channel(), head = {}, tail = head;\n    channel.port1.onmessage = function() {\n      if (void 0 !== head.next) {\n        head = head.next;\n        var cb = head.cb;\n        head.cb = null;\n        cb();\n      }\n    };\n    return function(cb) {\n      tail.next = {cb:cb};\n      tail = tail.next;\n      channel.port2.postMessage(0);\n    };\n  }\n  return function(cb) {\n    goog.global.setTimeout(cb, 0);\n  };\n};\ngoog.async.nextTick.wrapCallback_ = goog.functions.identity;\ngoog.debug.entryPointRegistry.register(function(transformer) {\n  goog.async.nextTick.wrapCallback_ = transformer;\n});\nfunction module$contents$goog$async$throwException_throwException(exception) {\n  goog.global.setTimeout(function() {\n    throw exception;\n  }, 0);\n}\ngoog.async.throwException = module$contents$goog$async$throwException_throwException;\nvar module$contents$goog$async$WorkQueue_WorkQueue = function() {\n  this.workTail_ = this.workHead_ = null;\n};\nmodule$contents$goog$async$WorkQueue_WorkQueue.prototype.add = function(fn, scope) {\n  var item = this.getUnusedItem_();\n  item.set(fn, scope);\n  this.workTail_ ? this.workTail_.next = item : ((0,goog.asserts.assert)(!this.workHead_), this.workHead_ = item);\n  this.workTail_ = item;\n};\nmodule$contents$goog$async$WorkQueue_WorkQueue.prototype.remove = function() {\n  var item = null;\n  this.workHead_ && (item = this.workHead_, this.workHead_ = this.workHead_.next, this.workHead_ || (this.workTail_ = null), item.next = null);\n  return item;\n};\nmodule$contents$goog$async$WorkQueue_WorkQueue.prototype.returnUnused = function(item) {\n  module$contents$goog$async$WorkQueue_WorkQueue.freelist_.put(item);\n};\nmodule$contents$goog$async$WorkQueue_WorkQueue.prototype.getUnusedItem_ = function() {\n  return module$contents$goog$async$WorkQueue_WorkQueue.freelist_.get();\n};\nmodule$contents$goog$async$WorkQueue_WorkQueue.DEFAULT_MAX_UNUSED = 100;\nmodule$contents$goog$async$WorkQueue_WorkQueue.freelist_ = new goog.async.FreeList(function() {\n  return new module$contents$goog$async$WorkQueue_WorkItem();\n}, function(item) {\n  return item.reset();\n}, module$contents$goog$async$WorkQueue_WorkQueue.DEFAULT_MAX_UNUSED);\nvar module$contents$goog$async$WorkQueue_WorkItem = function() {\n  this.next = this.scope = this.fn = null;\n};\nmodule$contents$goog$async$WorkQueue_WorkItem.prototype.set = function(fn, scope) {\n  this.fn = fn;\n  this.scope = scope;\n  this.next = null;\n};\nmodule$contents$goog$async$WorkQueue_WorkItem.prototype.reset = function() {\n  this.next = this.scope = this.fn = null;\n};\ngoog.async.WorkQueue = module$contents$goog$async$WorkQueue_WorkQueue;\ngoog.ASSUME_NATIVE_PROMISE = !1;\ngoog.async.run = function(callback, opt_context) {\n  goog.async.run.schedule_ || goog.async.run.initializeRunner_();\n  goog.async.run.workQueueScheduled_ || (goog.async.run.schedule_(), goog.async.run.workQueueScheduled_ = !0);\n  goog.async.run.workQueue_.add(callback, opt_context);\n};\ngoog.async.run.initializeRunner_ = function() {\n  if (goog.ASSUME_NATIVE_PROMISE || goog.global.Promise && goog.global.Promise.resolve) {\n    var promise = goog.global.Promise.resolve(void 0);\n    goog.async.run.schedule_ = function() {\n      promise.then(goog.async.run.processWorkQueue);\n    };\n  } else {\n    goog.async.run.schedule_ = function() {\n      goog.async.nextTick(goog.async.run.processWorkQueue);\n    };\n  }\n};\ngoog.async.run.forceNextTick = function(opt_realSetTimeout) {\n  goog.async.run.schedule_ = function() {\n    goog.async.nextTick(goog.async.run.processWorkQueue);\n    opt_realSetTimeout && opt_realSetTimeout(goog.async.run.processWorkQueue);\n  };\n};\ngoog.async.run.workQueueScheduled_ = !1;\ngoog.async.run.workQueue_ = new module$contents$goog$async$WorkQueue_WorkQueue();\ngoog.DEBUG && (goog.async.run.resetQueue = function() {\n  goog.async.run.workQueueScheduled_ = !1;\n  goog.async.run.workQueue_ = new module$contents$goog$async$WorkQueue_WorkQueue();\n}, goog.async.run.resetSchedulerForTest = function() {\n  goog.async.run.initializeRunner_();\n});\ngoog.async.run.processWorkQueue = function() {\n  for (var item = null; item = goog.async.run.workQueue_.remove();) {\n    try {\n      item.fn.call(item.scope);\n    } catch (e) {\n      module$contents$goog$async$throwException_throwException(e);\n    }\n    goog.async.run.workQueue_.returnUnused(item);\n  }\n  goog.async.run.workQueueScheduled_ = !1;\n};\ngoog.promise = {};\ngoog.promise.Resolver = function() {\n};\ngoog.Thenable = function() {\n};\ngoog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n};\ngoog.Thenable.IMPLEMENTED_BY_PROP = \"$goog_Thenable\";\ngoog.Thenable.addImplementation = function(ctor) {\n  ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = !0;\n};\ngoog.Thenable.isImplementedBy = function(object) {\n  if (!object) {\n    return !1;\n  }\n  try {\n    return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    return !1;\n  }\n};\ngoog.Promise = function(resolver, opt_context) {\n  this.state_ = goog.Promise.State_.PENDING;\n  this.result_ = void 0;\n  this.callbackEntriesTail_ = this.callbackEntries_ = this.parent_ = null;\n  this.executing_ = !1;\n  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? this.unhandledRejectionId_ = 0 : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (this.hadUnhandledRejection_ = !1);\n  goog.Promise.LONG_STACK_TRACES && (this.stack_ = [], this.addStackTrace_(Error(\"created\")), this.currentStep_ = 0);\n  if (resolver != goog.nullFunction) {\n    try {\n      var self = this;\n      resolver.call(opt_context, function(value) {\n        self.resolve_(goog.Promise.State_.FULFILLED, value);\n      }, function(reason) {\n        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {\n          try {\n            if (reason instanceof Error) {\n              throw reason;\n            }\n            throw Error(\"Promise rejected.\");\n          } catch (e) {\n          }\n        }\n        self.resolve_(goog.Promise.State_.REJECTED, reason);\n      });\n    } catch (e) {\n      this.resolve_(goog.Promise.State_.REJECTED, e);\n    }\n  }\n};\ngoog.Promise.LONG_STACK_TRACES = !1;\ngoog.Promise.UNHANDLED_REJECTION_DELAY = 0;\ngoog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};\ngoog.Promise.CallbackEntry_ = function() {\n  this.next = this.context = this.onRejected = this.onFulfilled = this.child = null;\n  this.always = !1;\n};\ngoog.Promise.CallbackEntry_.prototype.reset = function() {\n  this.context = this.onRejected = this.onFulfilled = this.child = null;\n  this.always = !1;\n};\ngoog.Promise.DEFAULT_MAX_UNUSED = 100;\ngoog.Promise.freelist_ = new goog.async.FreeList(function() {\n  return new goog.Promise.CallbackEntry_();\n}, function(item) {\n  item.reset();\n}, goog.Promise.DEFAULT_MAX_UNUSED);\ngoog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {\n  var entry = goog.Promise.freelist_.get();\n  entry.onFulfilled = onFulfilled;\n  entry.onRejected = onRejected;\n  entry.context = context;\n  return entry;\n};\ngoog.Promise.returnEntry_ = function(entry) {\n  goog.Promise.freelist_.put(entry);\n};\ngoog.Promise.resolve = function(opt_value) {\n  if (opt_value instanceof goog.Promise) {\n    return opt_value;\n  }\n  var promise = new goog.Promise(goog.nullFunction);\n  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);\n  return promise;\n};\ngoog.Promise.reject = function(opt_reason) {\n  return new goog.Promise(function(resolve, reject) {\n    reject(opt_reason);\n  });\n};\ngoog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {\n  goog.Promise.maybeThen_(value, onFulfilled, onRejected, null) || goog.async.run(goog.partial(onFulfilled, value));\n};\ngoog.Promise.race = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    promises.length || resolve(void 0);\n    for (var i = 0, promise; i < promises.length; i++) {\n      promise = promises[i], goog.Promise.resolveThen_(promise, resolve, reject);\n    }\n  });\n};\ngoog.Promise.all = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toFulfill = promises.length, values = [];\n    if (toFulfill) {\n      for (var onFulfill = function(index, value) {\n        toFulfill--;\n        values[index] = value;\n        0 == toFulfill && resolve(values);\n      }, onReject = function(reason) {\n        reject(reason);\n      }, i = 0, promise; i < promises.length; i++) {\n        promise = promises[i], goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);\n      }\n    } else {\n      resolve(values);\n    }\n  });\n};\ngoog.Promise.allSettled = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toSettle = promises.length, results = [];\n    if (toSettle) {\n      for (var onSettled = function(index, fulfilled, result) {\n        toSettle--;\n        results[index] = fulfilled ? {fulfilled:!0, value:result} : {fulfilled:!1, reason:result};\n        0 == toSettle && resolve(results);\n      }, i = 0, promise; i < promises.length; i++) {\n        promise = promises[i], goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, !0), goog.partial(onSettled, i, !1));\n      }\n    } else {\n      resolve(results);\n    }\n  });\n};\ngoog.Promise.firstFulfilled = function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toReject = promises.length, reasons = [];\n    if (toReject) {\n      for (var onFulfill = function(value) {\n        resolve(value);\n      }, onReject = function(index, reason) {\n        toReject--;\n        reasons[index] = reason;\n        0 == toReject && reject(reasons);\n      }, i = 0, promise; i < promises.length; i++) {\n        promise = promises[i], goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));\n      }\n    } else {\n      resolve(void 0);\n    }\n  });\n};\ngoog.Promise.withResolver = function() {\n  var resolve, reject, promise = new goog.Promise(function(rs, rj) {\n    resolve = rs;\n    reject = rj;\n  });\n  return new goog.Promise.Resolver_(promise, resolve, reject);\n};\ngoog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  null != opt_onFulfilled && goog.asserts.assertFunction(opt_onFulfilled, \"opt_onFulfilled should be a function.\");\n  null != opt_onRejected && goog.asserts.assertFunction(opt_onRejected, \"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?\");\n  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error(\"then\"));\n  return this.addChildPromise_(\"function\" === typeof opt_onFulfilled ? opt_onFulfilled : null, \"function\" === typeof opt_onRejected ? opt_onRejected : null, opt_context);\n};\ngoog.Thenable.addImplementation(goog.Promise);\ngoog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  null != opt_onFulfilled && goog.asserts.assertFunction(opt_onFulfilled, \"opt_onFulfilled should be a function.\");\n  null != opt_onRejected && goog.asserts.assertFunction(opt_onRejected, \"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?\");\n  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error(\"then\"));\n  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));\n};\ngoog.Promise.prototype.thenAlways = function(onSettled, opt_context) {\n  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error(\"thenAlways\"));\n  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);\n  entry.always = !0;\n  this.addCallbackEntry_(entry);\n  return this;\n};\ngoog.Promise.prototype.thenCatch = function(onRejected, opt_context) {\n  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error(\"thenCatch\"));\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\ngoog.Promise.prototype.cancel = function(opt_message) {\n  if (this.state_ == goog.Promise.State_.PENDING) {\n    var err = new goog.Promise.CancellationError(opt_message);\n    goog.async.run(function() {\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\ngoog.Promise.prototype.cancelInternal_ = function(err) {\n  this.state_ == goog.Promise.State_.PENDING && (this.parent_ ? (this.parent_.cancelChild_(this, err), this.parent_ = null) : this.resolve_(goog.Promise.State_.REJECTED, err));\n};\ngoog.Promise.prototype.cancelChild_ = function(childPromise, err) {\n  if (this.callbackEntries_) {\n    for (var childCount = 0, childEntry = null, beforeChildEntry = null, entry = this.callbackEntries_; entry && (entry.always || (childCount++, entry.child == childPromise && (childEntry = entry), !(childEntry && 1 < childCount))); entry = entry.next) {\n      childEntry || (beforeChildEntry = entry);\n    }\n    childEntry && (this.state_ == goog.Promise.State_.PENDING && 1 == childCount ? this.cancelInternal_(err) : (beforeChildEntry ? this.removeEntryAfter_(beforeChildEntry) : this.popEntry_(), this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err)));\n  }\n};\ngoog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  this.hasEntry_() || this.state_ != goog.Promise.State_.FULFILLED && this.state_ != goog.Promise.State_.REJECTED || this.scheduleCallbacks_();\n  this.queueEntry_(callbackEntry);\n};\ngoog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {\n  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);\n  callbackEntry.child = new goog.Promise(function(resolve, reject) {\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err$53) {\n        reject(err$53);\n      }\n    } : resolve;\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        void 0 === result && reason instanceof goog.Promise.CancellationError ? reject(reason) : resolve(result);\n      } catch (err$54) {\n        reject(err$54);\n      }\n    } : reject;\n  });\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(callbackEntry);\n  return callbackEntry.child;\n};\ngoog.Promise.prototype.unblockAndFulfill_ = function(value) {\n  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);\n  this.state_ = goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.FULFILLED, value);\n};\ngoog.Promise.prototype.unblockAndReject_ = function(reason) {\n  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);\n  this.state_ = goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.REJECTED, reason);\n};\ngoog.Promise.prototype.resolve_ = function(state, x) {\n  this.state_ == goog.Promise.State_.PENDING && (this === x && (state = goog.Promise.State_.REJECTED, x = new TypeError(\"Promise cannot resolve to itself\")), this.state_ = goog.Promise.State_.BLOCKED, goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this) || (this.result_ = x, this.state_ = state, this.parent_ = null, this.scheduleCallbacks_(), state != goog.Promise.State_.REJECTED || x instanceof goog.Promise.CancellationError || goog.Promise.addUnhandledRejection_(this, \n  x)));\n};\ngoog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {\n  if (value instanceof goog.Promise) {\n    return value.thenVoid(onFulfilled, onRejected, context), !0;\n  }\n  if (goog.Thenable.isImplementedBy(value)) {\n    return value.then(onFulfilled, onRejected, context), !0;\n  }\n  if (goog.isObject(value)) {\n    try {\n      var then = value.then;\n      if (\"function\" === typeof then) {\n        return goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context), !0;\n      }\n    } catch (e) {\n      return onRejected.call(context, e), !0;\n    }\n  }\n  return !1;\n};\ngoog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {\n  var called = !1, resolve = function(value) {\n    called || (called = !0, onFulfilled.call(context, value));\n  }, reject = function(reason) {\n    called || (called = !0, onRejected.call(context, reason));\n  };\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\ngoog.Promise.prototype.scheduleCallbacks_ = function() {\n  this.executing_ || (this.executing_ = !0, goog.async.run(this.executeCallbacks_, this));\n};\ngoog.Promise.prototype.hasEntry_ = function() {\n  return !!this.callbackEntries_;\n};\ngoog.Promise.prototype.queueEntry_ = function(entry) {\n  goog.asserts.assert(null != entry.onFulfilled);\n  this.callbackEntriesTail_ ? this.callbackEntriesTail_.next = entry : this.callbackEntries_ = entry;\n  this.callbackEntriesTail_ = entry;\n};\ngoog.Promise.prototype.popEntry_ = function() {\n  var entry = null;\n  this.callbackEntries_ && (entry = this.callbackEntries_, this.callbackEntries_ = entry.next, entry.next = null);\n  this.callbackEntries_ || (this.callbackEntriesTail_ = null);\n  null != entry && goog.asserts.assert(null != entry.onFulfilled);\n  return entry;\n};\ngoog.Promise.prototype.removeEntryAfter_ = function(previous) {\n  goog.asserts.assert(this.callbackEntries_);\n  goog.asserts.assert(null != previous);\n  previous.next == this.callbackEntriesTail_ && (this.callbackEntriesTail_ = previous);\n  previous.next = previous.next.next;\n};\ngoog.Promise.prototype.executeCallbacks_ = function() {\n  for (var entry = null; entry = this.popEntry_();) {\n    goog.Promise.LONG_STACK_TRACES && this.currentStep_++, this.executeCallback_(entry, this.state_, this.result_);\n  }\n  this.executing_ = !1;\n};\ngoog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {\n  state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always && this.removeUnhandledRejection_();\n  if (callbackEntry.child) {\n    callbackEntry.child.parent_ = null, goog.Promise.invokeCallback_(callbackEntry, state, result);\n  } else {\n    try {\n      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);\n    } catch (err$55) {\n      goog.Promise.handleRejection_.call(null, err$55);\n    }\n  }\n  goog.Promise.returnEntry_(callbackEntry);\n};\ngoog.Promise.invokeCallback_ = function(callbackEntry, state, result) {\n  state == goog.Promise.State_.FULFILLED ? callbackEntry.onFulfilled.call(callbackEntry.context, result) : callbackEntry.onRejected && callbackEntry.onRejected.call(callbackEntry.context, result);\n};\ngoog.Promise.prototype.addStackTrace_ = function(err) {\n  if (goog.Promise.LONG_STACK_TRACES && \"string\" === typeof err.stack) {\n    var trace = err.stack.split(\"\\n\", 4)[3], message = err.message;\n    message += Array(11 - message.length).join(\" \");\n    this.stack_.push(message + trace);\n  }\n};\ngoog.Promise.prototype.appendLongStack_ = function(err) {\n  if (goog.Promise.LONG_STACK_TRACES && err && \"string\" === typeof err.stack && this.stack_.length) {\n    for (var longTrace = [\"Promise trace:\"], promise = this; promise; promise = promise.parent_) {\n      for (var i = this.currentStep_; 0 <= i; i--) {\n        longTrace.push(promise.stack_[i]);\n      }\n      longTrace.push(\"Value: [\" + (promise.state_ == goog.Promise.State_.REJECTED ? \"REJECTED\" : \"FULFILLED\") + \"] <\" + String(promise.result_) + \">\");\n    }\n    err.stack += \"\\n\\n\" + longTrace.join(\"\\n\");\n  }\n};\ngoog.Promise.prototype.removeUnhandledRejection_ = function() {\n  if (0 < goog.Promise.UNHANDLED_REJECTION_DELAY) {\n    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      goog.global.clearTimeout(p.unhandledRejectionId_), p.unhandledRejectionId_ = 0;\n    }\n  } else {\n    if (0 == goog.Promise.UNHANDLED_REJECTION_DELAY) {\n      for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n        p.hadUnhandledRejection_ = !1;\n      }\n    }\n  }\n};\ngoog.Promise.addUnhandledRejection_ = function(promise, reason) {\n  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? promise.unhandledRejectionId_ = goog.global.setTimeout(function() {\n    promise.appendLongStack_(reason);\n    goog.Promise.handleRejection_.call(null, reason);\n  }, goog.Promise.UNHANDLED_REJECTION_DELAY) : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (promise.hadUnhandledRejection_ = !0, goog.async.run(function() {\n    promise.hadUnhandledRejection_ && (promise.appendLongStack_(reason), goog.Promise.handleRejection_.call(null, reason));\n  }));\n};\ngoog.Promise.handleRejection_ = module$contents$goog$async$throwException_throwException;\ngoog.Promise.setUnhandledRejectionHandler = function(handler) {\n  goog.Promise.handleRejection_ = handler;\n};\ngoog.Promise.CancellationError = function(opt_message) {\n  module$contents$goog$debug$Error_DebugError.call(this, opt_message);\n  this.reportErrorToServer = !1;\n};\ngoog.inherits(goog.Promise.CancellationError, module$contents$goog$debug$Error_DebugError);\ngoog.Promise.CancellationError.prototype.name = \"cancel\";\ngoog.Promise.Resolver_ = function(promise, resolve, reject) {\n  this.promise = promise;\n  this.resolve = resolve;\n  this.reject = reject;\n};\ngoog.Timer = function(opt_interval, opt_timerObject) {\n  goog.events.EventTarget.call(this);\n  this.interval_ = opt_interval || 1;\n  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;\n  this.boundTick_ = goog.bind(this.tick_, this);\n  this.last_ = goog.now();\n};\ngoog.inherits(goog.Timer, goog.events.EventTarget);\ngoog.Timer.MAX_TIMEOUT_ = 2147483647;\ngoog.Timer.INVALID_TIMEOUT_ID_ = -1;\ngoog.Timer.prototype.enabled = !1;\ngoog.Timer.defaultTimerObject = goog.global;\ngoog.Timer.intervalScale = 0.8;\ngoog.Timer.prototype.timer_ = null;\ngoog.Timer.prototype.getInterval = function() {\n  return this.interval_;\n};\ngoog.Timer.prototype.setInterval = function(interval) {\n  this.interval_ = interval;\n  this.timer_ && this.enabled ? (this.stop(), this.start()) : this.timer_ && this.stop();\n};\ngoog.Timer.prototype.tick_ = function() {\n  if (this.enabled) {\n    var elapsed = goog.now() - this.last_;\n    0 < elapsed && elapsed < this.interval_ * goog.Timer.intervalScale ? this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed) : (this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null), this.dispatchTick(), this.enabled && (this.stop(), this.start()));\n  }\n};\ngoog.Timer.prototype.dispatchTick = function() {\n  this.dispatchEvent(goog.Timer.TICK);\n};\ngoog.Timer.prototype.start = function() {\n  this.enabled = !0;\n  this.timer_ || (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now());\n};\ngoog.Timer.prototype.stop = function() {\n  this.enabled = !1;\n  this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null);\n};\ngoog.Timer.prototype.disposeInternal = function() {\n  goog.Timer.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.timerObject_;\n};\ngoog.Timer.TICK = \"tick\";\ngoog.Timer.callOnce = function(listener, opt_delay, opt_handler) {\n  if (\"function\" === typeof listener) {\n    opt_handler && (listener = goog.bind(listener, opt_handler));\n  } else {\n    if (listener && \"function\" == typeof listener.handleEvent) {\n      listener = goog.bind(listener.handleEvent, listener);\n    } else {\n      throw Error(\"Invalid listener argument\");\n    }\n  }\n  return Number(opt_delay) > goog.Timer.MAX_TIMEOUT_ ? goog.Timer.INVALID_TIMEOUT_ID_ : goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);\n};\ngoog.Timer.clear = function(timerId) {\n  goog.Timer.defaultTimerObject.clearTimeout(timerId);\n};\ngoog.Timer.promise = function(delay, opt_result) {\n  var timerKey = null;\n  return (new goog.Promise(function(resolve, reject) {\n    timerKey = goog.Timer.callOnce(function() {\n      resolve(opt_result);\n    }, delay);\n    timerKey == goog.Timer.INVALID_TIMEOUT_ID_ && reject(Error(\"Failed to schedule timer.\"));\n  })).thenCatch(function(error) {\n    goog.Timer.clear(timerKey);\n    throw error;\n  });\n};\nvar module$contents$goog$async$Throttle_Throttle = function(listener, interval, handler) {\n  goog.Disposable.call(this);\n  this.listener_ = null != handler ? listener.bind(handler) : listener;\n  this.interval_ = interval;\n  this.args_ = null;\n  this.shouldFire_ = !1;\n  this.pauseCount_ = 0;\n  this.timer_ = null;\n};\n$jscomp.inherits(module$contents$goog$async$Throttle_Throttle, goog.Disposable);\nmodule$contents$goog$async$Throttle_Throttle.prototype.fire = function(var_args) {\n  this.args_ = arguments;\n  this.timer_ || this.pauseCount_ ? this.shouldFire_ = !0 : this.doAction_();\n};\nmodule$contents$goog$async$Throttle_Throttle.prototype.stop = function() {\n  this.timer_ && (goog.Timer.clear(this.timer_), this.timer_ = null, this.shouldFire_ = !1, this.args_ = null);\n};\nmodule$contents$goog$async$Throttle_Throttle.prototype.pause = function() {\n  this.pauseCount_++;\n};\nmodule$contents$goog$async$Throttle_Throttle.prototype.resume = function() {\n  this.pauseCount_--;\n  this.pauseCount_ || !this.shouldFire_ || this.timer_ || (this.shouldFire_ = !1, this.doAction_());\n};\nmodule$contents$goog$async$Throttle_Throttle.prototype.disposeInternal = function() {\n  goog.Disposable.prototype.disposeInternal.call(this);\n  this.stop();\n};\nmodule$contents$goog$async$Throttle_Throttle.prototype.onTimer_ = function() {\n  this.timer_ = null;\n  this.shouldFire_ && !this.pauseCount_ && (this.shouldFire_ = !1, this.doAction_());\n};\nmodule$contents$goog$async$Throttle_Throttle.prototype.doAction_ = function() {\n  var $jscomp$this = this;\n  this.timer_ = goog.Timer.callOnce(function() {\n    return $jscomp$this.onTimer_();\n  }, this.interval_);\n  var args = this.args_;\n  this.args_ = null;\n  this.listener_.apply(null, args);\n};\ngoog.async.Throttle = module$contents$goog$async$Throttle_Throttle;\n/*\n\n Copyright 2005, 2007 Bob Ippolito. All Rights Reserved.\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: MIT\n*/\ngoog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {\n  this.sequence_ = [];\n  this.onCancelFunction_ = opt_onCancelFunction;\n  this.defaultScope_ = opt_defaultScope || null;\n  this.hadError_ = this.fired_ = !1;\n  this.result_ = void 0;\n  this.silentlyCanceled_ = this.blocking_ = this.blocked_ = !1;\n  this.unhandledErrorId_ = 0;\n  this.parent_ = null;\n  this.branches_ = 0;\n  if (goog.async.Deferred.LONG_STACK_TRACES && (this.constructorStack_ = null, Error.captureStackTrace)) {\n    var target = {stack:\"\"};\n    Error.captureStackTrace(target, goog.async.Deferred);\n    \"string\" == typeof target.stack && (this.constructorStack_ = target.stack.replace(/^[^\\n]*\\n/, \"\"));\n  }\n};\ngoog.async.Deferred.STRICT_ERRORS = !1;\ngoog.async.Deferred.LONG_STACK_TRACES = !1;\ngoog.async.Deferred.prototype.cancel = function(opt_deepCancel) {\n  if (this.hasFired()) {\n    this.result_ instanceof goog.async.Deferred && this.result_.cancel();\n  } else {\n    if (this.parent_) {\n      var parent = this.parent_;\n      delete this.parent_;\n      opt_deepCancel ? parent.cancel(opt_deepCancel) : parent.branchCancel_();\n    }\n    this.onCancelFunction_ ? this.onCancelFunction_.call(this.defaultScope_, this) : this.silentlyCanceled_ = !0;\n    this.hasFired() || this.errback(new goog.async.Deferred.CanceledError(this));\n  }\n};\ngoog.async.Deferred.prototype.branchCancel_ = function() {\n  this.branches_--;\n  0 >= this.branches_ && this.cancel();\n};\ngoog.async.Deferred.prototype.continue_ = function(isSuccess, res) {\n  this.blocked_ = !1;\n  this.updateResult_(isSuccess, res);\n};\ngoog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {\n  this.fired_ = !0;\n  this.result_ = res;\n  this.hadError_ = !isSuccess;\n  this.fire_();\n};\ngoog.async.Deferred.prototype.check_ = function() {\n  if (this.hasFired()) {\n    if (!this.silentlyCanceled_) {\n      throw new goog.async.Deferred.AlreadyCalledError(this);\n    }\n    this.silentlyCanceled_ = !1;\n  }\n};\ngoog.async.Deferred.prototype.callback = function(opt_result) {\n  this.check_();\n  this.assertNotDeferred_(opt_result);\n  this.updateResult_(!0, opt_result);\n};\ngoog.async.Deferred.prototype.errback = function(opt_result) {\n  this.check_();\n  this.assertNotDeferred_(opt_result);\n  this.makeStackTraceLong_(opt_result);\n  this.updateResult_(!1, opt_result);\n};\ngoog.async.Deferred.unhandledErrorHandler_ = function(e) {\n  throw e;\n};\ngoog.async.Deferred.setUnhandledErrorHandler = function(handler) {\n  goog.async.Deferred.unhandledErrorHandler_ = handler;\n};\ngoog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {\n  goog.async.Deferred.LONG_STACK_TRACES && this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\\n]+(\\n   [^\\n]+)+/.test(error.stack) && (error.stack = error.stack + \"\\nDEFERRED OPERATION:\\n\" + this.constructorStack_);\n};\ngoog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {\n  goog.asserts.assert(!(obj instanceof goog.async.Deferred), \"An execution sequence may not be initiated with a blocking Deferred.\");\n};\ngoog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {\n  return this.addCallbacks(cb, null, opt_scope);\n};\ngoog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {\n  return this.addCallbacks(null, eb, opt_scope);\n};\ngoog.async.Deferred.prototype.addBoth = function(f, opt_scope) {\n  return this.addCallbacks(f, f, opt_scope);\n};\ngoog.async.Deferred.prototype.addFinally = function(f, opt_scope) {\n  return this.addCallbacks(f, function(err) {\n    var result = f.call(this, err);\n    if (void 0 === result) {\n      throw err;\n    }\n    return result;\n  }, opt_scope);\n};\ngoog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {\n  goog.asserts.assert(!this.blocking_, \"Blocking Deferreds can not be re-used\");\n  this.sequence_.push([cb, eb, opt_scope]);\n  this.hasFired() && this.fire_();\n  return this;\n};\ngoog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  var reject, resolve, promise = new goog.Promise(function(res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  this.addCallbacks(resolve, function(reason) {\n    reason instanceof goog.async.Deferred.CanceledError ? promise.cancel() : reject(reason);\n  });\n  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);\n};\ngoog.Thenable.addImplementation(goog.async.Deferred);\ngoog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {\n  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);\n  return this;\n};\ngoog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {\n  return otherDeferred instanceof goog.async.Deferred ? this.addCallback(goog.bind(otherDeferred.branch, otherDeferred)) : this.addCallback(function() {\n    return otherDeferred;\n  });\n};\ngoog.async.Deferred.prototype.branch = function(opt_propagateCancel) {\n  var d = new goog.async.Deferred();\n  this.chainDeferred(d);\n  opt_propagateCancel && (d.parent_ = this, this.branches_++);\n  return d;\n};\ngoog.async.Deferred.prototype.hasFired = function() {\n  return this.fired_;\n};\ngoog.async.Deferred.prototype.isError = function(res) {\n  return res instanceof Error;\n};\ngoog.async.Deferred.prototype.hasErrback_ = function() {\n  return module$contents$goog$array_some(this.sequence_, function(sequenceRow) {\n    return \"function\" === typeof sequenceRow[1];\n  });\n};\ngoog.async.Deferred.prototype.getLastValueForMigration = function() {\n  return this.hasFired() && !this.hadError_ ? this.result_ : void 0;\n};\ngoog.async.Deferred.prototype.fire_ = function() {\n  this.unhandledErrorId_ && this.hasFired() && this.hasErrback_() && (goog.async.Deferred.unscheduleError_(this.unhandledErrorId_), this.unhandledErrorId_ = 0);\n  this.parent_ && (this.parent_.branches_--, delete this.parent_);\n  for (var res = this.result_, unhandledException = !1, isNewlyBlocked = !1; this.sequence_.length && !this.blocked_;) {\n    var sequenceEntry = this.sequence_.shift(), callback = sequenceEntry[0], errback = sequenceEntry[1], scope = sequenceEntry[2], f = this.hadError_ ? errback : callback;\n    if (f) {\n      try {\n        var ret = f.call(scope || this.defaultScope_, res);\n        void 0 !== ret && (this.hadError_ = this.hadError_ && (ret == res || this.isError(ret)), this.result_ = res = ret);\n        if (goog.Thenable.isImplementedBy(res) || \"function\" === typeof goog.global.Promise && res instanceof goog.global.Promise) {\n          this.blocked_ = isNewlyBlocked = !0;\n        }\n      } catch (ex) {\n        res = ex, this.hadError_ = !0, this.makeStackTraceLong_(res), this.hasErrback_() || (unhandledException = !0);\n      }\n    }\n  }\n  this.result_ = res;\n  if (isNewlyBlocked) {\n    var onCallback = goog.bind(this.continue_, this, !0), onErrback = goog.bind(this.continue_, this, !1);\n    res instanceof goog.async.Deferred ? (res.addCallbacks(onCallback, onErrback), res.blocking_ = !0) : res.then(onCallback, onErrback);\n  } else {\n    !goog.async.Deferred.STRICT_ERRORS || !this.isError(res) || res instanceof goog.async.Deferred.CanceledError || (unhandledException = this.hadError_ = !0);\n  }\n  unhandledException && (this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res));\n};\ngoog.async.Deferred.succeed = function(opt_result) {\n  var d = new goog.async.Deferred();\n  d.callback(opt_result);\n  return d;\n};\ngoog.async.Deferred.fromPromise = function(promise) {\n  var d = new goog.async.Deferred();\n  promise.then(function(value) {\n    d.callback(value);\n  }, function(error) {\n    d.errback(error);\n  });\n  return d;\n};\ngoog.async.Deferred.fail = function(res) {\n  var d = new goog.async.Deferred();\n  d.errback(res);\n  return d;\n};\ngoog.async.Deferred.canceled = function() {\n  var d = new goog.async.Deferred();\n  d.cancel();\n  return d;\n};\ngoog.async.Deferred.when = function(value, callback, opt_scope) {\n  return value instanceof goog.async.Deferred ? value.branch(!0).addCallback(callback, opt_scope) : goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);\n};\ngoog.async.Deferred.AlreadyCalledError = function(deferred) {\n  module$contents$goog$debug$Error_DebugError.call(this);\n  this.deferred = deferred;\n};\ngoog.inherits(goog.async.Deferred.AlreadyCalledError, module$contents$goog$debug$Error_DebugError);\ngoog.async.Deferred.AlreadyCalledError.prototype.message = \"Deferred has already fired\";\ngoog.async.Deferred.AlreadyCalledError.prototype.name = \"AlreadyCalledError\";\ngoog.async.Deferred.CanceledError = function(deferred) {\n  module$contents$goog$debug$Error_DebugError.call(this);\n  this.deferred = deferred;\n};\ngoog.inherits(goog.async.Deferred.CanceledError, module$contents$goog$debug$Error_DebugError);\ngoog.async.Deferred.CanceledError.prototype.message = \"Deferred was canceled\";\ngoog.async.Deferred.CanceledError.prototype.name = \"CanceledError\";\ngoog.async.Deferred.Error_ = function(error) {\n  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);\n  this.error_ = error;\n};\ngoog.async.Deferred.Error_.prototype.throwError = function() {\n  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], \"Cannot throw an error that is not scheduled.\");\n  delete goog.async.Deferred.errorMap_[this.id_];\n  goog.async.Deferred.unhandledErrorHandler_(this.error_);\n};\ngoog.async.Deferred.Error_.prototype.resetTimer = function() {\n  goog.global.clearTimeout(this.id_);\n};\ngoog.async.Deferred.errorMap_ = {};\ngoog.async.Deferred.scheduleError_ = function(error) {\n  var deferredError = new goog.async.Deferred.Error_(error);\n  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;\n  return deferredError.id_;\n};\ngoog.async.Deferred.unscheduleError_ = function(id) {\n  var error = goog.async.Deferred.errorMap_[id];\n  error && (error.resetTimer(), delete goog.async.Deferred.errorMap_[id]);\n};\ngoog.async.Deferred.assertNoErrors = function() {\n  var map = goog.async.Deferred.errorMap_, key;\n  for (key in map) {\n    var error = map[key];\n    error.resetTimer();\n    error.throwError();\n  }\n};\ngoog.net = {};\ngoog.net.jsloader = {};\ngoog.net.jsloader.Options = {};\ngoog.net.jsloader.GLOBAL_VERIFY_OBJS_ = \"closure_verification\";\ngoog.net.jsloader.DEFAULT_TIMEOUT = 5000;\ngoog.net.jsloader.scriptsToLoad_ = [];\ngoog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {\n  if (!trustedUris.length) {\n    return goog.async.Deferred.succeed(null);\n  }\n  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;\n  module$contents$goog$array_extend(goog.net.jsloader.scriptsToLoad_, trustedUris);\n  if (isAnotherModuleLoading) {\n    return goog.net.jsloader.scriptLoadingDeferred_;\n  }\n  trustedUris = goog.net.jsloader.scriptsToLoad_;\n  var popAndLoadNextScript = function() {\n    var trustedUri = trustedUris.shift(), deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);\n    trustedUris.length && deferred.addBoth(popAndLoadNextScript);\n    return deferred;\n  };\n  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();\n  return goog.net.jsloader.scriptLoadingDeferred_;\n};\ngoog.net.jsloader.safeLoad = function(trustedUri, opt_options) {\n  var options = opt_options || {}, doc = options.document || document, uri = goog.html.TrustedResourceUrl.unwrap(trustedUri), script = (new goog.dom.DomHelper(doc)).createElement(goog.dom.TagName.SCRIPT), request = {script_:script, timeout_:void 0}, deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request), timeout = null, timeoutDuration = null != options.timeout ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;\n  0 < timeoutDuration && (timeout = window.setTimeout(function() {\n    goog.net.jsloader.cleanup_(script, !0);\n    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, \"Timeout reached for loading script \" + uri));\n  }, timeoutDuration), request.timeout_ = timeout);\n  script.onload = script.onreadystatechange = function() {\n    script.readyState && \"loaded\" != script.readyState && \"complete\" != script.readyState || (goog.net.jsloader.cleanup_(script, options.cleanupWhenDone || !1, timeout), deferred.callback(null));\n  };\n  script.onerror = function() {\n    goog.net.jsloader.cleanup_(script, !0, timeout);\n    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, \"Error while loading script \" + uri));\n  };\n  var properties = options.attributes || {};\n  module$contents$goog$object_extend(properties, {type:\"text/javascript\", charset:\"UTF-8\"});\n  goog.dom.setProperties(script, properties);\n  goog.dom.safe.setScriptSrc(script, trustedUri);\n  goog.net.jsloader.getScriptParentElement_(doc).appendChild(script);\n  return deferred;\n};\ngoog.net.jsloader.safeLoadAndVerify = function(trustedUri, verificationObjName, options) {\n  goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] || (goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {});\n  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_], uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n  if (void 0 !== verifyObjs[verificationObjName]) {\n    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, \"Verification object \" + verificationObjName + \" already defined.\"));\n  }\n  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options), deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));\n  sendDeferred.addCallback(function() {\n    var result = verifyObjs[verificationObjName];\n    void 0 !== result ? (deferred.callback(result), delete verifyObjs[verificationObjName]) : deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, \"Script \" + uri + \" loaded, but verification object \" + verificationObjName + \" was not defined.\"));\n  });\n  sendDeferred.addErrback(function(error) {\n    void 0 !== verifyObjs[verificationObjName] && delete verifyObjs[verificationObjName];\n    deferred.errback(error);\n  });\n  return deferred;\n};\ngoog.net.jsloader.getScriptParentElement_ = function(doc) {\n  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);\n  return headElements && 0 !== headElements.length ? headElements[0] : doc.documentElement;\n};\ngoog.net.jsloader.cancel_ = function() {\n  if (this && this.script_) {\n    var scriptNode = this.script_;\n    scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT && goog.net.jsloader.cleanup_(scriptNode, !0, this.timeout_);\n  }\n};\ngoog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {\n  null != opt_timeout && goog.global.clearTimeout(opt_timeout);\n  scriptNode.onload = goog.nullFunction;\n  scriptNode.onerror = goog.nullFunction;\n  scriptNode.onreadystatechange = goog.nullFunction;\n  removeScriptNode && window.setTimeout(function() {\n    goog.dom.removeNode(scriptNode);\n  }, 0);\n};\ngoog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3,};\ngoog.net.jsloader.Error = function(code, opt_message) {\n  var msg = \"Jsloader error (code #\" + code + \")\";\n  opt_message && (msg += \": \" + opt_message);\n  module$contents$goog$debug$Error_DebugError.call(this, msg);\n  this.code = code;\n};\ngoog.inherits(goog.net.jsloader.Error, module$contents$goog$debug$Error_DebugError);\ngoog.json = {};\ngoog.json.Replacer = {};\ngoog.json.Reviver = {};\ngoog.json.USE_NATIVE_JSON = !1;\ngoog.json.TRY_NATIVE_JSON = !0;\ngoog.json.isValid = function(s) {\n  return /^\\s*$/.test(s) ? !1 : /^[\\],:{}\\s\\u2028\\u2029]*$/.test(s.replace(/\\\\[\"\\\\\\/bfnrtu]/g, \"@\").replace(/(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g, \"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g, \"\"));\n};\ngoog.json.errorLogger_ = goog.nullFunction;\ngoog.json.setErrorLogger = function(errorLogger) {\n  goog.json.errorLogger_ = errorLogger;\n};\ngoog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(s) {\n  if (goog.json.TRY_NATIVE_JSON) {\n    try {\n      return goog.global.JSON.parse(s);\n    } catch (ex) {\n      var error = ex;\n    }\n  }\n  var o = String(s);\n  if (goog.json.isValid(o)) {\n    try {\n      var result = eval(\"(\" + o + \")\");\n      error && goog.json.errorLogger_(\"Invalid JSON: \" + o, error);\n      return result;\n    } catch (ex$56) {\n    }\n  }\n  throw Error(\"Invalid JSON string: \" + o);\n};\ngoog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(object, opt_replacer) {\n  return (new goog.json.Serializer(opt_replacer)).serialize(object);\n};\ngoog.json.Serializer = function(opt_replacer) {\n  this.replacer_ = opt_replacer;\n};\ngoog.json.Serializer.prototype.serialize = function(object) {\n  var sb = [];\n  this.serializeInternal(object, sb);\n  return sb.join(\"\");\n};\ngoog.json.Serializer.prototype.serializeInternal = function(object, sb) {\n  if (null == object) {\n    sb.push(\"null\");\n  } else {\n    if (\"object\" == typeof object) {\n      if (Array.isArray(object)) {\n        this.serializeArray(object, sb);\n        return;\n      }\n      if (object instanceof String || object instanceof Number || object instanceof Boolean) {\n        object = object.valueOf();\n      } else {\n        this.serializeObject_(object, sb);\n        return;\n      }\n    }\n    switch(typeof object) {\n      case \"string\":\n        this.serializeString_(object, sb);\n        break;\n      case \"number\":\n        this.serializeNumber_(object, sb);\n        break;\n      case \"boolean\":\n        sb.push(String(object));\n        break;\n      case \"function\":\n        sb.push(\"null\");\n        break;\n      default:\n        throw Error(\"Unknown type: \" + typeof object);\n    }\n  }\n};\ngoog.json.Serializer.charToJsonCharCache_ = {'\"':'\\\\\"', \"\\\\\":\"\\\\\\\\\", \"/\":\"\\\\/\", \"\\b\":\"\\\\b\", \"\\f\":\"\\\\f\", \"\\n\":\"\\\\n\", \"\\r\":\"\\\\r\", \"\\t\":\"\\\\t\", \"\\x0B\":\"\\\\u000b\"};\ngoog.json.Serializer.charsToReplace_ = /\\uffff/.test(\"\\uffff\") ? /[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\ngoog.json.Serializer.prototype.serializeString_ = function(s, sb) {\n  sb.push('\"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {\n    var rv = goog.json.Serializer.charToJsonCharCache_[c];\n    rv || (rv = \"\\\\u\" + (c.charCodeAt(0) | 65536).toString(16).substr(1), goog.json.Serializer.charToJsonCharCache_[c] = rv);\n    return rv;\n  }), '\"');\n};\ngoog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {\n  sb.push(isFinite(n) && !isNaN(n) ? String(n) : \"null\");\n};\ngoog.json.Serializer.prototype.serializeArray = function(arr, sb) {\n  var l = arr.length;\n  sb.push(\"[\");\n  for (var sep = \"\", i = 0; i < l; i++) {\n    sb.push(sep);\n    var value = arr[i];\n    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);\n    sep = \",\";\n  }\n  sb.push(\"]\");\n};\ngoog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {\n  sb.push(\"{\");\n  var sep = \"\", key;\n  for (key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var value = obj[key];\n      \"function\" != typeof value && (sb.push(sep), this.serializeString_(key, sb), sb.push(\":\"), this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb), sep = \",\");\n    }\n  }\n  sb.push(\"}\");\n};\ngoog.json.hybrid = {};\ngoog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(obj) {\n  if (goog.global.JSON) {\n    try {\n      return goog.global.JSON.stringify(obj);\n    } catch (e) {\n    }\n  }\n  return goog.json.serialize(obj);\n};\ngoog.json.hybrid.parse_ = function(jsonString, fallbackParser) {\n  if (goog.global.JSON) {\n    try {\n      var obj = goog.global.JSON.parse(jsonString);\n      goog.asserts.assert(\"object\" == typeof obj);\n      return obj;\n    } catch (e) {\n    }\n  }\n  return fallbackParser(jsonString);\n};\ngoog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(jsonString) {\n  return goog.json.hybrid.parse_(jsonString, goog.json.parse);\n};\ngoog.log = {};\ngoog.log.ENABLED = goog.debug.LOGGING_ENABLED;\ngoog.log.ROOT_LOGGER_NAME = \"\";\nvar third_party$javascript$closure$log$log$classdecl$var0 = function(name, value) {\n  this.name = name;\n  this.value = value;\n};\nthird_party$javascript$closure$log$log$classdecl$var0.prototype.toString = function() {\n  return this.name;\n};\ngoog.log.Level = third_party$javascript$closure$log$log$classdecl$var0;\ngoog.log.Level.OFF = new goog.log.Level(\"OFF\", Infinity);\ngoog.log.Level.SHOUT = new goog.log.Level(\"SHOUT\", 1200);\ngoog.log.Level.SEVERE = new goog.log.Level(\"SEVERE\", 1000);\ngoog.log.Level.WARNING = new goog.log.Level(\"WARNING\", 900);\ngoog.log.Level.INFO = new goog.log.Level(\"INFO\", 800);\ngoog.log.Level.CONFIG = new goog.log.Level(\"CONFIG\", 700);\ngoog.log.Level.FINE = new goog.log.Level(\"FINE\", 500);\ngoog.log.Level.FINER = new goog.log.Level(\"FINER\", 400);\ngoog.log.Level.FINEST = new goog.log.Level(\"FINEST\", 300);\ngoog.log.Level.ALL = new goog.log.Level(\"ALL\", 0);\ngoog.log.Level.PREDEFINED_LEVELS = [goog.log.Level.OFF, goog.log.Level.SHOUT, goog.log.Level.SEVERE, goog.log.Level.WARNING, goog.log.Level.INFO, goog.log.Level.CONFIG, goog.log.Level.FINE, goog.log.Level.FINER, goog.log.Level.FINEST, goog.log.Level.ALL];\ngoog.log.Level.predefinedLevelsCache_ = null;\ngoog.log.Level.createPredefinedLevelsCache_ = function() {\n  goog.log.Level.predefinedLevelsCache_ = {};\n  for (var i = 0, level = void 0; level = goog.log.Level.PREDEFINED_LEVELS[i]; i++) {\n    goog.log.Level.predefinedLevelsCache_[level.value] = level, goog.log.Level.predefinedLevelsCache_[level.name] = level;\n  }\n};\ngoog.log.Level.getPredefinedLevel = function(name) {\n  goog.log.Level.predefinedLevelsCache_ || goog.log.Level.createPredefinedLevelsCache_();\n  return goog.log.Level.predefinedLevelsCache_[name] || null;\n};\ngoog.log.Level.getPredefinedLevelByValue = function(value) {\n  goog.log.Level.predefinedLevelsCache_ || goog.log.Level.createPredefinedLevelsCache_();\n  if (value in goog.log.Level.predefinedLevelsCache_) {\n    return goog.log.Level.predefinedLevelsCache_[value];\n  }\n  for (var i = 0; i < goog.log.Level.PREDEFINED_LEVELS.length; ++i) {\n    var level = goog.log.Level.PREDEFINED_LEVELS[i];\n    if (level.value <= value) {\n      return level;\n    }\n  }\n  return null;\n};\nvar third_party$javascript$closure$log$log$classdecl$var1 = function() {\n};\nthird_party$javascript$closure$log$log$classdecl$var1.prototype.getName = function() {\n};\ngoog.log.Logger = third_party$javascript$closure$log$log$classdecl$var1;\ngoog.log.Logger.Level = goog.log.Level;\nvar third_party$javascript$closure$log$log$classdecl$var2 = function(capacity) {\n  this.capacity_ = \"number\" === typeof capacity ? capacity : goog.log.LogBuffer.CAPACITY;\n  this.clear();\n};\nthird_party$javascript$closure$log$log$classdecl$var2.prototype.addRecord = function(level, msg, loggerName) {\n  if (!this.isBufferingEnabled()) {\n    return new goog.log.LogRecord(level, msg, loggerName);\n  }\n  var curIndex = (this.curIndex_ + 1) % this.capacity_;\n  this.curIndex_ = curIndex;\n  if (this.isFull_) {\n    var ret = this.buffer_[curIndex];\n    ret.reset(level, msg, loggerName);\n    return ret;\n  }\n  this.isFull_ = curIndex == this.capacity_ - 1;\n  return this.buffer_[curIndex] = new goog.log.LogRecord(level, msg, loggerName);\n};\nthird_party$javascript$closure$log$log$classdecl$var2.prototype.forEachRecord = function(func) {\n  var buffer = this.buffer_;\n  if (buffer[0]) {\n    var curIndex = this.curIndex_, i = this.isFull_ ? curIndex : -1;\n    do {\n      i = (i + 1) % this.capacity_, func(buffer[i]);\n    } while (i !== curIndex);\n  }\n};\nthird_party$javascript$closure$log$log$classdecl$var2.prototype.isBufferingEnabled = function() {\n  return 0 < this.capacity_;\n};\nthird_party$javascript$closure$log$log$classdecl$var2.prototype.isFull = function() {\n  return this.isFull_;\n};\nthird_party$javascript$closure$log$log$classdecl$var2.prototype.clear = function() {\n  this.buffer_ = Array(this.capacity_);\n  this.curIndex_ = -1;\n  this.isFull_ = !1;\n};\ngoog.log.LogBuffer = third_party$javascript$closure$log$log$classdecl$var2;\ngoog.log.LogBuffer.CAPACITY = 0;\ngoog.log.LogBuffer.getInstance = function() {\n  goog.log.LogBuffer.instance_ || (goog.log.LogBuffer.instance_ = new goog.log.LogBuffer(goog.log.LogBuffer.CAPACITY));\n  return goog.log.LogBuffer.instance_;\n};\ngoog.log.LogBuffer.isBufferingEnabled = function() {\n  return goog.log.LogBuffer.getInstance().isBufferingEnabled();\n};\nvar third_party$javascript$closure$log$log$classdecl$var3 = function(level, msg, loggerName, time, sequenceNumber) {\n  this.exception_ = void 0;\n  this.reset(level || goog.log.Level.OFF, msg, loggerName, time, sequenceNumber);\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.reset = function(level, msg, loggerName, time, sequenceNumber) {\n  this.time_ = time || goog.now();\n  this.level_ = level;\n  this.msg_ = msg;\n  this.loggerName_ = loggerName;\n  this.exception_ = void 0;\n  this.sequenceNumber_ = \"number\" === typeof sequenceNumber ? sequenceNumber : goog.log.LogRecord.nextSequenceNumber_;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.getLoggerName = function() {\n  return this.loggerName_;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.setLoggerName = function(name) {\n  this.loggerName_ = name;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.getException = function() {\n  return this.exception_;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.setException = function(exception) {\n  this.exception_ = exception;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.getLevel = function() {\n  return this.level_;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.setLevel = function(level) {\n  this.level_ = level;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.getMessage = function() {\n  return this.msg_;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.setMessage = function(msg) {\n  this.msg_ = msg;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.getMillis = function() {\n  return this.time_;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.setMillis = function(time) {\n  this.time_ = time;\n};\nthird_party$javascript$closure$log$log$classdecl$var3.prototype.getSequenceNumber = function() {\n  return this.sequenceNumber_;\n};\ngoog.log.LogRecord = third_party$javascript$closure$log$log$classdecl$var3;\ngoog.log.LogRecord.nextSequenceNumber_ = 0;\nvar third_party$javascript$closure$log$log$classdecl$var4 = function(name, parent) {\n  this.level = null;\n  this.handlers = [];\n  this.parent = (void 0 === parent ? null : parent) || null;\n  this.children = [];\n  this.logger = {getName:function() {\n    return name;\n  }};\n};\nthird_party$javascript$closure$log$log$classdecl$var4.prototype.getEffectiveLevel = function() {\n  if (this.level) {\n    return this.level;\n  }\n  if (this.parent) {\n    return this.parent.getEffectiveLevel();\n  }\n  goog.asserts.fail(\"Root logger has no level set.\");\n  return goog.log.Level.OFF;\n};\nthird_party$javascript$closure$log$log$classdecl$var4.prototype.publish = function(logRecord) {\n  for (var target = this; target;) {\n    target.handlers.forEach(function(handler) {\n      handler(logRecord);\n    }), target = target.parent;\n  }\n};\ngoog.log.LogRegistryEntry_ = third_party$javascript$closure$log$log$classdecl$var4;\nvar third_party$javascript$closure$log$log$classdecl$var5 = function() {\n  this.entries = {};\n  var rootLogRegistryEntry = new goog.log.LogRegistryEntry_(goog.log.ROOT_LOGGER_NAME);\n  rootLogRegistryEntry.level = goog.log.Level.CONFIG;\n  this.entries[goog.log.ROOT_LOGGER_NAME] = rootLogRegistryEntry;\n};\nthird_party$javascript$closure$log$log$classdecl$var5.prototype.getLogRegistryEntry = function(name, level) {\n  var entry = this.entries[name];\n  if (entry) {\n    return void 0 !== level && (entry.level = level), entry;\n  }\n  var lastDotIndex = name.lastIndexOf(\".\"), parentLogRegistryEntry = this.getLogRegistryEntry(name.substr(0, lastDotIndex)), logRegistryEntry = new goog.log.LogRegistryEntry_(name, parentLogRegistryEntry);\n  this.entries[name] = logRegistryEntry;\n  parentLogRegistryEntry.children.push(logRegistryEntry);\n  void 0 !== level && (logRegistryEntry.level = level);\n  return logRegistryEntry;\n};\nthird_party$javascript$closure$log$log$classdecl$var5.prototype.getAllLoggers = function() {\n  var $jscomp$this = this;\n  return Object.keys(this.entries).map(function(loggerName) {\n    return $jscomp$this.entries[loggerName].logger;\n  });\n};\ngoog.log.LogRegistry_ = third_party$javascript$closure$log$log$classdecl$var5;\ngoog.log.LogRegistry_.getInstance = function() {\n  goog.log.LogRegistry_.instance_ || (goog.log.LogRegistry_.instance_ = new goog.log.LogRegistry_());\n  return goog.log.LogRegistry_.instance_;\n};\ngoog.log.getLogger = function(name, level) {\n  return goog.log.ENABLED ? goog.log.LogRegistry_.getInstance().getLogRegistryEntry(name, level).logger : null;\n};\ngoog.log.getRootLogger = function() {\n  return goog.log.ENABLED ? goog.log.LogRegistry_.getInstance().getLogRegistryEntry(goog.log.ROOT_LOGGER_NAME).logger : null;\n};\ngoog.log.addHandler = function(logger, handler) {\n  goog.log.ENABLED && logger && goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName()).handlers.push(handler);\n};\ngoog.log.removeHandler = function(logger, handler) {\n  if (goog.log.ENABLED && logger) {\n    var loggerEntry = goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName()), indexOfHandler = loggerEntry.handlers.indexOf(handler);\n    if (-1 !== indexOfHandler) {\n      return loggerEntry.handlers.splice(indexOfHandler, 1), !0;\n    }\n  }\n  return !1;\n};\ngoog.log.setLevel = function(logger, level) {\n  goog.log.ENABLED && logger && (goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName()).level = level);\n};\ngoog.log.getLevel = function(logger) {\n  return goog.log.ENABLED && logger ? goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName()).level : null;\n};\ngoog.log.getEffectiveLevel = function(logger) {\n  return goog.log.ENABLED && logger ? goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName()).getEffectiveLevel() : goog.log.Level.OFF;\n};\ngoog.log.isLoggable = function(logger, level) {\n  return goog.log.ENABLED && logger && level ? level.value >= goog.log.getEffectiveLevel(logger).value : !1;\n};\ngoog.log.getAllLoggers = function() {\n  return goog.log.ENABLED ? goog.log.LogRegistry_.getInstance().getAllLoggers() : [];\n};\ngoog.log.getLogRecord = function(logger, level, msg, exception) {\n  var logRecord = goog.log.LogBuffer.getInstance().addRecord(level || goog.log.Level.OFF, msg, logger.getName());\n  logRecord.setException(exception);\n  return logRecord;\n};\ngoog.log.publishLogRecord = function(logger, logRecord) {\n  goog.log.ENABLED && logger && goog.log.isLoggable(logger, logRecord.getLevel()) && goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName()).publish(logRecord);\n};\ngoog.log.log = function(logger, level, msg, exception) {\n  if (goog.log.ENABLED && logger && goog.log.isLoggable(logger, level)) {\n    level = level || goog.log.Level.OFF;\n    var loggerEntry = goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    \"function\" === typeof msg && (msg = msg());\n    var logRecord = goog.log.LogBuffer.getInstance().addRecord(level, msg, logger.getName());\n    logRecord.setException(exception);\n    loggerEntry.publish(logRecord);\n  }\n};\ngoog.log.error = function(logger, msg, exception) {\n  goog.log.ENABLED && logger && goog.log.log(logger, goog.log.Level.SEVERE, msg, exception);\n};\ngoog.log.warning = function(logger, msg, exception) {\n  goog.log.ENABLED && logger && goog.log.log(logger, goog.log.Level.WARNING, msg, exception);\n};\ngoog.log.info = function(logger, msg, exception) {\n  goog.log.ENABLED && logger && goog.log.log(logger, goog.log.Level.INFO, msg, exception);\n};\ngoog.log.fine = function(logger, msg, exception) {\n  goog.log.ENABLED && logger && goog.log.log(logger, goog.log.Level.FINE, msg, exception);\n};\ngoog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9,};\ngoog.net.ErrorCode.getDebugMessage = function(errorCode) {\n  switch(errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return \"No Error\";\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return \"Access denied to content document\";\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return \"File not found\";\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return \"Firefox silently errored\";\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return \"Application custom error\";\n    case goog.net.ErrorCode.EXCEPTION:\n      return \"An exception occurred\";\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return \"Http response at 400 or 500 level\";\n    case goog.net.ErrorCode.ABORT:\n      return \"Request was aborted\";\n    case goog.net.ErrorCode.TIMEOUT:\n      return \"Request timed out\";\n    case goog.net.ErrorCode.OFFLINE:\n      return \"The resource is not available offline\";\n    default:\n      return \"Unrecognized error code\";\n  }\n};\ngoog.net.EventType = {COMPLETE:\"complete\", SUCCESS:\"success\", ERROR:\"error\", ABORT:\"abort\", READY:\"ready\", READY_STATE_CHANGE:\"readystatechange\", TIMEOUT:\"timeout\", INCREMENTAL_DATA:\"incrementaldata\", PROGRESS:\"progress\", DOWNLOAD_PROGRESS:\"downloadprogress\", UPLOAD_PROGRESS:\"uploadprogress\",};\ngoog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTI_STATUS:207, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, PERMANENT_REDIRECT:308, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, \nREQUEST_TIMEOUT:408, CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, UNPROCESSABLE_ENTITY:422, LOCKED:423, FAILED_DEPENDENCY:424, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, CLIENT_CLOSED_REQUEST:499, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, \nHTTP_VERSION_NOT_SUPPORTED:505, INSUFFICIENT_STORAGE:507, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223,};\ngoog.net.HttpStatus.isSuccess = function(status) {\n  switch(status) {\n    case goog.net.HttpStatus.OK:\n    case goog.net.HttpStatus.CREATED:\n    case goog.net.HttpStatus.ACCEPTED:\n    case goog.net.HttpStatus.NO_CONTENT:\n    case goog.net.HttpStatus.PARTIAL_CONTENT:\n    case goog.net.HttpStatus.NOT_MODIFIED:\n    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:\n      return !0;\n    default:\n      return !1;\n  }\n};\ngoog.net.XhrLike = function() {\n};\ngoog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {\n};\ngoog.net.XhrLike.prototype.send = function(opt_data) {\n};\ngoog.net.XhrLike.prototype.abort = function() {\n};\ngoog.net.XhrLike.prototype.setRequestHeader = function(header, value) {\n};\ngoog.net.XhrLike.prototype.getResponseHeader = function(header) {\n};\ngoog.net.XhrLike.prototype.getAllResponseHeaders = function() {\n};\ngoog.net.XhrLike.prototype.setTrustToken = function(trustTokenAttribute) {\n};\ngoog.net.XmlHttpFactory = function() {\n};\ngoog.net.XmlHttpFactory.prototype.cachedOptions_ = null;\ngoog.net.XmlHttpFactory.prototype.getOptions = function() {\n  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());\n};\ngoog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {\n  this.xhrFactory_ = xhrFactory;\n  this.optionsFactory_ = optionsFactory;\n};\ngoog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);\ngoog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {\n  return this.xhrFactory_();\n};\ngoog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {\n  return this.optionsFactory_();\n};\ngoog.net.XmlHttp = function() {\n  return goog.net.XmlHttp.factory_.createInstance();\n};\ngoog.net.XmlHttp.ASSUME_NATIVE_XHR = !1;\ngoog.net.XmlHttpDefines = {};\ngoog.net.XmlHttpDefines.ASSUME_NATIVE_XHR = !1;\ngoog.net.XmlHttp.getOptions = function() {\n  return goog.net.XmlHttp.factory_.getOptions();\n};\ngoog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1,};\ngoog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4,};\ngoog.net.XmlHttp.setFactory = function(factory, optionsFactory) {\n  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));\n};\ngoog.net.XmlHttp.setGlobalFactory = function(factory) {\n  goog.net.XmlHttp.factory_ = factory;\n};\ngoog.net.DefaultXmlHttpFactory = function() {\n};\ngoog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);\ngoog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {\n  var progId = this.getProgId_();\n  return progId ? new ActiveXObject(progId) : new XMLHttpRequest();\n};\ngoog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {\n  var options = {};\n  this.getProgId_() && (options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = !0, options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = !0);\n  return options;\n};\ngoog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {\n  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {\n    return \"\";\n  }\n  if (!this.ieProgId_ && \"undefined\" == typeof XMLHttpRequest && \"undefined\" != typeof ActiveXObject) {\n    for (var ACTIVE_X_IDENTS = [\"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\",], i = 0; i < ACTIVE_X_IDENTS.length; i++) {\n      var candidate = ACTIVE_X_IDENTS[i];\n      try {\n        return new ActiveXObject(candidate), this.ieProgId_ = candidate;\n      } catch (e) {\n      }\n    }\n    throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");\n  }\n  return this.ieProgId_;\n};\ngoog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory());\ngoog.net.XhrIo = function(opt_xmlHttpFactory) {\n  goog.events.EventTarget.call(this);\n  this.headers = new Map();\n  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;\n  this.active_ = !1;\n  this.xhrOptions_ = this.xhr_ = null;\n  this.lastMethod_ = this.lastUri_ = \"\";\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n  this.lastError_ = \"\";\n  this.inAbort_ = this.inOpen_ = this.inSend_ = this.errorDispatched_ = !1;\n  this.timeoutInterval_ = 0;\n  this.timeoutId_ = null;\n  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;\n  this.useXhr2Timeout_ = this.progressEventsEnabled_ = this.withCredentials_ = !1;\n  this.trustToken_ = null;\n};\ngoog.inherits(goog.net.XhrIo, goog.events.EventTarget);\ngoog.net.XhrIo.ResponseType = {DEFAULT:\"\", TEXT:\"text\", DOCUMENT:\"document\", BLOB:\"blob\", ARRAY_BUFFER:\"arraybuffer\",};\ngoog.net.XhrIo.prototype.logger_ = goog.log.getLogger(\"goog.net.XhrIo\");\ngoog.net.XhrIo.CONTENT_TYPE_HEADER = \"Content-Type\";\ngoog.net.XhrIo.CONTENT_TRANSFER_ENCODING = \"Content-Transfer-Encoding\";\ngoog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;\ngoog.net.XhrIo.METHODS_WITH_FORM_DATA = [\"POST\", \"PUT\"];\ngoog.net.XhrIo.FORM_CONTENT_TYPE = \"application/x-www-form-urlencoded;charset=utf-8\";\ngoog.net.XhrIo.XHR2_TIMEOUT_ = \"timeout\";\ngoog.net.XhrIo.XHR2_ON_TIMEOUT_ = \"ontimeout\";\ngoog.net.XhrIo.sendInstances_ = [];\ngoog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {\n  var x = new goog.net.XhrIo();\n  goog.net.XhrIo.sendInstances_.push(x);\n  opt_callback && x.listen(goog.net.EventType.COMPLETE, opt_callback);\n  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);\n  opt_timeoutInterval && x.setTimeoutInterval(opt_timeoutInterval);\n  opt_withCredentials && x.setWithCredentials(opt_withCredentials);\n  x.send(url, opt_method, opt_content, opt_headers);\n  return x;\n};\ngoog.net.XhrIo.cleanup = function() {\n  for (var instances = goog.net.XhrIo.sendInstances_; instances.length;) {\n    instances.pop().dispose();\n  }\n};\ngoog.net.XhrIo.protectEntryPoints = function(errorHandler) {\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n};\ngoog.net.XhrIo.prototype.cleanupSend_ = function() {\n  this.dispose();\n  module$contents$goog$array_remove(goog.net.XhrIo.sendInstances_, this);\n};\ngoog.net.XhrIo.prototype.getTimeoutInterval = function() {\n  return this.timeoutInterval_;\n};\ngoog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {\n  this.timeoutInterval_ = Math.max(0, ms);\n};\ngoog.net.XhrIo.prototype.setResponseType = function(type) {\n  this.responseType_ = type;\n};\ngoog.net.XhrIo.prototype.getResponseType = function() {\n  return this.responseType_;\n};\ngoog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {\n  this.withCredentials_ = withCredentials;\n};\ngoog.net.XhrIo.prototype.getWithCredentials = function() {\n  return this.withCredentials_;\n};\ngoog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {\n  this.progressEventsEnabled_ = enabled;\n};\ngoog.net.XhrIo.prototype.getProgressEventsEnabled = function() {\n  return this.progressEventsEnabled_;\n};\ngoog.net.XhrIo.prototype.setTrustToken = function(trustToken) {\n  this.trustToken_ = trustToken;\n};\ngoog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {\n  if (this.xhr_) {\n    throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + this.lastUri_ + \"; newUri=\" + url);\n  }\n  var method = opt_method ? opt_method.toUpperCase() : \"GET\";\n  this.lastUri_ = url;\n  this.lastError_ = \"\";\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n  this.lastMethod_ = method;\n  this.errorDispatched_ = !1;\n  this.active_ = !0;\n  this.xhr_ = this.createXhr();\n  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();\n  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);\n  this.getProgressEventsEnabled() && \"onprogress\" in this.xhr_ && (this.xhr_.onprogress = goog.bind(function(e) {\n    this.onProgressHandler_(e, !0);\n  }, this), this.xhr_.upload && (this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this)));\n  try {\n    goog.log.fine(this.logger_, this.formatMsg_(\"Opening Xhr\")), this.inOpen_ = !0, this.xhr_.open(method, String(url), !0), this.inOpen_ = !1;\n  } catch (err$57) {\n    goog.log.fine(this.logger_, this.formatMsg_(\"Error opening Xhr: \" + err$57.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err$57);\n    return;\n  }\n  var content = opt_content || \"\", headers = new Map(this.headers);\n  if (opt_headers) {\n    if (Object.getPrototypeOf(opt_headers) === Object.prototype) {\n      for (var key in opt_headers) {\n        headers.set(key, opt_headers[key]);\n      }\n    } else {\n      if (\"function\" === typeof opt_headers.keys && \"function\" === typeof opt_headers.get) {\n        for (var $jscomp$iter$18 = $jscomp.makeIterator(opt_headers.keys()), $jscomp$key$key = $jscomp$iter$18.next(); !$jscomp$key$key.done; $jscomp$key$key = $jscomp$iter$18.next()) {\n          var key$58 = $jscomp$key$key.value;\n          headers.set(key$58, opt_headers.get(key$58));\n        }\n      } else {\n        throw Error(\"Unknown input type for opt_headers: \" + String(opt_headers));\n      }\n    }\n  }\n  var contentTypeKey = Array.from(headers.keys()).find(function(header) {\n    return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);\n  }), contentIsFormData = goog.global.FormData && content instanceof goog.global.FormData;\n  !module$contents$goog$array_contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) || contentTypeKey || contentIsFormData || headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);\n  for (var $jscomp$iter$19 = $jscomp.makeIterator(headers), $jscomp$key$ = $jscomp$iter$19.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$19.next()) {\n    var $jscomp$destructuring$var19 = $jscomp.makeIterator($jscomp$key$.value), key$59 = $jscomp$destructuring$var19.next().value, value = $jscomp$destructuring$var19.next().value;\n    this.xhr_.setRequestHeader(key$59, value);\n  }\n  this.responseType_ && (this.xhr_.responseType = this.responseType_);\n  \"withCredentials\" in this.xhr_ && this.xhr_.withCredentials !== this.withCredentials_ && (this.xhr_.withCredentials = this.withCredentials_);\n  if (\"setTrustToken\" in this.xhr_ && this.trustToken_) {\n    try {\n      this.xhr_.setTrustToken(this.trustToken_);\n    } catch (err$60) {\n      goog.log.fine(this.logger_, this.formatMsg_(\"Error SetTrustToken: \" + err$60.message));\n    }\n  }\n  try {\n    this.cleanUpTimeoutTimer_(), 0 < this.timeoutInterval_ && (this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_), goog.log.fine(this.logger_, this.formatMsg_(\"Will abort after \" + this.timeoutInterval_ + \"ms if incomplete, xhr2 \" + this.useXhr2Timeout_)), this.useXhr2Timeout_ ? (this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_, this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this)) : this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, \n    this)), goog.log.fine(this.logger_, this.formatMsg_(\"Sending request\")), this.inSend_ = !0, this.xhr_.send(content), this.inSend_ = !1;\n  } catch (err$61) {\n    goog.log.fine(this.logger_, this.formatMsg_(\"Send error: \" + err$61.message)), this.error_(goog.net.ErrorCode.EXCEPTION, err$61);\n  }\n};\ngoog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {\n  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && \"number\" === typeof xhr[goog.net.XhrIo.XHR2_TIMEOUT_] && void 0 !== xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_];\n};\ngoog.net.XhrIo.prototype.createXhr = function() {\n  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();\n};\ngoog.net.XhrIo.prototype.timeout_ = function() {\n  \"undefined\" != typeof goog && this.xhr_ && (this.lastError_ = \"Timed out after \" + this.timeoutInterval_ + \"ms, aborting\", this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT, goog.log.fine(this.logger_, this.formatMsg_(this.lastError_)), this.dispatchEvent(goog.net.EventType.TIMEOUT), this.abort(goog.net.ErrorCode.TIMEOUT));\n};\ngoog.net.XhrIo.prototype.error_ = function(errorCode, err) {\n  this.active_ = !1;\n  this.xhr_ && (this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1);\n  this.lastError_ = err;\n  this.lastErrorCode_ = errorCode;\n  this.dispatchErrors_();\n  this.cleanUpXhr_();\n};\ngoog.net.XhrIo.prototype.dispatchErrors_ = function() {\n  this.errorDispatched_ || (this.errorDispatched_ = !0, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ERROR));\n};\ngoog.net.XhrIo.prototype.abort = function(opt_failureCode) {\n  this.xhr_ && this.active_ && (goog.log.fine(this.logger_, this.formatMsg_(\"Aborting\")), this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1, this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ABORT), this.cleanUpXhr_());\n};\ngoog.net.XhrIo.prototype.disposeInternal = function() {\n  this.xhr_ && (this.active_ && (this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1), this.cleanUpXhr_(!0));\n  goog.net.XhrIo.superClass_.disposeInternal.call(this);\n};\ngoog.net.XhrIo.prototype.onReadyStateChange_ = function() {\n  if (!this.isDisposed()) {\n    if (this.inOpen_ || this.inSend_ || this.inAbort_) {\n      this.onReadyStateChangeHelper_();\n    } else {\n      this.onReadyStateChangeEntryPoint_();\n    }\n  }\n};\ngoog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {\n  this.onReadyStateChangeHelper_();\n};\ngoog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {\n  if (this.active_ && \"undefined\" != typeof goog) {\n    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && 2 == this.getStatus()) {\n      goog.log.fine(this.logger_, this.formatMsg_(\"Local request error detected and ignored\"));\n    } else {\n      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {\n        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);\n      } else {\n        if (this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE), this.isComplete()) {\n          goog.log.fine(this.logger_, this.formatMsg_(\"Request complete\"));\n          this.active_ = !1;\n          try {\n            this.isSuccess() ? (this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.SUCCESS)) : (this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR, this.lastError_ = this.getStatusText() + \" [\" + this.getStatus() + \"]\", this.dispatchErrors_());\n          } finally {\n            this.cleanUpXhr_();\n          }\n        }\n      }\n    }\n  }\n};\ngoog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {\n  goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, \"goog.net.EventType.PROGRESS is of the same type as raw XHR progress.\");\n  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));\n  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));\n};\ngoog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {\n  return {type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total,};\n};\ngoog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {\n  if (this.xhr_) {\n    this.cleanUpTimeoutTimer_();\n    var xhr = this.xhr_, clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;\n    this.xhrOptions_ = this.xhr_ = null;\n    opt_fromDispose || this.dispatchEvent(goog.net.EventType.READY);\n    try {\n      xhr.onreadystatechange = clearedOnReadyStateChange;\n    } catch (e) {\n      goog.log.error(this.logger_, \"Problem encountered resetting onreadystatechange: \" + e.message);\n    }\n  }\n};\ngoog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {\n  this.xhr_ && this.useXhr2Timeout_ && (this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null);\n  this.timeoutId_ && (goog.Timer.clear(this.timeoutId_), this.timeoutId_ = null);\n};\ngoog.net.XhrIo.prototype.isActive = function() {\n  return !!this.xhr_;\n};\ngoog.net.XhrIo.prototype.isComplete = function() {\n  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n};\ngoog.net.XhrIo.prototype.isSuccess = function() {\n  var status = this.getStatus();\n  return goog.net.HttpStatus.isSuccess(status) || 0 === status && !this.isLastUriEffectiveSchemeHttp_();\n};\ngoog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {\n  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));\n  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);\n};\ngoog.net.XhrIo.prototype.getReadyState = function() {\n  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;\n};\ngoog.net.XhrIo.prototype.getStatus = function() {\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;\n  } catch (e) {\n    return -1;\n  }\n};\ngoog.net.XhrIo.prototype.getStatusText = function() {\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : \"\";\n  } catch (e) {\n    return goog.log.fine(this.logger_, \"Can not get status: \" + e.message), \"\";\n  }\n};\ngoog.net.XhrIo.prototype.getLastUri = function() {\n  return String(this.lastUri_);\n};\ngoog.net.XhrIo.prototype.getResponseText = function() {\n  try {\n    return this.xhr_ ? this.xhr_.responseText : \"\";\n  } catch (e) {\n    return goog.log.fine(this.logger_, \"Can not get responseText: \" + e.message), \"\";\n  }\n};\ngoog.net.XhrIo.prototype.getResponseBody = function() {\n  try {\n    if (this.xhr_ && \"responseBody\" in this.xhr_) {\n      return this.xhr_.responseBody;\n    }\n  } catch (e) {\n    goog.log.fine(this.logger_, \"Can not get responseBody: \" + e.message);\n  }\n  return null;\n};\ngoog.net.XhrIo.prototype.getResponseXml = function() {\n  try {\n    return this.xhr_ ? this.xhr_.responseXML : null;\n  } catch (e) {\n    return goog.log.fine(this.logger_, \"Can not get responseXML: \" + e.message), null;\n  }\n};\ngoog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {\n  if (this.xhr_) {\n    var responseText = this.xhr_.responseText;\n    opt_xssiPrefix && 0 == responseText.indexOf(opt_xssiPrefix) && (responseText = responseText.substring(opt_xssiPrefix.length));\n    return goog.json.hybrid.parse(responseText);\n  }\n};\ngoog.net.XhrIo.prototype.getResponse = function() {\n  try {\n    if (!this.xhr_) {\n      return null;\n    }\n    if (\"response\" in this.xhr_) {\n      return this.xhr_.response;\n    }\n    switch(this.responseType_) {\n      case goog.net.XhrIo.ResponseType.DEFAULT:\n      case goog.net.XhrIo.ResponseType.TEXT:\n        return this.xhr_.responseText;\n      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:\n        if (\"mozResponseArrayBuffer\" in this.xhr_) {\n          return this.xhr_.mozResponseArrayBuffer;\n        }\n    }\n    goog.log.error(this.logger_, \"Response type \" + this.responseType_ + \" is not supported on this browser\");\n    return null;\n  } catch (e) {\n    return goog.log.fine(this.logger_, \"Can not get response: \" + e.message), null;\n  }\n};\ngoog.net.XhrIo.prototype.getResponseHeader = function(key) {\n  if (this.xhr_ && this.isComplete()) {\n    var value = this.xhr_.getResponseHeader(key);\n    return null === value ? void 0 : value;\n  }\n};\ngoog.net.XhrIo.prototype.getAllResponseHeaders = function() {\n  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() || \"\" : \"\";\n};\ngoog.net.XhrIo.prototype.getResponseHeaders = function() {\n  for (var headersObject = {}, headersArray = this.getAllResponseHeaders().split(\"\\r\\n\"), i = 0; i < headersArray.length; i++) {\n    if (!goog.string.isEmptyOrWhitespace(headersArray[i])) {\n      var keyValue = goog.string.splitLimit(headersArray[i], \":\", 1), key = keyValue[0], value = keyValue[1];\n      if (\"string\" === typeof value) {\n        value = value.trim();\n        var values$jscomp$0 = headersObject[key] || [];\n        headersObject[key] = values$jscomp$0;\n        values$jscomp$0.push(value);\n      }\n    }\n  }\n  return module$contents$goog$object_map(headersObject, function(values) {\n    return values.join(\", \");\n  });\n};\ngoog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {\n  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;\n};\ngoog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {\n  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : \"\";\n};\ngoog.net.XhrIo.prototype.getLastErrorCode = function() {\n  return this.lastErrorCode_;\n};\ngoog.net.XhrIo.prototype.getLastError = function() {\n  return \"string\" === typeof this.lastError_ ? this.lastError_ : String(this.lastError_);\n};\ngoog.net.XhrIo.prototype.formatMsg_ = function(msg) {\n  return msg + \" [\" + this.lastMethod_ + \" \" + this.lastUri_ + \" \" + this.getStatus() + \"]\";\n};\ngoog.debug.entryPointRegistry.register(function(transformer) {\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n});\nee.apiclient = {};\nvar module$contents$ee$apiclient_apiclient = {};\nee.apiclient.VERSION = module$exports$ee$apiVersion.V1ALPHA;\nee.apiclient.API_CLIENT_VERSION = \"0.1.289\";\nee.apiclient.NULL_VALUE = module$exports$eeapiclient$domain_object.NULL_VALUE;\nee.apiclient.PromiseRequestService = module$exports$eeapiclient$promise_request_service.PromiseRequestService;\nee.apiclient.MakeRequestParams = module$contents$eeapiclient$request_params_MakeRequestParams;\nee.apiclient.deserialize = module$contents$eeapiclient$domain_object_deserialize;\nee.apiclient.serialize = module$contents$eeapiclient$domain_object_serialize;\nvar module$contents$ee$apiclient_Call = function(callback, retries) {\n  module$contents$ee$apiclient_apiclient.initialize();\n  this.callback = callback;\n  this.requestService = new module$contents$ee$apiclient_EERequestService(!callback, retries);\n};\nmodule$contents$ee$apiclient_Call.prototype.handle = function(response) {\n  var $jscomp$this = this;\n  if (response instanceof Promise) {\n    if (this.callback) {\n      var callback = function(result, error) {\n        try {\n          return $jscomp$this.callback(result, error);\n        } catch (callbackError) {\n          setTimeout(function() {\n            throw callbackError;\n          }, 0);\n        }\n      };\n      response.then(callback, function(error) {\n        return callback(void 0, error);\n      });\n    }\n  } else {\n    response.then(function(result) {\n      response = result;\n    });\n  }\n  return response;\n};\nmodule$contents$ee$apiclient_Call.prototype.projectsPath = function() {\n  return \"projects/\" + module$contents$ee$apiclient_apiclient.getProject();\n};\nmodule$contents$ee$apiclient_Call.prototype.algorithms = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsAlgorithmsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.projects = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.assets = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsAssetsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.operations = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsOperationsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.value = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsValueApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.maps = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsMapsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.map = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsMapApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.image = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsImageApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.table = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsTableApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.tables = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsTablesApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.video = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsVideoApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.videoMap = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsVideoMapApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.classifier = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsClassifierApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.dmsMaps = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsDmsMapsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.thumbnails = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsThumbnailsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.videoThumbnails = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsVideoThumbnailsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nmodule$contents$ee$apiclient_Call.prototype.filmstripThumbnails = function() {\n  return new module$exports$eeapiclient$ee_api_client.ProjectsFilmstripThumbnailsApiClientImpl(module$exports$ee$apiVersion.V1ALPHA, this.requestService);\n};\nvar module$contents$ee$apiclient_EERequestService = function(sync, retries) {\n  this.sync = sync = void 0 === sync ? !1 : sync;\n  this.retries = null != retries ? retries : sync ? module$contents$ee$apiclient_apiclient.MAX_SYNC_RETRIES_ : module$contents$ee$apiclient_apiclient.MAX_ASYNC_RETRIES_;\n};\n$jscomp.inherits(module$contents$ee$apiclient_EERequestService, module$exports$eeapiclient$promise_request_service.PromiseRequestService);\nmodule$contents$ee$apiclient_EERequestService.prototype.send = function(params, responseCtor) {\n  var $jscomp$this = this;\n  module$contents$eeapiclient$request_params_processParams(params);\n  var path = params.path || \"\", url = module$contents$ee$apiclient_apiclient.getSafeApiUrl() + path, args = module$contents$ee$apiclient_apiclient.makeRequest_(params.queryParams || {}), body = params.body ? JSON.stringify(params.body) : void 0;\n  if (this.sync) {\n    var raw = module$contents$ee$apiclient_apiclient.send(url, args, void 0, params.httpMethod, body, this.retries), value$62 = responseCtor ? module$contents$eeapiclient$domain_object_deserialize(responseCtor, raw) : raw, thenable = function(v) {\n      return {then:function(f) {\n        return thenable(f(v));\n      }};\n    };\n    return thenable(value$62);\n  }\n  return (new Promise(function(resolve, reject) {\n    module$contents$ee$apiclient_apiclient.send(url, args, function(value, error) {\n      error ? reject(error) : resolve(value);\n    }, params.httpMethod, body, $jscomp$this.retries);\n  })).then(function(r) {\n    return responseCtor ? module$contents$eeapiclient$domain_object_deserialize(responseCtor, r) : r;\n  });\n};\nmodule$contents$ee$apiclient_EERequestService.prototype.makeRequest = function(params) {\n};\nvar module$contents$ee$apiclient_BatchCall = function(callback) {\n  module$contents$ee$apiclient_Call.call(this, callback);\n  this.requestService = new module$contents$ee$apiclient_BatchRequestService();\n};\n$jscomp.inherits(module$contents$ee$apiclient_BatchCall, module$contents$ee$apiclient_Call);\nmodule$contents$ee$apiclient_BatchCall.prototype.send = function(parts, getResponse) {\n  var $jscomp$this = this, batchUrl = module$contents$ee$apiclient_apiclient.getSafeApiUrl() + \"/batch\", body = parts.map(function($jscomp$destructuring$var20) {\n    var $jscomp$destructuring$var21 = $jscomp.makeIterator($jscomp$destructuring$var20), id = $jscomp$destructuring$var21.next().value, $jscomp$destructuring$var22 = $jscomp.makeIterator($jscomp$destructuring$var21.next().value), partBody = $jscomp$destructuring$var22.next().value, ctor = $jscomp$destructuring$var22.next().value;\n    return \"--batch_EARTHENGINE_batch\\r\\nContent-Type: application/http\\r\\nContent-Transfer-Encoding: binary\\r\\nMIME-Version: 1.0\\r\\nContent-ID: <\" + id + \">\\r\\n\\r\\n\" + partBody + \"\\r\\n\";\n  }).join(\"\") + \"--batch_EARTHENGINE_batch--\\r\\n\", deserializeResponses = function(response) {\n    var result = {};\n    parts.forEach(function($jscomp$destructuring$var23) {\n      var $jscomp$destructuring$var24 = $jscomp.makeIterator($jscomp$destructuring$var23), id = $jscomp$destructuring$var24.next().value, $jscomp$destructuring$var25 = $jscomp.makeIterator($jscomp$destructuring$var24.next().value), partBody = $jscomp$destructuring$var25.next().value, ctor = $jscomp$destructuring$var25.next().value;\n      null != response[id] && (result[id] = module$contents$eeapiclient$domain_object_deserialize(ctor, response[id]));\n    });\n    return getResponse ? getResponse(result) : result;\n  };\n  return this.callback ? (module$contents$ee$apiclient_apiclient.send(batchUrl, null, function(result, err) {\n    return $jscomp$this.callback(err ? result : deserializeResponses(result), err);\n  }, \"multipart/mixed; boundary=batch_EARTHENGINE_batch\", body), null) : deserializeResponses(module$contents$ee$apiclient_apiclient.send(batchUrl, null, void 0, \"multipart/mixed; boundary=batch_EARTHENGINE_batch\", body));\n};\nvar module$contents$ee$apiclient_BatchRequestService = function() {\n};\n$jscomp.inherits(module$contents$ee$apiclient_BatchRequestService, module$exports$eeapiclient$promise_request_service.PromiseRequestService);\nmodule$contents$ee$apiclient_BatchRequestService.prototype.send = function(params, responseCtor) {\n  var request = [params.httpMethod + \" \" + params.path + \" HTTP/1.1\"];\n  request.push(\"Content-Type: application/json; charset=utf-8\");\n  var authToken = module$contents$ee$apiclient_apiclient.getAuthToken();\n  null != authToken && request.push(\"Authorization: \" + authToken);\n  var body = params.body ? JSON.stringify(params.body) : \"\";\n  return [request.join(\"\\r\\n\") + \"\\r\\n\\r\\n\" + body, responseCtor];\n};\nmodule$contents$ee$apiclient_BatchRequestService.prototype.makeRequest = function(params) {\n};\nmodule$contents$ee$apiclient_apiclient.parseBatchReply = function(contentType, responseText, handle) {\n  for (var boundary = contentType.split(\"; boundary=\")[1], $jscomp$iter$20 = $jscomp.makeIterator(responseText.split(\"--\" + boundary)), $jscomp$key$part = $jscomp$iter$20.next(); !$jscomp$key$part.done; $jscomp$key$part = $jscomp$iter$20.next()) {\n    var groups = $jscomp$key$part.value.split(\"\\r\\n\\r\\n\");\n    if (!(3 > groups.length)) {\n      var id = groups[0].match(/\\r\\nContent-ID: <response-([^>]*)>/)[1], status = Number(groups[1].match(/^HTTP\\S*\\s(\\d+)\\s/)[1]), text = groups.slice(2).join(\"\\r\\n\\r\\n\");\n      handle(id, status, text);\n    }\n  }\n};\nmodule$contents$ee$apiclient_apiclient.setApiKey = function(apiKey) {\n  module$contents$ee$apiclient_apiclient.cloudApiKey_ = apiKey;\n};\nmodule$contents$ee$apiclient_apiclient.getApiKey = function() {\n  return module$contents$ee$apiclient_apiclient.cloudApiKey_;\n};\nmodule$contents$ee$apiclient_apiclient.DEFAULT_PROJECT_ = \"earthengine-legacy\";\nmodule$contents$ee$apiclient_apiclient.setProject = function(project) {\n  module$contents$ee$apiclient_apiclient.project_ = project;\n};\nmodule$contents$ee$apiclient_apiclient.getProject = function() {\n  return module$contents$ee$apiclient_apiclient.project_;\n};\nmodule$contents$ee$apiclient_apiclient.getSafeApiUrl = function() {\n  var url = module$contents$ee$apiclient_apiclient.apiBaseUrl_.replace(/\\/api$/, \"\");\n  return \"window\" in goog.global && !url.match(/^https?:\\/\\/content-/) ? url.replace(/^(https?:\\/\\/)(.*\\.googleapis\\.com)$/, \"$1content-$2\") : url;\n};\nmodule$contents$ee$apiclient_apiclient.mergeAuthScopes_ = function(includeDefaultScopes, includeStorageScope, extraScopes) {\n  var scopes = [];\n  includeDefaultScopes && (scopes = scopes.concat(module$contents$ee$apiclient_apiclient.DEFAULT_AUTH_SCOPES_));\n  includeStorageScope && scopes.push(module$contents$ee$apiclient_apiclient.STORAGE_SCOPE_);\n  scopes = scopes.concat(extraScopes);\n  module$contents$goog$array_removeDuplicates(scopes);\n  return scopes;\n};\nmodule$contents$ee$apiclient_apiclient.setAuthToken = function(clientId, tokenType, accessToken, expiresIn, extraScopes, callback, updateAuthLibrary, suppressDefaultScopes) {\n  var scopes = module$contents$ee$apiclient_apiclient.mergeAuthScopes_(!suppressDefaultScopes, !1, extraScopes || []);\n  module$contents$ee$apiclient_apiclient.authClientId_ = clientId;\n  module$contents$ee$apiclient_apiclient.authScopes_ = scopes;\n  var tokenObject = {token_type:tokenType, access_token:accessToken, state:scopes.join(\" \"), expires_in:expiresIn};\n  module$contents$ee$apiclient_apiclient.handleAuthResult_(void 0, void 0, tokenObject);\n  !1 === updateAuthLibrary ? callback && callback() : module$contents$ee$apiclient_apiclient.ensureAuthLibLoaded_(function() {\n    goog.global.gapi.auth.setToken(tokenObject);\n    callback && callback();\n  });\n};\nmodule$contents$ee$apiclient_apiclient.refreshAuthToken = function(success, error, onImmediateFailed) {\n  if (module$contents$ee$apiclient_apiclient.isAuthTokenRefreshingEnabled_()) {\n    var authArgs = {client_id:String(module$contents$ee$apiclient_apiclient.authClientId_), immediate:!0, scope:module$contents$ee$apiclient_apiclient.authScopes_.join(\" \")};\n    module$contents$ee$apiclient_apiclient.authTokenRefresher_(authArgs, function(result) {\n      if (\"immediate_failed\" == result.error && onImmediateFailed) {\n        onImmediateFailed();\n      } else {\n        if (\"window\" in goog.global) {\n          try {\n            module$contents$ee$apiclient_apiclient.ensureAuthLibLoaded_(function() {\n              try {\n                goog.global.gapi.auth.setToken(result), module$contents$ee$apiclient_apiclient.handleAuthResult_(success, error, result);\n              } catch (e) {\n                error(e.toString());\n              }\n            });\n          } catch (e) {\n            error(e.toString());\n          }\n        } else {\n          module$contents$ee$apiclient_apiclient.handleAuthResult_(success, error, result);\n        }\n      }\n    });\n  }\n};\nmodule$contents$ee$apiclient_apiclient.setAuthTokenRefresher = function(refresher) {\n  module$contents$ee$apiclient_apiclient.authTokenRefresher_ = refresher;\n};\nmodule$contents$ee$apiclient_apiclient.getAuthToken = function() {\n  module$contents$ee$apiclient_apiclient.authTokenExpiration_ && 0 <= Date.now() - module$contents$ee$apiclient_apiclient.authTokenExpiration_ && module$contents$ee$apiclient_apiclient.clearAuthToken();\n  return module$contents$ee$apiclient_apiclient.authToken_;\n};\nmodule$contents$ee$apiclient_apiclient.clearAuthToken = function() {\n  module$contents$ee$apiclient_apiclient.authToken_ = null;\n  module$contents$ee$apiclient_apiclient.authTokenExpiration_ = null;\n};\nmodule$contents$ee$apiclient_apiclient.getAuthClientId = function() {\n  return module$contents$ee$apiclient_apiclient.authClientId_;\n};\nmodule$contents$ee$apiclient_apiclient.getAuthScopes = function() {\n  return module$contents$ee$apiclient_apiclient.authScopes_;\n};\nmodule$contents$ee$apiclient_apiclient.setAuthClient = function(clientId, scopes) {\n  module$contents$ee$apiclient_apiclient.authClientId_ = clientId;\n  module$contents$ee$apiclient_apiclient.authScopes_ = scopes;\n};\nmodule$contents$ee$apiclient_apiclient.setAppIdToken = function(token) {\n  module$contents$ee$apiclient_apiclient.appIdToken_ = token;\n};\nmodule$contents$ee$apiclient_apiclient.initialize = function(apiBaseUrl, tileBaseUrl, xsrfToken, project) {\n  null != apiBaseUrl ? module$contents$ee$apiclient_apiclient.apiBaseUrl_ = apiBaseUrl : module$contents$ee$apiclient_apiclient.initialized_ || (module$contents$ee$apiclient_apiclient.apiBaseUrl_ = module$contents$ee$apiclient_apiclient.DEFAULT_API_BASE_URL_);\n  null != tileBaseUrl ? module$contents$ee$apiclient_apiclient.tileBaseUrl_ = tileBaseUrl : module$contents$ee$apiclient_apiclient.initialized_ || (module$contents$ee$apiclient_apiclient.tileBaseUrl_ = module$contents$ee$apiclient_apiclient.DEFAULT_TILE_BASE_URL_);\n  void 0 !== xsrfToken && (module$contents$ee$apiclient_apiclient.xsrfToken_ = xsrfToken);\n  null != project ? module$contents$ee$apiclient_apiclient.setProject(project) : module$contents$ee$apiclient_apiclient.setProject(module$contents$ee$apiclient_apiclient.getProject() || module$contents$ee$apiclient_apiclient.DEFAULT_PROJECT_);\n  module$contents$ee$apiclient_apiclient.initialized_ = !0;\n};\nmodule$contents$ee$apiclient_apiclient.reset = function() {\n  module$contents$ee$apiclient_apiclient.apiBaseUrl_ = null;\n  module$contents$ee$apiclient_apiclient.tileBaseUrl_ = null;\n  module$contents$ee$apiclient_apiclient.xsrfToken_ = null;\n  module$contents$ee$apiclient_apiclient.initialized_ = !1;\n};\nmodule$contents$ee$apiclient_apiclient.setDeadline = function(milliseconds) {\n  module$contents$ee$apiclient_apiclient.deadlineMs_ = milliseconds;\n};\nmodule$contents$ee$apiclient_apiclient.setParamAugmenter = function(augmenter) {\n  module$contents$ee$apiclient_apiclient.paramAugmenter_ = augmenter || goog.functions.identity;\n};\nmodule$contents$ee$apiclient_apiclient.getApiBaseUrl = function() {\n  return module$contents$ee$apiclient_apiclient.apiBaseUrl_;\n};\nmodule$contents$ee$apiclient_apiclient.getTileBaseUrl = function() {\n  return module$contents$ee$apiclient_apiclient.tileBaseUrl_;\n};\nmodule$contents$ee$apiclient_apiclient.getXsrfToken = function() {\n  return module$contents$ee$apiclient_apiclient.xsrfToken_;\n};\nmodule$contents$ee$apiclient_apiclient.isInitialized = function() {\n  return module$contents$ee$apiclient_apiclient.initialized_;\n};\nmodule$contents$ee$apiclient_apiclient.send = function(path, params, callback, method, body, retries) {\n  module$contents$ee$apiclient_apiclient.initialize();\n  var profileHookAtCallTime = module$contents$ee$apiclient_apiclient.profileHook_, contentType = \"application/x-www-form-urlencoded\";\n  body && (contentType = \"application/json\", method && method.startsWith(\"multipart\") && (contentType = method, method = \"POST\"));\n  method = method || \"POST\";\n  var headers = {\"Content-Type\":contentType,}, version = \"0.1.289\";\n  \"0.1.289\" === version && (version = \"latest\");\n  headers[module$contents$ee$apiclient_apiclient.API_CLIENT_VERSION_HEADER] = \"ee-js/\" + version;\n  var authToken = module$contents$ee$apiclient_apiclient.getAuthToken();\n  if (null != authToken) {\n    headers.Authorization = authToken;\n  } else {\n    if (callback && module$contents$ee$apiclient_apiclient.isAuthTokenRefreshingEnabled_()) {\n      return module$contents$ee$apiclient_apiclient.refreshAuthToken(function() {\n        module$contents$ee$apiclient_apiclient.withProfiling(profileHookAtCallTime, function() {\n          module$contents$ee$apiclient_apiclient.send(path, params, callback, method);\n        });\n      }), null;\n    }\n  }\n  params = params ? params.clone() : new goog.Uri.QueryData();\n  null != module$contents$ee$apiclient_apiclient.cloudApiKey_ && params.add(\"key\", module$contents$ee$apiclient_apiclient.cloudApiKey_);\n  profileHookAtCallTime && (headers[module$contents$ee$apiclient_apiclient.PROFILE_REQUEST_HEADER] = \"1\");\n  module$contents$ee$apiclient_apiclient.getProject() && module$contents$ee$apiclient_apiclient.getProject() !== module$contents$ee$apiclient_apiclient.DEFAULT_PROJECT_ && (headers[module$contents$ee$apiclient_apiclient.USER_PROJECT_OVERRIDE_HEADER_] = module$contents$ee$apiclient_apiclient.getProject());\n  params = module$contents$ee$apiclient_apiclient.paramAugmenter_(params, path);\n  null != module$contents$ee$apiclient_apiclient.xsrfToken_ && (headers[\"X-XSRF-Token\"] = module$contents$ee$apiclient_apiclient.xsrfToken_);\n  null != module$contents$ee$apiclient_apiclient.appIdToken_ && (headers[module$contents$ee$apiclient_apiclient.APP_ID_TOKEN_HEADER_] = module$contents$ee$apiclient_apiclient.appIdToken_);\n  var requestData = body || null, paramString = params ? params.toString() : \"\";\n  \"POST\" === method && void 0 === body ? requestData = paramString : goog.string.isEmptyOrWhitespace(paramString) || (path += goog.string.contains(path, \"?\") ? \"&\" : \"?\", path += paramString);\n  var url = path.startsWith(\"/\") ? module$contents$ee$apiclient_apiclient.apiBaseUrl_ + path : path;\n  if (callback) {\n    return module$contents$ee$apiclient_apiclient.requestQueue_.push(module$contents$ee$apiclient_apiclient.buildAsyncRequest_(url, callback, method, requestData, headers, retries)), module$contents$ee$apiclient_apiclient.RequestThrottle_.fire(), null;\n  }\n  for (var setRequestHeader = function(value, key) {\n    this.setRequestHeader && this.setRequestHeader(key, value);\n  }, xmlHttp, retryCount = 0, maxRetries = null != retries ? retries : module$contents$ee$apiclient_apiclient.MAX_SYNC_RETRIES_;;) {\n    xmlHttp = (0,goog.net.XmlHttp)();\n    xmlHttp.open(method, url, !1);\n    module$contents$goog$object_forEach(headers, setRequestHeader, xmlHttp);\n    xmlHttp.send(requestData);\n    if (429 != xmlHttp.status || retryCount > maxRetries) {\n      break;\n    }\n    retryCount++;\n  }\n  return module$contents$ee$apiclient_apiclient.handleResponse_(xmlHttp.status, function getResponseHeaderSafe(header) {\n    try {\n      return xmlHttp.getResponseHeader(header);\n    } catch (e) {\n      return null;\n    }\n  }, xmlHttp.responseText, profileHookAtCallTime, void 0, url, method);\n};\nmodule$contents$ee$apiclient_apiclient.buildAsyncRequest_ = function(url, callback, method, content, headers, retries) {\n  var retryCount = 0, request = {url:url, method:method, content:content, headers:headers}, profileHookAtCallTime = module$contents$ee$apiclient_apiclient.profileHook_, maxRetries = null != retries ? retries : module$contents$ee$apiclient_apiclient.MAX_ASYNC_RETRIES_;\n  request.callback = function(e) {\n    var xhrIo = e.target;\n    return 429 == xhrIo.getStatus() && retryCount < maxRetries ? (retryCount++, setTimeout(function() {\n      module$contents$ee$apiclient_apiclient.requestQueue_.push(request);\n      module$contents$ee$apiclient_apiclient.RequestThrottle_.fire();\n    }, module$contents$ee$apiclient_apiclient.calculateRetryWait_(retryCount)), null) : module$contents$ee$apiclient_apiclient.handleResponse_(xhrIo.getStatus(), goog.bind(xhrIo.getResponseHeader, xhrIo), xhrIo.getResponseText(), profileHookAtCallTime, callback, url, method);\n  };\n  return request;\n};\nmodule$contents$ee$apiclient_apiclient.withProfiling = function(hook, body, thisObject) {\n  var saved = module$contents$ee$apiclient_apiclient.profileHook_;\n  try {\n    return module$contents$ee$apiclient_apiclient.profileHook_ = hook, body.call(thisObject);\n  } finally {\n    module$contents$ee$apiclient_apiclient.profileHook_ = saved;\n  }\n};\nmodule$contents$ee$apiclient_apiclient.handleResponse_ = function(status$jscomp$0, getResponseHeader, responseText, profileHook, callback, url, method) {\n  var profileId = profileHook ? getResponseHeader(module$contents$ee$apiclient_apiclient.PROFILE_HEADER) : \"\";\n  profileId && profileHook && profileHook(profileId);\n  var parseJson = function(body) {\n    try {\n      var response = JSON.parse(body);\n      return goog.isObject(response) && \"error\" in response && \"message\" in response.error ? response.error.message : {parsed:response};\n    } catch (e) {\n      return \"Invalid JSON: \" + body;\n    }\n  }, statusError = function(status) {\n    if (0 === status) {\n      return \"Failed to contact Earth Engine servers. Please check your connection, firewall, or browser extension settings.\";\n    }\n    if (200 > status || 300 <= status) {\n      return \"Server returned HTTP code: \" + status + \" for \" + method + \" \" + url;\n    }\n  }, errorMessage, typeHeader = getResponseHeader(\"Content-Type\") || \"application/json\", contentType = typeHeader.replace(/;.*/, \"\");\n  if (\"application/json\" === contentType || \"text/json\" === contentType) {\n    var response$jscomp$0 = parseJson(responseText);\n    if (response$jscomp$0.parsed) {\n      var data = response$jscomp$0.parsed;\n      void 0 === data && (errorMessage = \"Malformed response: \" + responseText);\n    } else {\n      errorMessage = response$jscomp$0;\n    }\n  } else {\n    if (\"multipart/mixed\" === contentType) {\n      data = {};\n      var errors = [];\n      module$contents$ee$apiclient_apiclient.parseBatchReply(typeHeader, responseText, function(id, status, text) {\n        var response = parseJson(text);\n        response.parsed && (data[id] = response.parsed);\n        var error = (response.parsed ? \"\" : response) || statusError(status);\n        error && errors.push(id + \": \" + error);\n      });\n      errors.length && (errorMessage = errors.join(\"\\n\"));\n    } else {\n      var typeError = \"Response was unexpectedly not JSON, but \" + contentType;\n    }\n  }\n  errorMessage = errorMessage || statusError(status$jscomp$0) || typeError;\n  if (callback) {\n    return callback(data, errorMessage), null;\n  }\n  if (!errorMessage) {\n    return data;\n  }\n  throw Error(errorMessage);\n};\nmodule$contents$ee$apiclient_apiclient.ensureAuthLibLoaded_ = function(callback) {\n  var done = function() {\n    goog.global.gapi.config.update(\"client/cors\", !0);\n    module$contents$ee$apiclient_apiclient.authTokenRefresher_ || module$contents$ee$apiclient_apiclient.setAuthTokenRefresher(goog.global.gapi.auth.authorize);\n    callback();\n  };\n  if (goog.isObject(goog.global.gapi) && goog.isObject(goog.global.gapi.auth) && \"function\" === typeof goog.global.gapi.auth.authorize) {\n    done();\n  } else {\n    for (var callbackName = Date.now().toString(36); callbackName in goog.global;) {\n      callbackName += \"_\";\n    }\n    goog.global[callbackName] = function() {\n      delete goog.global[callbackName];\n      done();\n    };\n    goog.net.jsloader.safeLoad(goog.html.TrustedResourceUrl.format(module$contents$ee$apiclient_apiclient.AUTH_LIBRARY_URL_, {onload:callbackName}));\n  }\n};\nmodule$contents$ee$apiclient_apiclient.handleAuthResult_ = function(success, error, result) {\n  if (result.access_token) {\n    var token = result.token_type + \" \" + result.access_token;\n    if (result.expires_in || 0 === result.expires_in) {\n      var expiresInMs = 900 * result.expires_in, timeout = setTimeout(module$contents$ee$apiclient_apiclient.refreshAuthToken, 0.9 * expiresInMs);\n      void 0 !== timeout.unref && timeout.unref();\n      module$contents$ee$apiclient_apiclient.authTokenExpiration_ = Date.now() + expiresInMs;\n    }\n    module$contents$ee$apiclient_apiclient.authToken_ = token;\n    success && success();\n  } else {\n    error && error(result.error || \"Unknown error.\");\n  }\n};\nmodule$contents$ee$apiclient_apiclient.makeRequest_ = function(params) {\n  for (var request = new goog.Uri.QueryData(), $jscomp$iter$21 = $jscomp.makeIterator(Object.entries(params)), $jscomp$key$ = $jscomp$iter$21.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$21.next()) {\n    var $jscomp$destructuring$var27 = $jscomp.makeIterator($jscomp$key$.value), name = $jscomp$destructuring$var27.next().value, item = $jscomp$destructuring$var27.next().value;\n    request.set(name, item);\n  }\n  return request;\n};\nmodule$contents$ee$apiclient_apiclient.setupMockSend = function(calls) {\n  function getResponse(url, method, data) {\n    url = url.replace(apiBaseUrl, \"\").replace(module$exports$ee$apiVersion.V1ALPHA + \"/projects/\" + module$contents$ee$apiclient_apiclient.DEFAULT_PROJECT_ + \"/\", \"\");\n    if (url in calls) {\n      var response = calls[url];\n    } else {\n      throw Error(url + \" mock response not specified\");\n    }\n    \"function\" === typeof response && (response = response(url, method, data));\n    \"string\" === typeof response && (response = {text:response, status:200, contentType:\"application/json; charset=utf-8\"});\n    if (\"string\" !== typeof response.text) {\n      throw Error(url + \" mock response missing/invalid text\");\n    }\n    if (\"number\" !== typeof response.status && \"function\" !== typeof response.status) {\n      throw Error(url + \" mock response missing/invalid status\");\n    }\n    return response;\n  }\n  calls = calls ? module$contents$goog$object_clone(calls) : {};\n  var apiBaseUrl;\n  goog.net.XhrIo.send = function(url, callback, method, data) {\n    apiBaseUrl = apiBaseUrl || module$contents$ee$apiclient_apiclient.apiBaseUrl_;\n    var responseData = getResponse(url, method, data), e = new function() {\n      this.target = {};\n    }();\n    e.target.getResponseText = function() {\n      return responseData.text;\n    };\n    e.target.getStatus = \"function\" === typeof responseData.status ? responseData.status : function() {\n      return responseData.status;\n    };\n    e.target.getResponseHeader = function(header) {\n      return \"Content-Type\" === header ? responseData.contentType : null;\n    };\n    setTimeout(goog.bind(callback, e, e), 0);\n    return new goog.net.XhrIo();\n  };\n  var fakeXmlHttp = function() {\n  };\n  fakeXmlHttp.prototype.open = function(method, urlIn) {\n    apiBaseUrl = apiBaseUrl || module$contents$ee$apiclient_apiclient.apiBaseUrl_;\n    this.url = urlIn;\n    this.method = method;\n  };\n  fakeXmlHttp.prototype.setRequestHeader = function() {\n  };\n  fakeXmlHttp.prototype.getResponseHeader = function(header) {\n    return \"Content-Type\" === header ? this.contentType_ || null : null;\n  };\n  fakeXmlHttp.prototype.send = function(data) {\n    var responseData = getResponse(this.url, this.method, data);\n    this.responseText = responseData.text;\n    this.status = \"function\" === typeof responseData.status ? responseData.status() : responseData.status;\n    this.contentType_ = responseData.contentType;\n  };\n  goog.net.XmlHttp.setGlobalFactory({createInstance:function() {\n    return new fakeXmlHttp();\n  }, getOptions:function() {\n    return {};\n  }});\n};\nmodule$contents$ee$apiclient_apiclient.isAuthTokenRefreshingEnabled_ = function() {\n  return !(!module$contents$ee$apiclient_apiclient.authTokenRefresher_ || !module$contents$ee$apiclient_apiclient.authClientId_);\n};\nmodule$contents$ee$apiclient_apiclient.calculateRetryWait_ = function(retryCount) {\n  return Math.min(module$contents$ee$apiclient_apiclient.MAX_RETRY_WAIT_, Math.pow(2, retryCount) * module$contents$ee$apiclient_apiclient.BASE_RETRY_WAIT_);\n};\nmodule$contents$ee$apiclient_apiclient.sleep_ = function(timeInMs) {\n  for (var end = (new Date()).getTime() + timeInMs; (new Date()).getTime() < end;) {\n  }\n};\nmodule$contents$ee$apiclient_apiclient.NetworkRequest_ = function() {\n};\nmodule$contents$ee$apiclient_apiclient.requestQueue_ = [];\nmodule$contents$ee$apiclient_apiclient.REQUEST_THROTTLE_INTERVAL_MS_ = 350;\nmodule$contents$ee$apiclient_apiclient.RequestThrottle_ = new module$contents$goog$async$Throttle_Throttle(function() {\n  var request = module$contents$ee$apiclient_apiclient.requestQueue_.shift();\n  request && goog.net.XhrIo.send(request.url, request.callback, request.method, request.content, request.headers, module$contents$ee$apiclient_apiclient.deadlineMs_);\n  module$contents$goog$array_isEmpty(module$contents$ee$apiclient_apiclient.requestQueue_) || module$contents$ee$apiclient_apiclient.RequestThrottle_.fire();\n}, module$contents$ee$apiclient_apiclient.REQUEST_THROTTLE_INTERVAL_MS_);\nmodule$contents$ee$apiclient_apiclient.apiBaseUrl_ = null;\nmodule$contents$ee$apiclient_apiclient.tileBaseUrl_ = null;\nmodule$contents$ee$apiclient_apiclient.xsrfToken_ = null;\nmodule$contents$ee$apiclient_apiclient.appIdToken_ = null;\nmodule$contents$ee$apiclient_apiclient.paramAugmenter_ = goog.functions.identity;\nmodule$contents$ee$apiclient_apiclient.authToken_ = null;\nmodule$contents$ee$apiclient_apiclient.authTokenExpiration_ = null;\nmodule$contents$ee$apiclient_apiclient.authClientId_ = null;\nmodule$contents$ee$apiclient_apiclient.authScopes_ = [];\nmodule$contents$ee$apiclient_apiclient.authTokenRefresher_ = null;\nmodule$contents$ee$apiclient_apiclient.AUTH_SCOPE_ = \"https://www.googleapis.com/auth/earthengine\";\nmodule$contents$ee$apiclient_apiclient.READ_ONLY_AUTH_SCOPE_ = \"https://www.googleapis.com/auth/earthengine.readonly\";\nmodule$contents$ee$apiclient_apiclient.CLOUD_PLATFORM_SCOPE_ = \"https://www.googleapis.com/auth/cloud-platform\";\nmodule$contents$ee$apiclient_apiclient.DEFAULT_AUTH_SCOPES_ = [module$contents$ee$apiclient_apiclient.AUTH_SCOPE_, module$contents$ee$apiclient_apiclient.CLOUD_PLATFORM_SCOPE_];\nmodule$contents$ee$apiclient_apiclient.AUTH_LIBRARY_URL_ = goog.string.Const.from(\"https://apis.google.com/js/client.js?onload=%{onload}\");\nmodule$contents$ee$apiclient_apiclient.STORAGE_SCOPE_ = \"https://www.googleapis.com/auth/devstorage.read_write\";\nmodule$contents$ee$apiclient_apiclient.cloudApiKey_ = null;\nmodule$contents$ee$apiclient_apiclient.initialized_ = !1;\nmodule$contents$ee$apiclient_apiclient.deadlineMs_ = 0;\nmodule$contents$ee$apiclient_apiclient.profileHook_ = null;\nmodule$contents$ee$apiclient_apiclient.BASE_RETRY_WAIT_ = 1000;\nmodule$contents$ee$apiclient_apiclient.MAX_RETRY_WAIT_ = 120000;\nmodule$contents$ee$apiclient_apiclient.MAX_ASYNC_RETRIES_ = 10;\nmodule$contents$ee$apiclient_apiclient.MAX_SYNC_RETRIES_ = 5;\nmodule$contents$ee$apiclient_apiclient.APP_ID_TOKEN_HEADER_ = \"X-Earth-Engine-App-ID-Token\";\nmodule$contents$ee$apiclient_apiclient.PROFILE_HEADER = \"X-Earth-Engine-Computation-Profile\";\nmodule$contents$ee$apiclient_apiclient.PROFILE_REQUEST_HEADER = \"X-Earth-Engine-Computation-Profiling\";\nmodule$contents$ee$apiclient_apiclient.USER_PROJECT_OVERRIDE_HEADER_ = \"X-Goog-User-Project\";\nmodule$contents$ee$apiclient_apiclient.API_CLIENT_VERSION_HEADER = \"x-goog-api-client\";\nmodule$contents$ee$apiclient_apiclient.DEFAULT_API_BASE_URL_ = \"https://earthengine.googleapis.com/api\";\nmodule$contents$ee$apiclient_apiclient.DEFAULT_TILE_BASE_URL_ = \"https://earthengine.googleapis.com\";\nmodule$contents$ee$apiclient_apiclient.AuthArgs = function() {\n};\nmodule$contents$ee$apiclient_apiclient.AuthResponse = function() {\n};\nee.apiclient.Call = module$contents$ee$apiclient_Call;\nee.apiclient.BatchCall = module$contents$ee$apiclient_BatchCall;\nee.apiclient.setApiKey = module$contents$ee$apiclient_apiclient.setApiKey;\nee.apiclient.getApiKey = module$contents$ee$apiclient_apiclient.getApiKey;\nee.apiclient.setProject = module$contents$ee$apiclient_apiclient.setProject;\nee.apiclient.getProject = module$contents$ee$apiclient_apiclient.getProject;\nee.apiclient.DEFAULT_PROJECT = module$contents$ee$apiclient_apiclient.DEFAULT_PROJECT_;\nee.apiclient.PROFILE_HEADER = module$contents$ee$apiclient_apiclient.PROFILE_HEADER;\nee.apiclient.PROFILE_REQUEST_HEADER = module$contents$ee$apiclient_apiclient.PROFILE_REQUEST_HEADER;\nee.apiclient.API_CLIENT_VERSION_HEADER = module$contents$ee$apiclient_apiclient.API_CLIENT_VERSION_HEADER;\nee.apiclient.send = module$contents$ee$apiclient_apiclient.send;\nee.apiclient.AUTH_SCOPE = module$contents$ee$apiclient_apiclient.AUTH_SCOPE_;\nee.apiclient.READ_ONLY_AUTH_SCOPE = module$contents$ee$apiclient_apiclient.READ_ONLY_AUTH_SCOPE_;\nee.apiclient.CLOUD_PLATFORM_SCOPE = module$contents$ee$apiclient_apiclient.CLOUD_PLATFORM_SCOPE_;\nee.apiclient.STORAGE_SCOPE = module$contents$ee$apiclient_apiclient.STORAGE_SCOPE_;\nee.apiclient.DEFAULT_AUTH_SCOPES = module$contents$ee$apiclient_apiclient.DEFAULT_AUTH_SCOPES_;\nee.apiclient.makeRequest = module$contents$ee$apiclient_apiclient.makeRequest_;\nee.apiclient.reset = module$contents$ee$apiclient_apiclient.reset;\nee.apiclient.initialize = module$contents$ee$apiclient_apiclient.initialize;\nee.apiclient.setDeadline = module$contents$ee$apiclient_apiclient.setDeadline;\nee.apiclient.isInitialized = module$contents$ee$apiclient_apiclient.isInitialized;\nee.apiclient.ensureAuthLibLoaded = module$contents$ee$apiclient_apiclient.ensureAuthLibLoaded_;\nee.apiclient.handleAuthResult = module$contents$ee$apiclient_apiclient.handleAuthResult_;\nee.apiclient.refreshAuthToken = module$contents$ee$apiclient_apiclient.refreshAuthToken;\nee.apiclient.setAuthClient = module$contents$ee$apiclient_apiclient.setAuthClient;\nee.apiclient.getAuthScopes = module$contents$ee$apiclient_apiclient.getAuthScopes;\nee.apiclient.getAuthClientId = module$contents$ee$apiclient_apiclient.getAuthClientId;\nee.apiclient.getAuthToken = module$contents$ee$apiclient_apiclient.getAuthToken;\nee.apiclient.setAuthToken = module$contents$ee$apiclient_apiclient.setAuthToken;\nee.apiclient.clearAuthToken = module$contents$ee$apiclient_apiclient.clearAuthToken;\nee.apiclient.setAuthTokenRefresher = module$contents$ee$apiclient_apiclient.setAuthTokenRefresher;\nee.apiclient.setAppIdToken = module$contents$ee$apiclient_apiclient.setAppIdToken;\nee.apiclient.mergeAuthScopes = module$contents$ee$apiclient_apiclient.mergeAuthScopes_;\nee.apiclient.setupMockSend = module$contents$ee$apiclient_apiclient.setupMockSend;\nee.apiclient.setParamAugmenter = module$contents$ee$apiclient_apiclient.setParamAugmenter;\nee.apiclient.withProfiling = module$contents$ee$apiclient_apiclient.withProfiling;\nee.apiclient.getApiBaseUrl = module$contents$ee$apiclient_apiclient.getApiBaseUrl;\nee.apiclient.getTileBaseUrl = module$contents$ee$apiclient_apiclient.getTileBaseUrl;\nee.apiclient.AuthArgs = module$contents$ee$apiclient_apiclient.AuthArgs;\nee.apiclient.AuthResponse = module$contents$ee$apiclient_apiclient.AuthResponse;\nee.apiclient.RequestThrottle = module$contents$ee$apiclient_apiclient.RequestThrottle_;\nee.apiclient.calculateRetryWait = module$contents$ee$apiclient_apiclient.calculateRetryWait_;\nee.apiclient.MAX_ASYNC_RETRIES = module$contents$ee$apiclient_apiclient.MAX_ASYNC_RETRIES_;\nee.apiclient.REQUEST_THROTTLE_INTERVAL_MS = module$contents$ee$apiclient_apiclient.REQUEST_THROTTLE_INTERVAL_MS_;\nee.apiclient.isAuthTokenRefreshingEnabled = module$contents$ee$apiclient_apiclient.isAuthTokenRefreshingEnabled_;\ngoog.exportSymbol(\"ee.api.ListAssetsResponse\", module$exports$eeapiclient$ee_api_client.ListAssetsResponse);\ngoog.exportSymbol(\"ee.api.EarthEngineAsset\", module$exports$eeapiclient$ee_api_client.EarthEngineAsset);\ngoog.exportSymbol(\"ee.api.ListImagesResponse\", module$exports$eeapiclient$ee_api_client.ListImagesResponse);\ngoog.exportSymbol(\"ee.api.Image\", module$exports$eeapiclient$ee_api_client.Image);\ngoog.exportSymbol(\"ee.api.Operation\", module$exports$eeapiclient$ee_api_client.Operation);\nee.Encodable = function() {\n};\nee.rpc_node = {};\nee.rpc_node.constant = function(obj) {\n  if (void 0 === obj || null === obj) {\n    obj = module$exports$eeapiclient$domain_object.NULL_VALUE;\n  }\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({constantValue:obj});\n};\nee.rpc_node.reference = function(ref) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({valueReference:ref});\n};\nee.rpc_node.array = function(values) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({arrayValue:new module$exports$eeapiclient$ee_api_client.ArrayValue({values:values})});\n};\nee.rpc_node.dictionary = function(values) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({dictionaryValue:new module$exports$eeapiclient$ee_api_client.DictionaryValue({values:values})});\n};\nee.rpc_node.functionByName = function(name, args) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({functionInvocationValue:new module$exports$eeapiclient$ee_api_client.FunctionInvocation({functionName:name, arguments:args})});\n};\nee.rpc_node.functionByReference = function(ref, args) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({functionInvocationValue:new module$exports$eeapiclient$ee_api_client.FunctionInvocation({functionReference:ref, arguments:args})});\n};\nee.rpc_node.functionDefinition = function(argumentNames, body) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({functionDefinitionValue:new module$exports$eeapiclient$ee_api_client.FunctionDefinition({argumentNames:argumentNames, body:body})});\n};\nee.rpc_node.argumentReference = function(ref) {\n  return new module$exports$eeapiclient$ee_api_client.ValueNode({argumentReference:ref});\n};\nee.rpc_convert = {};\nee.rpc_convert.fileFormat = function(format) {\n  if (!format) {\n    return \"AUTO_JPEG_PNG\";\n  }\n  var upper = format.toUpperCase();\n  switch(upper) {\n    case \"JPG\":\n      return \"JPEG\";\n    case \"AUTO\":\n      return \"AUTO_JPEG_PNG\";\n    case \"TIF\":\n    case \"TIFF\":\n    case \"GEOTIF\":\n    case \"GEOTIFF\":\n      return \"GEO_TIFF\";\n    case \"TF_RECORD\":\n    case \"TFRECORD\":\n      return \"TF_RECORD_IMAGE\";\n    case \"NUMPY\":\n      return \"NPY\";\n    case \"ZIPPED_TIF\":\n    case \"ZIPPED_TIFF\":\n    case \"ZIPPED_GEOTIF\":\n    case \"ZIPPED_GEOTIFF\":\n      return \"ZIPPED_GEO_TIFF\";\n    case \"ZIPPED_TIF_PER_BAND\":\n    case \"ZIPPED_TIFF_PER_BAND\":\n    case \"ZIPPED_GEOTIF_PER_BAND\":\n    case \"ZIPPED_GEOTIFF_PER_BAND\":\n      return \"ZIPPED_GEO_TIFF_PER_BAND\";\n    default:\n      return upper;\n  }\n};\nee.rpc_convert.tableFileFormat = function(format) {\n  if (!format) {\n    return \"CSV\";\n  }\n  var upper = format.toUpperCase();\n  switch(upper) {\n    case \"TF_RECORD\":\n    case \"TFRECORD\":\n      return \"TF_RECORD_TABLE\";\n    case \"JSON\":\n    case \"GEOJSON\":\n      return \"GEO_JSON\";\n    default:\n      return upper;\n  }\n};\nee.rpc_convert.orientation = function(orientation) {\n  if (!orientation) {\n    return \"VERTICAL\";\n  }\n  var upper = orientation.toUpperCase();\n  if (\"HORIZONTAL\" !== upper || \"VERTICAL\" !== upper) {\n    throw Error('Orientation must be \"horizontal\" or \"vertical\"');\n  }\n  return upper;\n};\nee.rpc_convert.bandList = function(bands) {\n  if (!bands) {\n    return [];\n  }\n  if (\"string\" === typeof bands) {\n    return bands.split(\",\");\n  }\n  if (Array.isArray(bands)) {\n    return bands;\n  }\n  throw Error(\"Invalid band list \" + bands);\n};\nee.rpc_convert.visualizationOptions = function(params) {\n  var result = new module$exports$eeapiclient$ee_api_client.VisualizationOptions(), hasResult = !1;\n  if (\"palette\" in params) {\n    var pal = params.palette;\n    result.paletteColors = \"string\" === typeof pal ? pal.split(\",\") : pal;\n    hasResult = !0;\n  }\n  var ranges = [];\n  if (\"gain\" in params || \"bias\" in params) {\n    if (\"min\" in params || \"max\" in params) {\n      throw Error(\"Gain and bias can't be specified with min and max\");\n    }\n    var valueRange = result.paletteColors ? result.paletteColors.length - 1 : 255;\n    ranges = ee.rpc_convert.pairedValues(params, \"bias\", \"gain\").map(function(pair) {\n      var min = -pair.bias / pair.gain;\n      return {min:min, max:valueRange / pair.gain + min};\n    });\n  } else {\n    if (\"min\" in params || \"max\" in params) {\n      ranges = ee.rpc_convert.pairedValues(params, \"min\", \"max\");\n    }\n  }\n  0 !== ranges.length && (result.ranges = ranges.map(function(range) {\n    return new module$exports$eeapiclient$ee_api_client.DoubleRange(range);\n  }), hasResult = !0);\n  var gammas = ee.rpc_convert.csvToNumbers(params.gamma);\n  if (1 < gammas.length) {\n    throw Error(\"Only one gamma value is supported\");\n  }\n  1 === gammas.length && (result.gamma = gammas[0], hasResult = !0);\n  return hasResult ? result : null;\n};\nee.rpc_convert.csvToNumbers = function(csv) {\n  return csv ? csv.split(\",\").map(Number) : [];\n};\nee.rpc_convert.pairedValues = function(obj, a, b) {\n  var aValues = ee.rpc_convert.csvToNumbers(obj[a]), bValues = ee.rpc_convert.csvToNumbers(obj[b]);\n  if (0 === aValues.length) {\n    return bValues.map(function(value) {\n      var $jscomp$compprop1 = {};\n      return $jscomp$compprop1[a] = 0, $jscomp$compprop1[b] = value, $jscomp$compprop1;\n    });\n  }\n  if (0 === bValues.length) {\n    return aValues.map(function(value) {\n      var $jscomp$compprop2 = {};\n      return $jscomp$compprop2[a] = value, $jscomp$compprop2[b] = 1, $jscomp$compprop2;\n    });\n  }\n  if (aValues.length !== bValues.length) {\n    throw Error(\"Length of \" + a + \" and \" + b + \" must match.\");\n  }\n  return aValues.map(function(value, index) {\n    var $jscomp$compprop3 = {};\n    return $jscomp$compprop3[a] = value, $jscomp$compprop3[b] = bValues[index], $jscomp$compprop3;\n  });\n};\nee.rpc_convert.algorithms = function(result) {\n  for (var convertArgument = function(argument) {\n    var internalArgument = {};\n    internalArgument.description = argument.description || \"\";\n    internalArgument.type = argument.type || \"\";\n    null != argument.argumentName && (internalArgument.name = argument.argumentName);\n    void 0 !== argument.defaultValue && (internalArgument[\"default\"] = argument.defaultValue);\n    null != argument.optional && (internalArgument.optional = argument.optional);\n    return internalArgument;\n  }, convertAlgorithm = function(algorithm) {\n    var internalAlgorithm = {};\n    internalAlgorithm.args = (algorithm.arguments || []).map(convertArgument);\n    internalAlgorithm.description = algorithm.description || \"\";\n    internalAlgorithm.returns = algorithm.returnType || \"\";\n    null != algorithm.hidden && (internalAlgorithm.hidden = algorithm.hidden);\n    algorithm.preview && (internalAlgorithm.preview = algorithm.preview);\n    algorithm.deprecated && (internalAlgorithm.deprecated = algorithm.deprecationReason);\n    algorithm.sourceCodeUri && (internalAlgorithm.sourceCodeUri = algorithm.sourceCodeUri);\n    return internalAlgorithm;\n  }, internalAlgorithms = {}, $jscomp$iter$22 = $jscomp.makeIterator(result.algorithms || []), $jscomp$key$algorithm = $jscomp$iter$22.next(); !$jscomp$key$algorithm.done; $jscomp$key$algorithm = $jscomp$iter$22.next()) {\n    var algorithm$jscomp$0 = $jscomp$key$algorithm.value, name = algorithm$jscomp$0.name.replace(/^algorithms\\//, \"\");\n    internalAlgorithms[name] = convertAlgorithm(algorithm$jscomp$0);\n  }\n  return internalAlgorithms;\n};\nee.rpc_convert.DEFAULT_PROJECT = \"earthengine-legacy\";\nee.rpc_convert.PUBLIC_PROJECT = \"earthengine-public\";\nee.rpc_convert.PROJECT_ID_RE = /^projects\\/((?:\\w+(?:[\\w\\-]+\\.[\\w\\-]+)*?\\.\\w+:)?[a-z][a-z0-9\\-]{4,28}[a-z0-9])\\/.+/;\nee.rpc_convert.CLOUD_ASSET_ID_RE = /^projects\\/((?:\\w+(?:[\\w\\-]+\\.[\\w\\-]+)*?\\.\\w+:)?[a-z][a-z0-9\\-]{4,28}[a-z0-9])\\/assets\\/(.*)$/;\nee.rpc_convert.CLOUD_ASSET_ROOT_RE = /^projects\\/((?:\\w+(?:[\\w\\-]+\\.[\\w\\-]+)*?\\.\\w+:)?[a-z][a-z0-9\\-]{4,28}[a-z0-9])\\/assets\\/?$/;\nee.rpc_convert.projectIdFromPath = function(path) {\n  var matches = ee.rpc_convert.PROJECT_ID_RE.exec(path);\n  return matches ? matches[1] : ee.rpc_convert.DEFAULT_PROJECT;\n};\nee.rpc_convert.projectParentFromPath = function(path) {\n  return \"projects/\" + ee.rpc_convert.projectIdFromPath(path);\n};\nee.rpc_convert.assetIdToAssetName = function(param) {\n  return ee.rpc_convert.CLOUD_ASSET_ID_RE.exec(param) ? param : /^(users|projects)\\/.*/.exec(param) ? \"projects/\" + ee.rpc_convert.DEFAULT_PROJECT + \"/assets/\" + param : \"projects/\" + ee.rpc_convert.PUBLIC_PROJECT + \"/assets/\" + param;\n};\nee.rpc_convert.assetNameToAssetId = function(name) {\n  var parts = name.split(\"/\"), isLegacyProject = function(id) {\n    return [ee.rpc_convert.DEFAULT_PROJECT, ee.rpc_convert.PUBLIC_PROJECT].includes(id);\n  };\n  return \"projects\" === parts[0] && \"assets\" === parts[2] && isLegacyProject(parts[1]) ? parts.slice(3).join(\"/\") : name;\n};\nee.rpc_convert.assetTypeForCreate = function(param) {\n  switch(param) {\n    case \"ImageCollection\":\n      return \"IMAGE_COLLECTION\";\n    case \"Folder\":\n      return \"FOLDER\";\n    default:\n      return param;\n  }\n};\nee.rpc_convert.listAssetsToGetList = function(result) {\n  return (result.assets || []).map(ee.rpc_convert.assetToLegacyResult);\n};\nee.rpc_convert.listImagesToGetList = function(result) {\n  return (result.images || []).map(ee.rpc_convert.imageToLegacyResult);\n};\nee.rpc_convert.assetTypeToLegacyAssetType = function(type) {\n  switch(type) {\n    case \"ALGORITHM\":\n      return \"Algorithm\";\n    case \"FOLDER\":\n      return \"Folder\";\n    case \"IMAGE\":\n      return \"Image\";\n    case \"IMAGE_COLLECTION\":\n      return \"ImageCollection\";\n    case \"TABLE\":\n      return \"Table\";\n    case \"CLASSIFIER\":\n      return \"Classifier\";\n    case \"DATA_MAPPING_SERVICE\":\n      return \"FeatureView\";\n    default:\n      return \"Unknown\";\n  }\n};\nee.rpc_convert.legacyAssetTypeToAssetType = function(type) {\n  switch(type) {\n    case \"Algorithm\":\n      return \"ALGORITHM\";\n    case \"Folder\":\n      return \"FOLDER\";\n    case \"Image\":\n      return \"IMAGE\";\n    case \"ImageCollection\":\n      return \"IMAGE_COLLECTION\";\n    case \"Table\":\n      return \"TABLE\";\n    default:\n      return \"UNKNOWN\";\n  }\n};\nee.rpc_convert.assetToLegacyResult = function(result) {\n  var asset = ee.rpc_convert.makeLegacyAsset_(ee.rpc_convert.assetTypeToLegacyAssetType(result.type), result.name), properties = Object.assign({}, result.properties || {});\n  result.sizeBytes && (properties[\"system:asset_size\"] = Number(result.sizeBytes));\n  result.startTime && (properties[\"system:time_start\"] = Date.parse(result.startTime));\n  result.endTime && (properties[\"system:time_end\"] = Date.parse(result.endTime));\n  result.geometry && (properties[\"system:footprint\"] = result.geometry);\n  \"string\" === typeof result.title && (properties[\"system:title\"] = result.title);\n  \"string\" === typeof result.description && (properties[\"system:description\"] = result.description);\n  result.updateTime && (asset.version = 1000 * Date.parse(result.updateTime));\n  asset.properties = properties;\n  result.bands && (asset.bands = result.bands.map(function(band) {\n    var legacyBand = {id:band.id, crs:band.grid.crsCode, dimensions:void 0, crs_transform:void 0,};\n    if (band.grid) {\n      if (null != band.grid.affineTransform) {\n        var affine = band.grid.affineTransform;\n        legacyBand.crs_transform = [affine.scaleX || 0, affine.shearX || 0, affine.translateX || 0, affine.shearY || 0, affine.scaleY || 0, affine.translateY || 0,];\n      }\n      null != band.grid.dimensions && (legacyBand.dimensions = [band.grid.dimensions.width, band.grid.dimensions.height]);\n    }\n    if (band.dataType) {\n      var dataType = {type:\"PixelType\"};\n      dataType.precision = (band.dataType.precision || \"\").toLowerCase();\n      band.dataType.range && (dataType.min = band.dataType.range.min || 0, dataType.max = band.dataType.range.max);\n      legacyBand.data_type = dataType;\n    }\n    return legacyBand;\n  }));\n  result.dmsAssetLocation && (asset.mapLocation = result.dmsAssetLocation);\n  result.featureCount && (asset.featureCount = result.featureCount);\n  return asset;\n};\nee.rpc_convert.legacyPropertiesToAssetUpdate = function(legacyProperties) {\n  var asset = new module$exports$eeapiclient$ee_api_client.EarthEngineAsset(), toTimestamp = function(msec) {\n    return (new Date(Number(msec))).toISOString();\n  }, asNull = function(value) {\n    return null === value ? module$exports$eeapiclient$domain_object.NULL_VALUE : void 0;\n  }, properties = Object.assign({}, legacyProperties), value$jscomp$0, extractValue = function(key) {\n    value$jscomp$0 = properties[key];\n    delete properties[key];\n    return value$jscomp$0;\n  };\n  void 0 !== extractValue(\"system:asset_size\") && (asset.sizeBytes = asNull(value$jscomp$0) || String(value$jscomp$0));\n  void 0 !== extractValue(\"system:time_start\") && (asset.startTime = asNull(value$jscomp$0) || toTimestamp(value$jscomp$0));\n  void 0 !== extractValue(\"system:time_end\") && (asset.endTime = asNull(value$jscomp$0) || toTimestamp(value$jscomp$0));\n  void 0 !== extractValue(\"system:footprint\") && (asset.geometry = asNull(value$jscomp$0) || value$jscomp$0);\n  extractValue(\"system:title\");\n  \"string\" !== typeof value$jscomp$0 && null !== value$jscomp$0 || null != properties.title || (properties.title = asNull(value$jscomp$0) || value$jscomp$0);\n  extractValue(\"system:description\");\n  \"string\" !== typeof value$jscomp$0 && null !== value$jscomp$0 || null != properties.description || (properties.description = asNull(value$jscomp$0) || value$jscomp$0);\n  Object.entries(properties).forEach(function($jscomp$destructuring$var28) {\n    var $jscomp$destructuring$var29 = $jscomp.makeIterator($jscomp$destructuring$var28), key = $jscomp$destructuring$var29.next().value, value = $jscomp$destructuring$var29.next().value;\n    properties[key] = asNull(value) || value;\n  });\n  asset.properties = properties;\n  return asset;\n};\nee.rpc_convert.imageToLegacyResult = function(result) {\n  return ee.rpc_convert.makeLegacyAsset_(\"Image\", result.name);\n};\nee.rpc_convert.makeLegacyAsset_ = function(type, name) {\n  var legacyAsset = {};\n  legacyAsset.type = type;\n  null != name && (legacyAsset.id = ee.rpc_convert.assetNameToAssetId(name));\n  return legacyAsset;\n};\nee.rpc_convert.getListToListImages = function(param) {\n  var imagesRequest = {}, toTimestamp = function(msec) {\n    return (new Date(msec)).toISOString();\n  };\n  param.num && (imagesRequest.pageSize = param.num);\n  param.starttime && (imagesRequest.startTime = toTimestamp(param.starttime));\n  param.endtime && (imagesRequest.endTime = toTimestamp(param.endtime));\n  param.bbox && (imagesRequest.region = ee.rpc_convert.boundingBoxToGeoJson(param.bbox));\n  param.region && (imagesRequest.region = param.region);\n  param.bbox && param.region && console.warn(\"Multiple request parameters converted to region\");\n  for (var allKeys = \"id num starttime endtime bbox region\".split(\" \"), $jscomp$iter$23 = $jscomp.makeIterator(Object.keys(param).filter(function(k) {\n    return !allKeys.includes(k);\n  })), $jscomp$key$key = $jscomp$iter$23.next(); !$jscomp$key$key.done; $jscomp$key$key = $jscomp$iter$23.next()) {\n    console.warn(\"Unrecognized key \" + $jscomp$key$key.value + \" ignored\");\n  }\n  imagesRequest.fields = \"assets(type,path)\";\n  return imagesRequest;\n};\nee.rpc_convert.boundingBoxToGeoJson = function(bbox) {\n  return '{\"type\":\"Polygon\",\"coordinates\":[[[' + [[0, 1], [2, 1], [2, 3], [0, 3], [0, 1]].map(function(i) {\n    return bbox[i[0]] + \",\" + bbox[i[1]];\n  }).join(\"],[\") + \"]]]}\";\n};\nee.rpc_convert.iamPolicyToAcl = function(result) {\n  var bindingMap = {};\n  (result.bindings || []).forEach(function(binding) {\n    bindingMap[binding.role] = binding.members;\n  });\n  var groups = new Set(), toAcl = function(member) {\n    var email = member.replace(/^group:|^user:|^serviceAccount:/, \"\");\n    member.startsWith(\"group:\") && groups.add(email);\n    return email;\n  }, readersWithAll = bindingMap[\"roles/viewer\"] || [], readers = readersWithAll.filter(function(reader) {\n    return \"allUsers\" !== reader;\n  }), internalAcl = {owners:(bindingMap[\"roles/owner\"] || []).map(toAcl), writers:(bindingMap[\"roles/editor\"] || []).map(toAcl), readers:readers.map(toAcl),};\n  0 < groups.size && (internalAcl.groups = groups);\n  readersWithAll.length != readers.length && (internalAcl.all_users_can_read = !0);\n  return internalAcl;\n};\nee.rpc_convert.aclToIamPolicy = function(acls) {\n  var isGroup = function(email) {\n    return acls.groups && acls.groups.has(email);\n  }, isServiceAccount = function(email) {\n    return email.match(/[@|\\.]gserviceaccount\\.com$/);\n  }, asMembers = function(aclName) {\n    return (acls[aclName] || []).map(function(email) {\n      var prefix = \"user:\";\n      isGroup(email) ? prefix = \"group:\" : isServiceAccount(email) && (prefix = \"serviceAccount:\");\n      return prefix + email;\n    });\n  }, all = acls.all_users_can_read ? [\"allUsers\"] : [], bindings = [{role:\"roles/owner\", members:asMembers(\"owners\")}, {role:\"roles/viewer\", members:asMembers(\"readers\").concat(all)}, {role:\"roles/editor\", members:asMembers(\"writers\")},].map(function(params) {\n    return new module$exports$eeapiclient$ee_api_client.Binding(params);\n  });\n  return new module$exports$eeapiclient$ee_api_client.Policy({bindings:bindings.filter(function(binding) {\n    return binding.members.length;\n  }), etag:null,});\n};\nee.rpc_convert.taskIdToOperationName = function(operationNameOrTaskId) {\n  return \"projects/\" + ee.rpc_convert.operationNameToProject(operationNameOrTaskId) + \"/operations/\" + ee.rpc_convert.operationNameToTaskId(operationNameOrTaskId);\n};\nee.rpc_convert.operationNameToTaskId = function(result) {\n  var found = /^.*operations\\/(.*)$/.exec(result);\n  return found ? found[1] : result;\n};\nee.rpc_convert.operationNameToProject = function(operationNameOrTaskId) {\n  var found = /^projects\\/(.+)\\/operations\\/.+$/.exec(operationNameOrTaskId);\n  return found ? found[1] : ee.rpc_convert.DEFAULT_PROJECT;\n};\nee.rpc_convert.operationToTask = function(result) {\n  var internalTask = {}, assignTimestamp = function(field, timestamp) {\n    null != timestamp && (internalTask[field] = Date.parse(timestamp));\n  }, convertState = function(state) {\n    switch(state) {\n      case \"PENDING\":\n        return \"READY\";\n      case \"RUNNING\":\n        return \"RUNNING\";\n      case \"CANCELLING\":\n        return \"CANCEL_REQUESTED\";\n      case \"SUCCEEDED\":\n        return \"COMPLETED\";\n      case \"CANCELLED\":\n        return \"CANCELLED\";\n      case \"FAILED\":\n        return \"FAILED\";\n      default:\n        return \"UNKNOWN\";\n    }\n  }, metadata = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.OperationMetadata, result.metadata || {});\n  null != metadata.description && (internalTask.description = metadata.description);\n  null != metadata.state && (internalTask.state = convertState(metadata.state));\n  assignTimestamp(\"creation_timestamp_ms\", metadata.createTime);\n  assignTimestamp(\"update_timestamp_ms\", metadata.updateTime);\n  assignTimestamp(\"start_timestamp_ms\", metadata.startTime);\n  internalTask.attempt = metadata.attempt;\n  result.done && null != result.error && (internalTask.error_message = result.error.message);\n  null != result.name && (internalTask.id = ee.rpc_convert.operationNameToTaskId(result.name), internalTask.name = result.name);\n  internalTask.task_type = metadata.type || \"UNKNOWN\";\n  internalTask.output_url = metadata.destinationUris;\n  internalTask.source_url = metadata.scriptUri;\n  return internalTask;\n};\nee.rpc_convert.operationToProcessingResponse = function(operation) {\n  var result = {started:\"OK\"};\n  operation.name && (result.taskId = ee.rpc_convert.operationNameToTaskId(operation.name), result.name = operation.name);\n  operation.error && (result.note = operation.error.message);\n  return result;\n};\nee.rpc_convert.sourcePathsToUris = function(source) {\n  return source.primaryPath ? [source.primaryPath].concat($jscomp.arrayFromIterable(source.additionalPaths || [])) : null;\n};\nee.rpc_convert.toImageManifest = function(params) {\n  var convertImageSource = function(source) {\n    var apiSource = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.ImageSource, source);\n    apiSource.uris = ee.rpc_convert.sourcePathsToUris(source);\n    return apiSource;\n  }, manifest = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.ImageManifest, params);\n  manifest.name = ee.rpc_convert.assetIdToAssetName(params.id);\n  manifest.tilesets = (params.tilesets || []).map(function(tileset) {\n    var apiTileset = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.Tileset, tileset);\n    apiTileset.sources = (tileset.sources || []).map(convertImageSource);\n    return apiTileset;\n  });\n  manifest.bands = (params.bands || []).map(function(band) {\n    var apiBand = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.TilesetBand, band);\n    apiBand.missingData = ee.rpc_convert.toOnePlatformMissingData(band.missingData);\n    return apiBand;\n  });\n  manifest.missingData = ee.rpc_convert.toOnePlatformMissingData(params.missingData);\n  manifest.maskBands = module$contents$goog$array_flatten((params.tilesets || []).map(ee.rpc_convert.toOnePlatformMaskBands));\n  manifest.pyramidingPolicy = params.pyramidingPolicy || null;\n  if (params.properties) {\n    var properties = Object.assign({}, params.properties), toTimestamp = function(msec) {\n      return (new Date(Number(msec))).toISOString();\n    }, value, extractValue = function(key) {\n      value = properties[key];\n      delete properties[key];\n      return value;\n    };\n    extractValue(\"system:time_start\") && (manifest.startTime = toTimestamp(value));\n    extractValue(\"system:time_end\") && (manifest.endTime = toTimestamp(value));\n    manifest.properties = properties;\n  }\n  return manifest;\n};\nee.rpc_convert.toOnePlatformMaskBands = function(tileset) {\n  var maskBands = [];\n  if (!Array.isArray(tileset.fileBands)) {\n    return maskBands;\n  }\n  var convertMaskConfig = function(maskConfig) {\n    var bandIds = [];\n    null != maskConfig && Array.isArray(maskConfig.bandId) && (bandIds = maskConfig.bandId.map(function(bandId) {\n      return bandId || \"\";\n    }));\n    return new module$exports$eeapiclient$ee_api_client.TilesetMaskBand({tilesetId:tileset.id || \"\", bandIds:bandIds});\n  };\n  tileset.fileBands.forEach(function(fileBand) {\n    fileBand.maskForAllBands ? maskBands.push(convertMaskConfig(null)) : null != fileBand.maskForBands && maskBands.push(convertMaskConfig(fileBand.maskForBands));\n  });\n  return maskBands;\n};\nee.rpc_convert.toTableManifest = function(params) {\n  var manifest = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.TableManifest, params);\n  manifest.name = ee.rpc_convert.assetIdToAssetName(params.id);\n  manifest.sources = (params.sources || []).map(function(source) {\n    var apiSource = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.TableSource, source);\n    apiSource.uris = ee.rpc_convert.sourcePathsToUris(source);\n    source.maxError && (apiSource.maxErrorMeters = source.maxError);\n    return apiSource;\n  });\n  if (params.properties) {\n    var properties = Object.assign({}, params.properties), toTimestamp = function(msec) {\n      return (new Date(Number(msec))).toISOString();\n    }, value, extractValue = function(key) {\n      value = properties[key];\n      delete properties[key];\n      return value;\n    };\n    extractValue(\"system:time_start\") && (manifest.startTime = toTimestamp(value));\n    extractValue(\"system:time_end\") && (manifest.endTime = toTimestamp(value));\n    manifest.properties = properties;\n  }\n  return manifest;\n};\nee.rpc_convert.toOnePlatformMissingData = function(params) {\n  if (null == params) {\n    return null;\n  }\n  var missingData = new module$exports$eeapiclient$ee_api_client.MissingData({values:[]});\n  null != params.value && \"number\" === typeof params.value && missingData.values.push(params.value);\n  Array.isArray(params.values) && params.values.map(function(value) {\n    \"number\" === typeof value && missingData.values.push(value);\n  });\n  return module$contents$goog$array_isEmpty(missingData.values) ? null : missingData;\n};\nee.rpc_convert.folderQuotaToAssetQuotaDetails = function(quota) {\n  var toNumber = function(field) {\n    return Number(field || 0);\n  };\n  return {asset_count:{usage:toNumber(quota.assetCount), limit:toNumber(quota.maxAssetCount),}, asset_size:{usage:toNumber(quota.sizeBytes), limit:toNumber(quota.maxSizeBytes),}};\n};\ngoog.crypt = {};\ngoog.crypt.Hash = function() {\n  this.blockSize = -1;\n};\ngoog.crypt.Md5 = function() {\n  goog.crypt.Hash.call(this);\n  this.blockSize = 64;\n  this.chain_ = Array(4);\n  this.block_ = Array(this.blockSize);\n  this.totalLength_ = this.blockLength_ = 0;\n  this.reset();\n};\ngoog.inherits(goog.crypt.Md5, goog.crypt.Hash);\ngoog.crypt.Md5.prototype.reset = function() {\n  this.chain_[0] = 1732584193;\n  this.chain_[1] = 4023233417;\n  this.chain_[2] = 2562383102;\n  this.chain_[3] = 271733878;\n  this.totalLength_ = this.blockLength_ = 0;\n};\ngoog.crypt.Md5.prototype.compress_ = function(buf, opt_offset) {\n  opt_offset || (opt_offset = 0);\n  var X = Array(16);\n  if (\"string\" === typeof buf) {\n    for (var i = 0; 16 > i; ++i) {\n      X[i] = buf.charCodeAt(opt_offset++) | buf.charCodeAt(opt_offset++) << 8 | buf.charCodeAt(opt_offset++) << 16 | buf.charCodeAt(opt_offset++) << 24;\n    }\n  } else {\n    for (i = 0; 16 > i; ++i) {\n      X[i] = buf[opt_offset++] | buf[opt_offset++] << 8 | buf[opt_offset++] << 16 | buf[opt_offset++] << 24;\n    }\n  }\n  var A = this.chain_[0], B = this.chain_[1], C = this.chain_[2], D = this.chain_[3], sum = 0;\n  sum = A + (D ^ B & (C ^ D)) + X[0] + 3614090360 & 4294967295;\n  A = B + (sum << 7 & 4294967295 | sum >>> 25);\n  sum = D + (C ^ A & (B ^ C)) + X[1] + 3905402710 & 4294967295;\n  D = A + (sum << 12 & 4294967295 | sum >>> 20);\n  sum = C + (B ^ D & (A ^ B)) + X[2] + 606105819 & 4294967295;\n  C = D + (sum << 17 & 4294967295 | sum >>> 15);\n  sum = B + (A ^ C & (D ^ A)) + X[3] + 3250441966 & 4294967295;\n  B = C + (sum << 22 & 4294967295 | sum >>> 10);\n  sum = A + (D ^ B & (C ^ D)) + X[4] + 4118548399 & 4294967295;\n  A = B + (sum << 7 & 4294967295 | sum >>> 25);\n  sum = D + (C ^ A & (B ^ C)) + X[5] + 1200080426 & 4294967295;\n  D = A + (sum << 12 & 4294967295 | sum >>> 20);\n  sum = C + (B ^ D & (A ^ B)) + X[6] + 2821735955 & 4294967295;\n  C = D + (sum << 17 & 4294967295 | sum >>> 15);\n  sum = B + (A ^ C & (D ^ A)) + X[7] + 4249261313 & 4294967295;\n  B = C + (sum << 22 & 4294967295 | sum >>> 10);\n  sum = A + (D ^ B & (C ^ D)) + X[8] + 1770035416 & 4294967295;\n  A = B + (sum << 7 & 4294967295 | sum >>> 25);\n  sum = D + (C ^ A & (B ^ C)) + X[9] + 2336552879 & 4294967295;\n  D = A + (sum << 12 & 4294967295 | sum >>> 20);\n  sum = C + (B ^ D & (A ^ B)) + X[10] + 4294925233 & 4294967295;\n  C = D + (sum << 17 & 4294967295 | sum >>> 15);\n  sum = B + (A ^ C & (D ^ A)) + X[11] + 2304563134 & 4294967295;\n  B = C + (sum << 22 & 4294967295 | sum >>> 10);\n  sum = A + (D ^ B & (C ^ D)) + X[12] + 1804603682 & 4294967295;\n  A = B + (sum << 7 & 4294967295 | sum >>> 25);\n  sum = D + (C ^ A & (B ^ C)) + X[13] + 4254626195 & 4294967295;\n  D = A + (sum << 12 & 4294967295 | sum >>> 20);\n  sum = C + (B ^ D & (A ^ B)) + X[14] + 2792965006 & 4294967295;\n  C = D + (sum << 17 & 4294967295 | sum >>> 15);\n  sum = B + (A ^ C & (D ^ A)) + X[15] + 1236535329 & 4294967295;\n  B = C + (sum << 22 & 4294967295 | sum >>> 10);\n  sum = A + (C ^ D & (B ^ C)) + X[1] + 4129170786 & 4294967295;\n  A = B + (sum << 5 & 4294967295 | sum >>> 27);\n  sum = D + (B ^ C & (A ^ B)) + X[6] + 3225465664 & 4294967295;\n  D = A + (sum << 9 & 4294967295 | sum >>> 23);\n  sum = C + (A ^ B & (D ^ A)) + X[11] + 643717713 & 4294967295;\n  C = D + (sum << 14 & 4294967295 | sum >>> 18);\n  sum = B + (D ^ A & (C ^ D)) + X[0] + 3921069994 & 4294967295;\n  B = C + (sum << 20 & 4294967295 | sum >>> 12);\n  sum = A + (C ^ D & (B ^ C)) + X[5] + 3593408605 & 4294967295;\n  A = B + (sum << 5 & 4294967295 | sum >>> 27);\n  sum = D + (B ^ C & (A ^ B)) + X[10] + 38016083 & 4294967295;\n  D = A + (sum << 9 & 4294967295 | sum >>> 23);\n  sum = C + (A ^ B & (D ^ A)) + X[15] + 3634488961 & 4294967295;\n  C = D + (sum << 14 & 4294967295 | sum >>> 18);\n  sum = B + (D ^ A & (C ^ D)) + X[4] + 3889429448 & 4294967295;\n  B = C + (sum << 20 & 4294967295 | sum >>> 12);\n  sum = A + (C ^ D & (B ^ C)) + X[9] + 568446438 & 4294967295;\n  A = B + (sum << 5 & 4294967295 | sum >>> 27);\n  sum = D + (B ^ C & (A ^ B)) + X[14] + 3275163606 & 4294967295;\n  D = A + (sum << 9 & 4294967295 | sum >>> 23);\n  sum = C + (A ^ B & (D ^ A)) + X[3] + 4107603335 & 4294967295;\n  C = D + (sum << 14 & 4294967295 | sum >>> 18);\n  sum = B + (D ^ A & (C ^ D)) + X[8] + 1163531501 & 4294967295;\n  B = C + (sum << 20 & 4294967295 | sum >>> 12);\n  sum = A + (C ^ D & (B ^ C)) + X[13] + 2850285829 & 4294967295;\n  A = B + (sum << 5 & 4294967295 | sum >>> 27);\n  sum = D + (B ^ C & (A ^ B)) + X[2] + 4243563512 & 4294967295;\n  D = A + (sum << 9 & 4294967295 | sum >>> 23);\n  sum = C + (A ^ B & (D ^ A)) + X[7] + 1735328473 & 4294967295;\n  C = D + (sum << 14 & 4294967295 | sum >>> 18);\n  sum = B + (D ^ A & (C ^ D)) + X[12] + 2368359562 & 4294967295;\n  B = C + (sum << 20 & 4294967295 | sum >>> 12);\n  sum = A + (B ^ C ^ D) + X[5] + 4294588738 & 4294967295;\n  A = B + (sum << 4 & 4294967295 | sum >>> 28);\n  sum = D + (A ^ B ^ C) + X[8] + 2272392833 & 4294967295;\n  D = A + (sum << 11 & 4294967295 | sum >>> 21);\n  sum = C + (D ^ A ^ B) + X[11] + 1839030562 & 4294967295;\n  C = D + (sum << 16 & 4294967295 | sum >>> 16);\n  sum = B + (C ^ D ^ A) + X[14] + 4259657740 & 4294967295;\n  B = C + (sum << 23 & 4294967295 | sum >>> 9);\n  sum = A + (B ^ C ^ D) + X[1] + 2763975236 & 4294967295;\n  A = B + (sum << 4 & 4294967295 | sum >>> 28);\n  sum = D + (A ^ B ^ C) + X[4] + 1272893353 & 4294967295;\n  D = A + (sum << 11 & 4294967295 | sum >>> 21);\n  sum = C + (D ^ A ^ B) + X[7] + 4139469664 & 4294967295;\n  C = D + (sum << 16 & 4294967295 | sum >>> 16);\n  sum = B + (C ^ D ^ A) + X[10] + 3200236656 & 4294967295;\n  B = C + (sum << 23 & 4294967295 | sum >>> 9);\n  sum = A + (B ^ C ^ D) + X[13] + 681279174 & 4294967295;\n  A = B + (sum << 4 & 4294967295 | sum >>> 28);\n  sum = D + (A ^ B ^ C) + X[0] + 3936430074 & 4294967295;\n  D = A + (sum << 11 & 4294967295 | sum >>> 21);\n  sum = C + (D ^ A ^ B) + X[3] + 3572445317 & 4294967295;\n  C = D + (sum << 16 & 4294967295 | sum >>> 16);\n  sum = B + (C ^ D ^ A) + X[6] + 76029189 & 4294967295;\n  B = C + (sum << 23 & 4294967295 | sum >>> 9);\n  sum = A + (B ^ C ^ D) + X[9] + 3654602809 & 4294967295;\n  A = B + (sum << 4 & 4294967295 | sum >>> 28);\n  sum = D + (A ^ B ^ C) + X[12] + 3873151461 & 4294967295;\n  D = A + (sum << 11 & 4294967295 | sum >>> 21);\n  sum = C + (D ^ A ^ B) + X[15] + 530742520 & 4294967295;\n  C = D + (sum << 16 & 4294967295 | sum >>> 16);\n  sum = B + (C ^ D ^ A) + X[2] + 3299628645 & 4294967295;\n  B = C + (sum << 23 & 4294967295 | sum >>> 9);\n  sum = A + (C ^ (B | ~D)) + X[0] + 4096336452 & 4294967295;\n  A = B + (sum << 6 & 4294967295 | sum >>> 26);\n  sum = D + (B ^ (A | ~C)) + X[7] + 1126891415 & 4294967295;\n  D = A + (sum << 10 & 4294967295 | sum >>> 22);\n  sum = C + (A ^ (D | ~B)) + X[14] + 2878612391 & 4294967295;\n  C = D + (sum << 15 & 4294967295 | sum >>> 17);\n  sum = B + (D ^ (C | ~A)) + X[5] + 4237533241 & 4294967295;\n  B = C + (sum << 21 & 4294967295 | sum >>> 11);\n  sum = A + (C ^ (B | ~D)) + X[12] + 1700485571 & 4294967295;\n  A = B + (sum << 6 & 4294967295 | sum >>> 26);\n  sum = D + (B ^ (A | ~C)) + X[3] + 2399980690 & 4294967295;\n  D = A + (sum << 10 & 4294967295 | sum >>> 22);\n  sum = C + (A ^ (D | ~B)) + X[10] + 4293915773 & 4294967295;\n  C = D + (sum << 15 & 4294967295 | sum >>> 17);\n  sum = B + (D ^ (C | ~A)) + X[1] + 2240044497 & 4294967295;\n  B = C + (sum << 21 & 4294967295 | sum >>> 11);\n  sum = A + (C ^ (B | ~D)) + X[8] + 1873313359 & 4294967295;\n  A = B + (sum << 6 & 4294967295 | sum >>> 26);\n  sum = D + (B ^ (A | ~C)) + X[15] + 4264355552 & 4294967295;\n  D = A + (sum << 10 & 4294967295 | sum >>> 22);\n  sum = C + (A ^ (D | ~B)) + X[6] + 2734768916 & 4294967295;\n  C = D + (sum << 15 & 4294967295 | sum >>> 17);\n  sum = B + (D ^ (C | ~A)) + X[13] + 1309151649 & 4294967295;\n  B = C + (sum << 21 & 4294967295 | sum >>> 11);\n  sum = A + (C ^ (B | ~D)) + X[4] + 4149444226 & 4294967295;\n  A = B + (sum << 6 & 4294967295 | sum >>> 26);\n  sum = D + (B ^ (A | ~C)) + X[11] + 3174756917 & 4294967295;\n  D = A + (sum << 10 & 4294967295 | sum >>> 22);\n  sum = C + (A ^ (D | ~B)) + X[2] + 718787259 & 4294967295;\n  C = D + (sum << 15 & 4294967295 | sum >>> 17);\n  sum = B + (D ^ (C | ~A)) + X[9] + 3951481745 & 4294967295;\n  this.chain_[0] = this.chain_[0] + A & 4294967295;\n  this.chain_[1] = this.chain_[1] + (C + (sum << 21 & 4294967295 | sum >>> 11)) & 4294967295;\n  this.chain_[2] = this.chain_[2] + C & 4294967295;\n  this.chain_[3] = this.chain_[3] + D & 4294967295;\n};\ngoog.crypt.Md5.prototype.update = function(bytes, opt_length) {\n  void 0 === opt_length && (opt_length = bytes.length);\n  for (var lengthMinusBlock = opt_length - this.blockSize, block = this.block_, blockLength = this.blockLength_, i = 0; i < opt_length;) {\n    if (0 == blockLength) {\n      for (; i <= lengthMinusBlock;) {\n        this.compress_(bytes, i), i += this.blockSize;\n      }\n    }\n    if (\"string\" === typeof bytes) {\n      for (; i < opt_length;) {\n        if (block[blockLength++] = bytes.charCodeAt(i++), blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          break;\n        }\n      }\n    } else {\n      for (; i < opt_length;) {\n        if (block[blockLength++] = bytes[i++], blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          break;\n        }\n      }\n    }\n  }\n  this.blockLength_ = blockLength;\n  this.totalLength_ += opt_length;\n};\ngoog.crypt.Md5.prototype.digest = function() {\n  var pad = Array((56 > this.blockLength_ ? this.blockSize : 2 * this.blockSize) - this.blockLength_);\n  pad[0] = 128;\n  for (var i = 1; i < pad.length - 8; ++i) {\n    pad[i] = 0;\n  }\n  var totalBits = 8 * this.totalLength_;\n  for (i = pad.length - 8; i < pad.length; ++i) {\n    pad[i] = totalBits & 255, totalBits /= 256;\n  }\n  this.update(pad);\n  var digest = Array(16), n = 0;\n  for (i = 0; 4 > i; ++i) {\n    for (var j = 0; 32 > j; j += 8) {\n      digest[n++] = this.chain_[i] >>> j & 255;\n    }\n  }\n  return digest;\n};\nee.Serializer = function(opt_isCompound) {\n  this.HASH_KEY = \"__ee_hash__\";\n  this.isCompound_ = !1 !== opt_isCompound;\n  this.scope_ = [];\n  this.encoded_ = {};\n  this.withHashes_ = [];\n  this.hashes_ = new WeakMap();\n  this.unboundName = void 0;\n};\ngoog.exportSymbol(\"ee.Serializer\", ee.Serializer);\nee.Serializer.jsonSerializer_ = new goog.json.Serializer();\nee.Serializer.hash_ = new goog.crypt.Md5();\nee.Serializer.encode = function(obj, opt_isCompound) {\n  return (new ee.Serializer(void 0 !== opt_isCompound ? opt_isCompound : !0)).encode_(obj);\n};\ngoog.exportSymbol(\"ee.Serializer.encode\", ee.Serializer.encode);\nee.Serializer.toJSON = function(obj) {\n  return ee.Serializer.jsonSerializer_.serialize(ee.Serializer.encode(obj));\n};\ngoog.exportSymbol(\"ee.Serializer.toJSON\", ee.Serializer.toJSON);\nee.Serializer.toReadableJSON = function(obj) {\n  return ee.Serializer.stringify(ee.Serializer.encode(obj, !1));\n};\ngoog.exportSymbol(\"ee.Serializer.toReadableJSON\", ee.Serializer.toReadableJSON);\nee.Serializer.stringify = function(encoded) {\n  return \"JSON\" in goog.global ? goog.global.JSON.stringify(encoded, null, \"  \") : ee.Serializer.jsonSerializer_.serialize(encoded);\n};\nee.Serializer.prototype.encode_ = function(object) {\n  var value = this.encodeValue_(object);\n  this.isCompound_ && (value = goog.isObject(value) && \"ValueRef\" == value.type && 1 == this.scope_.length ? this.scope_[0][1] : {type:\"CompoundValue\", scope:this.scope_, value:value}, this.scope_ = [], module$contents$goog$array_forEach(this.withHashes_, goog.bind(function(obj) {\n    delete obj[this.HASH_KEY];\n  }, this)), this.withHashes_ = [], this.encoded_ = {});\n  return value;\n};\nee.Serializer.prototype.encodeValue_ = function(object) {\n  if (void 0 === object) {\n    throw Error(\"Can't encode an undefined value.\");\n  }\n  var hash = goog.isObject(object) ? object[this.HASH_KEY] : null;\n  if (this.isCompound_ && null != hash && this.encoded_[hash]) {\n    return {type:\"ValueRef\", value:this.encoded_[hash]};\n  }\n  if (null === object || \"boolean\" === typeof object || \"number\" === typeof object || \"string\" === typeof object) {\n    return object;\n  }\n  if (goog.isDateLike(object)) {\n    return {type:\"Invocation\", functionName:\"Date\", arguments:{value:Math.floor(object.getTime())}};\n  }\n  if (object instanceof ee.Encodable) {\n    var result = object.encode(goog.bind(this.encodeValue_, this));\n    if (!(Array.isArray(result) || goog.isObject(result) && \"ArgumentRef\" != result.type)) {\n      return result;\n    }\n  } else {\n    if (Array.isArray(object)) {\n      result = module$contents$goog$array_map(object, function(element) {\n        return this.encodeValue_(element);\n      }, this);\n    } else {\n      if (goog.isObject(object) && \"function\" !== typeof object) {\n        var encodedObject = module$contents$goog$object_map(object, function(element) {\n          if (\"function\" !== typeof element) {\n            return this.encodeValue_(element);\n          }\n        }, this);\n        module$contents$goog$object_remove(encodedObject, this.HASH_KEY);\n        result = {type:\"Dictionary\", value:encodedObject};\n      } else {\n        throw Error(\"Can't encode object: \" + object);\n      }\n    }\n  }\n  if (this.isCompound_) {\n    hash = ee.Serializer.computeHash(result);\n    if (this.encoded_[hash]) {\n      var name = this.encoded_[hash];\n    } else {\n      name = String(this.scope_.length), this.scope_.push([name, result]), this.encoded_[hash] = name;\n    }\n    object[this.HASH_KEY] = hash;\n    this.withHashes_.push(object);\n    return {type:\"ValueRef\", value:name};\n  }\n  return result;\n};\nee.Serializer.computeHash = function(obj) {\n  ee.Serializer.hash_.reset();\n  ee.Serializer.hash_.update(ee.Serializer.jsonSerializer_.serialize(obj));\n  return ee.Serializer.hash_.digest().toString();\n};\nee.Serializer.encodeCloudApi = function(obj) {\n  return module$contents$eeapiclient$domain_object_serialize(ee.Serializer.encodeCloudApiExpression(obj));\n};\ngoog.exportSymbol(\"ee.Serializer.encodeCloudApi\", ee.Serializer.encodeCloudApi);\nee.Serializer.encodeCloudApiExpression = function(obj, unboundName) {\n  var serializer = new ee.Serializer(!0);\n  serializer.unboundName = unboundName;\n  return serializer.encodeForCloudApi_(obj);\n};\nee.Serializer.encodeCloudApiPretty = function(obj) {\n  var encoded = (new ee.Serializer(!1)).encodeForCloudApi_(obj), values = encoded.values, walkObject = function(object) {\n    if (!goog.isObject(object)) {\n      return object;\n    }\n    for (var ret = Array.isArray(object) ? [] : {}, isNode = object instanceof Object.getPrototypeOf(module$exports$eeapiclient$ee_api_client.ValueNode), $jscomp$iter$24 = $jscomp.makeIterator(Object.entries(isNode ? object.Serializable$values : object)), $jscomp$key$ = $jscomp$iter$24.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$24.next()) {\n      var $jscomp$destructuring$var31 = $jscomp.makeIterator($jscomp$key$.value), key = $jscomp$destructuring$var31.next().value, val = $jscomp$destructuring$var31.next().value;\n      isNode ? null !== val && (ret[key] = \"functionDefinitionValue\" === key && null != val.body ? {argumentNames:val.argumentNames, body:walkObject(values[val.body])} : \"functionInvocationValue\" === key && null != val.functionReference ? {arguments:module$contents$goog$object_map(val.arguments, walkObject), functionReference:walkObject(values[val.functionReference])} : \"constantValue\" === key ? val === module$exports$eeapiclient$domain_object.NULL_VALUE ? \n      null : val : walkObject(val)) : ret[key] = walkObject(val);\n    }\n    return ret;\n  };\n  return encoded.result && walkObject(values[encoded.result]);\n};\ngoog.exportSymbol(\"ee.Serializer.encodeCloudApiPretty\", ee.Serializer.encodeCloudApiPretty);\nee.Serializer.toCloudApiJSON = function(obj) {\n  return ee.Serializer.jsonSerializer_.serialize(ee.Serializer.encodeCloudApi(obj));\n};\ngoog.exportSymbol(\"ee.Serializer.toCloudApiJSON\", ee.Serializer.toCloudApiJSON);\nee.Serializer.toReadableCloudApiJSON = function(obj) {\n  return ee.Serializer.stringify(ee.Serializer.encodeCloudApiPretty(obj));\n};\ngoog.exportSymbol(\"ee.Serializer.toReadableCloudApiJSON\", ee.Serializer.toReadableCloudApiJSON);\nee.Serializer.prototype.encodeForCloudApi_ = function(obj) {\n  try {\n    var result = this.makeReference(obj);\n    return (new ExpressionOptimizer(result, this.scope_, this.isCompound_)).optimize();\n  } finally {\n    this.hashes_ = new WeakMap(), this.encoded_ = {}, this.scope_ = [];\n  }\n};\nee.Serializer.prototype.makeReference = function(obj) {\n  var $jscomp$this = this, makeRef = function(result) {\n    var hash = ee.Serializer.computeHash(result);\n    goog.isObject(obj) && $jscomp$this.hashes_.set(obj, hash);\n    if ($jscomp$this.encoded_[hash]) {\n      return $jscomp$this.encoded_[hash];\n    }\n    var name = String($jscomp$this.scope_.length);\n    $jscomp$this.scope_.push([name, result]);\n    return $jscomp$this.encoded_[hash] = name;\n  };\n  if (goog.isObject(obj) && this.encoded_[this.hashes_.get(obj)]) {\n    return this.encoded_[this.hashes_.get(obj)];\n  }\n  if (null === obj || \"boolean\" === typeof obj || \"string\" === typeof obj || \"number\" === typeof obj) {\n    return makeRef(ee.rpc_node.constant(obj));\n  }\n  if (goog.isDateLike(obj)) {\n    return makeRef(ee.rpc_node.functionByName(\"Date\", {value:ee.rpc_node.constant(Math.floor(obj.getTime()))}));\n  }\n  if (obj instanceof ee.Encodable) {\n    return makeRef(obj.encodeCloudValue(this));\n  }\n  if (Array.isArray(obj)) {\n    return makeRef(ee.rpc_node.array(obj.map(function(x) {\n      return ee.rpc_node.reference($jscomp$this.makeReference(x));\n    })));\n  }\n  if (goog.isObject(obj) && \"function\" !== typeof obj) {\n    var values = {};\n    Object.keys(obj).sort().forEach(function(k) {\n      values[k] = ee.rpc_node.reference($jscomp$this.makeReference(obj[k]));\n    });\n    return makeRef(ee.rpc_node.dictionary(values));\n  }\n  throw Error(\"Can't encode object: \" + obj);\n};\nvar ExpressionOptimizer = function(rootReference, values, isCompound) {\n  var $jscomp$this = this;\n  this.rootReference = rootReference;\n  this.values = {};\n  values.forEach(function(tuple) {\n    return $jscomp$this.values[tuple[0]] = tuple[1];\n  });\n  this.referenceCounts = isCompound ? this.countReferences() : null;\n  this.optimizedValues = {};\n  this.referenceMap = {};\n  this.nextMappedRef = 0;\n};\nExpressionOptimizer.prototype.optimize = function() {\n  var result = this.optimizeReference(this.rootReference);\n  return new module$exports$eeapiclient$ee_api_client.Expression({result:result, values:this.optimizedValues,});\n};\nExpressionOptimizer.prototype.optimizeReference = function(ref) {\n  if (ref in this.referenceMap) {\n    return this.referenceMap[ref];\n  }\n  var mappedRef = String(this.nextMappedRef++);\n  this.referenceMap[ref] = mappedRef;\n  this.optimizedValues[mappedRef] = this.optimizeValue(this.values[ref], 0);\n  return mappedRef;\n};\nExpressionOptimizer.prototype.optimizeValue = function(value, depth) {\n  var $jscomp$this = this, isConst = function(v) {\n    return null !== v.constantValue;\n  }, serializeConst = function(v) {\n    return v === module$exports$eeapiclient$domain_object.NULL_VALUE ? null : v;\n  };\n  if (isConst(value) || null != value.integerValue || null != value.bytesValue || null != value.argumentReference) {\n    return value;\n  }\n  if (null != value.valueReference) {\n    var val = this.values[value.valueReference];\n    return null === this.referenceCounts || 50 > depth && 1 === this.referenceCounts[value.valueReference] ? this.optimizeValue(val, depth) : ExpressionOptimizer.isAlwaysLiftable(val) ? val : ee.rpc_node.reference(this.optimizeReference(value.valueReference));\n  }\n  if (null != value.arrayValue) {\n    var arr = value.arrayValue.values.map(function(v) {\n      return $jscomp$this.optimizeValue(v, depth + 3);\n    });\n    return arr.every(isConst) ? ee.rpc_node.constant(arr.map(function(v) {\n      return serializeConst(v.constantValue);\n    })) : ee.rpc_node.array(arr);\n  }\n  if (null != value.dictionaryValue) {\n    for (var values = {}, constantValues = {}, $jscomp$iter$25 = $jscomp.makeIterator(Object.entries(value.dictionaryValue.values || {})), $jscomp$key$ = $jscomp$iter$25.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$25.next()) {\n      var $jscomp$destructuring$var33 = $jscomp.makeIterator($jscomp$key$.value), k = $jscomp$destructuring$var33.next().value, v$jscomp$0 = $jscomp$destructuring$var33.next().value;\n      values[k] = this.optimizeValue(v$jscomp$0, depth + 3);\n      null !== constantValues && isConst(values[k]) ? constantValues[k] = serializeConst(values[k].constantValue) : constantValues = null;\n    }\n    return null !== constantValues ? ee.rpc_node.constant(constantValues) : ee.rpc_node.dictionary(values);\n  }\n  if (null != value.functionDefinitionValue) {\n    var def = value.functionDefinitionValue;\n    return ee.rpc_node.functionDefinition(def.argumentNames || [], this.optimizeReference(def.body || \"\"));\n  }\n  if (null != value.functionInvocationValue) {\n    for (var inv = value.functionInvocationValue, args = {}, $jscomp$iter$26 = $jscomp.makeIterator(Object.keys(inv.arguments || {})), $jscomp$key$k = $jscomp$iter$26.next(); !$jscomp$key$k.done; $jscomp$key$k = $jscomp$iter$26.next()) {\n      var k$63 = $jscomp$key$k.value;\n      args[k$63] = this.optimizeValue(inv.arguments[k$63], depth + 3);\n    }\n    return inv.functionName ? ee.rpc_node.functionByName(inv.functionName, args) : ee.rpc_node.functionByReference(this.optimizeReference(inv.functionReference || \"\"), args);\n  }\n  throw Error(\"Can't optimize value: \" + value);\n};\nExpressionOptimizer.isAlwaysLiftable = function(value) {\n  var constant = value.constantValue;\n  return null !== constant ? constant === module$exports$eeapiclient$domain_object.NULL_VALUE || \"number\" === typeof constant || \"boolean\" === typeof constant : null != value.argumentReference;\n};\nExpressionOptimizer.prototype.countReferences = function() {\n  var $jscomp$this = this, counts = {}, visitReference = function(reference) {\n    counts[reference] ? counts[reference]++ : (counts[reference] = 1, visitValue($jscomp$this.values[reference]));\n  }, visitValue = function(value) {\n    if (null != value.arrayValue) {\n      value.arrayValue.values.forEach(visitValue);\n    } else {\n      if (null != value.dictionaryValue) {\n        Object.values(value.dictionaryValue.values).forEach(visitValue);\n      } else {\n        if (null != value.functionDefinitionValue) {\n          visitReference(value.functionDefinitionValue.body);\n        } else {\n          if (null != value.functionInvocationValue) {\n            var inv = value.functionInvocationValue;\n            null != inv.functionReference && visitReference(inv.functionReference);\n            Object.values(inv.arguments).forEach(visitValue);\n          } else {\n            null != value.valueReference && visitReference(value.valueReference);\n          }\n        }\n      }\n    }\n  };\n  visitReference(this.rootReference);\n  return counts;\n};\nee.rpc_convert_batch = {};\nee.rpc_convert_batch.ExportDestination = {DRIVE:\"DRIVE\", GCS:\"GOOGLE_CLOUD_STORAGE\", ASSET:\"ASSET\", FEATURE_VIEW:\"FEATURE_VIEW\",};\nee.rpc_convert_batch.taskToExportImageRequest = function(params) {\n  if (null == params.element) {\n    throw Error('\"element\" not found in params ' + params);\n  }\n  var result = new module$exports$eeapiclient$ee_api_client.ExportImageRequest({expression:ee.Serializer.encodeCloudApiExpression(params.element), description:stringOrNull_(params.description), fileExportOptions:null, assetExportOptions:null, grid:null, maxPixels:stringOrNull_(params.maxPixels), requestId:stringOrNull_(params.id), maxWorkerCount:numberOrNull_(params.maxWorkers)}), destination = ee.rpc_convert_batch.guessDestination_(params);\n  switch(destination) {\n    case ee.rpc_convert_batch.ExportDestination.GCS:\n    case ee.rpc_convert_batch.ExportDestination.DRIVE:\n      result.fileExportOptions = ee.rpc_convert_batch.buildImageFileExportOptions_(params, destination);\n      break;\n    case ee.rpc_convert_batch.ExportDestination.ASSET:\n      result.assetExportOptions = ee.rpc_convert_batch.buildImageAssetExportOptions_(params);\n      break;\n    default:\n      throw Error('Export destination \"' + destination + '\" unknown');\n  }\n  return result;\n};\nee.rpc_convert_batch.taskToExportTableRequest = function(params) {\n  if (null == params.element) {\n    throw Error('\"element\" not found in params ' + params);\n  }\n  var selectors = params.selectors || null;\n  null != selectors && \"string\" === typeof selectors && (selectors = selectors.split(\",\"));\n  var result = new module$exports$eeapiclient$ee_api_client.ExportTableRequest({expression:ee.Serializer.encodeCloudApiExpression(params.element), description:stringOrNull_(params.description), fileExportOptions:null, assetExportOptions:null, dmsExportOptions:null, selectors:selectors, maxErrorMeters:numberOrNull_(params.maxErrorMeters), requestId:stringOrNull_(params.id), maxVertices:numberOrNull_(params.maxVertices), maxWorkerCount:numberOrNull_(params.maxWorkers)}), \n  destination = ee.rpc_convert_batch.guessDestination_(params);\n  switch(destination) {\n    case ee.rpc_convert_batch.ExportDestination.GCS:\n    case ee.rpc_convert_batch.ExportDestination.DRIVE:\n      result.fileExportOptions = ee.rpc_convert_batch.buildTableFileExportOptions_(params, destination);\n      break;\n    case ee.rpc_convert_batch.ExportDestination.ASSET:\n      result.assetExportOptions = ee.rpc_convert_batch.buildTableAssetExportOptions_(params);\n      break;\n    case ee.rpc_convert_batch.ExportDestination.FEATURE_VIEW:\n      result.dmsExportOptions = ee.rpc_convert_batch.buildFeatureViewExportOptions_(params);\n      break;\n    default:\n      throw Error('Export destination \"' + destination + '\" unknown');\n  }\n  return result;\n};\nee.rpc_convert_batch.taskToExportVideoRequest = function(params) {\n  if (null == params.element) {\n    throw Error('\"element\" not found in params ' + params);\n  }\n  var result = new module$exports$eeapiclient$ee_api_client.ExportVideoRequest({expression:ee.Serializer.encodeCloudApiExpression(params.element), description:stringOrNull_(params.description), videoOptions:ee.rpc_convert_batch.buildVideoOptions_(params), fileExportOptions:null, requestId:stringOrNull_(params.id), maxWorkerCount:numberOrNull_(params.maxWorkers)});\n  result.fileExportOptions = ee.rpc_convert_batch.buildVideoFileExportOptions_(params, ee.rpc_convert_batch.guessDestination_(params));\n  return result;\n};\nee.rpc_convert_batch.taskToExportMapRequest = function(params) {\n  if (null == params.element) {\n    throw Error('\"element\" not found in params ' + params);\n  }\n  return new module$exports$eeapiclient$ee_api_client.ExportMapRequest({expression:ee.Serializer.encodeCloudApiExpression(params.element), description:stringOrNull_(params.description), tileOptions:ee.rpc_convert_batch.buildTileOptions_(params), tileExportOptions:ee.rpc_convert_batch.buildImageFileExportOptions_(params, ee.rpc_convert_batch.ExportDestination.GCS), requestId:stringOrNull_(params.id), maxWorkerCount:numberOrNull_(params.maxWorkers)});\n};\nee.rpc_convert_batch.taskToExportVideoMapRequest = function(params) {\n  if (null == params.element) {\n    throw Error('\"element\" not found in params ' + params);\n  }\n  return new module$exports$eeapiclient$ee_api_client.ExportVideoMapRequest({expression:ee.Serializer.encodeCloudApiExpression(params.element), description:stringOrNull_(params.description), videoOptions:ee.rpc_convert_batch.buildVideoMapOptions_(params), tileOptions:ee.rpc_convert_batch.buildTileOptions_(params), tileExportOptions:ee.rpc_convert_batch.buildVideoFileExportOptions_(params, ee.rpc_convert_batch.ExportDestination.GCS), requestId:stringOrNull_(params.id), \n  version:stringOrNull_(params.version), maxWorkerCount:numberOrNull_(params.maxWorkers)});\n};\nee.rpc_convert_batch.taskToExportClassifierRequest = function(params) {\n  if (null == params.element) {\n    throw Error('\"element\" not found in params ' + params);\n  }\n  var destination = ee.rpc_convert_batch.guessDestination_(params);\n  if (destination != ee.rpc_convert_batch.ExportDestination.ASSET) {\n    throw Error('Export destination \"' + destination + '\" unknown');\n  }\n  return new module$exports$eeapiclient$ee_api_client.ExportClassifierRequest({expression:ee.Serializer.encodeCloudApiExpression(params.element), description:stringOrNull_(params.description), requestId:stringOrNull_(params.id), assetExportOptions:new module$exports$eeapiclient$ee_api_client.ClassifierAssetExportOptions({earthEngineDestination:ee.rpc_convert_batch.buildEarthEngineDestination_(params)}), maxWorkerCount:numberOrNull_(params.maxWorkers),\n  });\n};\nfunction stringOrNull_(value) {\n  return null != value ? String(value) : null;\n}\nfunction numberOrNull_(value) {\n  return null != value ? Number(value) : null;\n}\nee.rpc_convert_batch.guessDestination_ = function(params) {\n  var destination = ee.rpc_convert_batch.ExportDestination.DRIVE;\n  if (null == params) {\n    return destination;\n  }\n  null != params.outputBucket || null != params.outputPrefix ? destination = ee.rpc_convert_batch.ExportDestination.GCS : null != params.assetId ? destination = ee.rpc_convert_batch.ExportDestination.ASSET : null != params.mapName && (destination = ee.rpc_convert_batch.ExportDestination.FEATURE_VIEW);\n  return destination;\n};\nee.rpc_convert_batch.buildGeoTiffFormatOptions_ = function(params) {\n  if (params.fileDimensions && params.tiffFileDimensions) {\n    throw Error('Export cannot set both \"fileDimensions\" and \"tiffFileDimensions\".');\n  }\n  var tileSize = params.tiffShardSize || params.shardSize;\n  return new module$exports$eeapiclient$ee_api_client.GeoTiffImageExportOptions({cloudOptimized:!!params.tiffCloudOptimized, skipEmptyFiles:!(!params.skipEmptyTiles && !params.tiffSkipEmptyFiles), tileDimensions:ee.rpc_convert_batch.buildGridDimensions_(params.fileDimensions || params.tiffFileDimensions), tileSize:numberOrNull_(tileSize),});\n};\nee.rpc_convert_batch.buildTfRecordFormatOptions_ = function(params) {\n  var tfRecordOptions = new module$exports$eeapiclient$ee_api_client.TfRecordImageExportOptions({compress:!!params.tfrecordCompressed, maxSizeBytes:stringOrNull_(params.tfrecordMaxFileSize), sequenceData:!!params.tfrecordSequenceData, collapseBands:!!params.tfrecordCollapseBands, maxMaskedRatio:numberOrNull_(params.tfrecordMaskedThreshold), defaultValue:numberOrNull_(params.tfrecordDefaultValue), tileDimensions:ee.rpc_convert_batch.buildGridDimensions_(params.tfrecordPatchDimensions), \n  marginDimensions:ee.rpc_convert_batch.buildGridDimensions_(params.tfrecordKernelSize), tensorDepths:null,}), tensorDepths = params.tfrecordTensorDepths;\n  if (null != tensorDepths) {\n    if (goog.isObject(tensorDepths)) {\n      var result = {};\n      module$contents$goog$object_forEach(tensorDepths, function(v, k) {\n        if (\"string\" !== typeof k || \"number\" !== typeof v) {\n          throw Error('\"tensorDepths\" option must be an object of type Object<string, number>');\n        }\n        result[k] = v;\n      });\n      tfRecordOptions.tensorDepths = result;\n    } else {\n      throw Error('\"tensorDepths\" option needs to have the form Object<string, number>.');\n    }\n  }\n  return tfRecordOptions;\n};\nee.rpc_convert_batch.buildImageFileExportOptions_ = function(params, destination) {\n  var result = new module$exports$eeapiclient$ee_api_client.ImageFileExportOptions({gcsDestination:null, driveDestination:null, geoTiffOptions:null, tfRecordOptions:null, fileFormat:ee.rpc_convert.fileFormat(params.fileFormat),});\n  \"GEO_TIFF\" === result.fileFormat ? result.geoTiffOptions = ee.rpc_convert_batch.buildGeoTiffFormatOptions_(params) : \"TF_RECORD_IMAGE\" === result.fileFormat && (result.tfRecordOptions = ee.rpc_convert_batch.buildTfRecordFormatOptions_(params));\n  destination === ee.rpc_convert_batch.ExportDestination.GCS ? result.gcsDestination = ee.rpc_convert_batch.buildGcsDestination_(params) : result.driveDestination = ee.rpc_convert_batch.buildDriveDestination_(params);\n  return result;\n};\nee.rpc_convert_batch.buildImageAssetExportOptions_ = function(params) {\n  var allPolicies = params.pyramidingPolicy || {};\n  try {\n    allPolicies = JSON.parse(allPolicies);\n  } catch ($jscomp$unused$catch) {\n  }\n  var defaultPyramidingPolicy = \"PYRAMIDING_POLICY_UNSPECIFIED\";\n  \"string\" === typeof allPolicies ? (defaultPyramidingPolicy = allPolicies, allPolicies = {}) : allPolicies[\".default\"] && (defaultPyramidingPolicy = allPolicies[\".default\"], delete allPolicies[\".default\"]);\n  return new module$exports$eeapiclient$ee_api_client.ImageAssetExportOptions({earthEngineDestination:ee.rpc_convert_batch.buildEarthEngineDestination_(params), pyramidingPolicy:defaultPyramidingPolicy, pyramidingPolicyOverrides:module$contents$goog$object_isEmpty(allPolicies) ? null : allPolicies, tileSize:numberOrNull_(params.shardSize),});\n};\nee.rpc_convert_batch.buildTableFileExportOptions_ = function(params, destination) {\n  var result = new module$exports$eeapiclient$ee_api_client.TableFileExportOptions({gcsDestination:null, driveDestination:null, fileFormat:ee.rpc_convert.tableFileFormat(params.fileFormat),});\n  destination === ee.rpc_convert_batch.ExportDestination.GCS ? result.gcsDestination = ee.rpc_convert_batch.buildGcsDestination_(params) : result.driveDestination = ee.rpc_convert_batch.buildDriveDestination_(params);\n  return result;\n};\nee.rpc_convert_batch.buildTableAssetExportOptions_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.TableAssetExportOptions({earthEngineDestination:ee.rpc_convert_batch.buildEarthEngineDestination_(params)});\n};\nee.rpc_convert_batch.buildFeatureViewExportOptions_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.DmsAssetExportOptions({dmsDestination:ee.rpc_convert_batch.buildFeatureViewDestination_(params), ingestionTimeParameters:ee.rpc_convert_batch.buildFeatureViewIngestionTimeParameters_(params.ingestionTimeParameters),});\n};\nee.rpc_convert_batch.buildVideoFileExportOptions_ = function(params, destination) {\n  var result = new module$exports$eeapiclient$ee_api_client.VideoFileExportOptions({gcsDestination:null, driveDestination:null, fileFormat:\"MP4\",});\n  destination === ee.rpc_convert_batch.ExportDestination.GCS ? result.gcsDestination = ee.rpc_convert_batch.buildGcsDestination_(params) : result.driveDestination = ee.rpc_convert_batch.buildDriveDestination_(params);\n  return result;\n};\nee.rpc_convert_batch.buildVideoOptions_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.VideoOptions({framesPerSecond:numberOrNull_(params.framesPerSecond), maxFrames:numberOrNull_(params.maxFrames), maxPixelsPerFrame:stringOrNull_(params.maxPixels),});\n};\nee.rpc_convert_batch.buildVideoMapOptions_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.VideoOptions({framesPerSecond:numberOrNull_(params.framesPerSecond), maxFrames:numberOrNull_(params.maxFrames), maxPixelsPerFrame:null,});\n};\nee.rpc_convert_batch.buildTileOptions_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.TileOptions({maxZoom:numberOrNull_(params.maxZoom), scale:numberOrNull_(params.scale), minZoom:numberOrNull_(params.minZoom), skipEmptyTiles:!!params.skipEmptyTiles, mapsApiKey:stringOrNull_(params.mapsApiKey), tileDimensions:ee.rpc_convert_batch.buildGridDimensions_(params.tileDimensions), stride:numberOrNull_(params.stride), zoomSubset:ee.rpc_convert_batch.buildZoomSubset_(numberOrNull_(params.minTimeMachineZoomSubset), \n  numberOrNull_(params.maxTimeMachineZoomSubset)),});\n};\nee.rpc_convert_batch.buildZoomSubset_ = function(min, max) {\n  if (null == min && null == max) {\n    return null;\n  }\n  var result = new module$exports$eeapiclient$ee_api_client.ZoomSubset({min:0, max:null});\n  null != min && (result.min = min);\n  result.max = max;\n  return result;\n};\nee.rpc_convert_batch.buildGridDimensions_ = function(dimensions) {\n  if (null == dimensions) {\n    return null;\n  }\n  var result = new module$exports$eeapiclient$ee_api_client.GridDimensions({height:0, width:0});\n  \"string\" === typeof dimensions && (-1 !== dimensions.indexOf(\"x\") ? dimensions = dimensions.split(\"x\").map(Number) : -1 !== dimensions.indexOf(\",\") && (dimensions = dimensions.split(\",\").map(Number)));\n  if (Array.isArray(dimensions)) {\n    if (2 === dimensions.length) {\n      result.height = dimensions[0], result.width = dimensions[1];\n    } else {\n      if (1 === dimensions.length) {\n        result.height = dimensions[0], result.width = dimensions[0];\n      } else {\n        throw Error(\"Unable to construct grid from dimensions: \" + dimensions);\n      }\n    }\n  } else {\n    if (\"number\" !== typeof dimensions || isNaN(dimensions)) {\n      if (goog.isObject(dimensions) && null != dimensions.height && null != dimensions.width) {\n        result.height = dimensions.height, result.width = dimensions.width;\n      } else {\n        throw Error(\"Unable to construct grid from dimensions: \" + dimensions);\n      }\n    } else {\n      result.height = dimensions, result.width = dimensions;\n    }\n  }\n  return result;\n};\nee.rpc_convert_batch.buildGcsDestination_ = function(params) {\n  var permissions = null;\n  null != params.writePublicTiles && (permissions = params.writePublicTiles ? \"PUBLIC\" : \"DEFAULT_OBJECT_ACL\");\n  return new module$exports$eeapiclient$ee_api_client.GcsDestination({bucket:stringOrNull_(params.outputBucket), filenamePrefix:stringOrNull_(params.outputPrefix), bucketCorsUris:params.bucketCorsUris || null, permissions:permissions,});\n};\nee.rpc_convert_batch.buildDriveDestination_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.DriveDestination({folder:stringOrNull_(params.driveFolder), filenamePrefix:stringOrNull_(params.driveFileNamePrefix),});\n};\nee.rpc_convert_batch.buildEarthEngineDestination_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.EarthEngineDestination({name:ee.rpc_convert.assetIdToAssetName(params.assetId)});\n};\nee.rpc_convert_batch.buildFeatureViewDestination_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.DmsDestination({dmsName:ee.rpc_convert.assetIdToAssetName(params.mapName)});\n};\nee.rpc_convert_batch.buildFeatureViewIngestionTimeParameters_ = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.DmsIngestionTimeParameters({thinningOptions:ee.rpc_convert_batch.buildThinningOptions_(params.thinningOptions), rankingOptions:ee.rpc_convert_batch.buildRankingOptions_(params.rankingOptions)});\n};\nee.rpc_convert_batch.buildThinningOptions_ = function(params) {\n  return null == params ? null : new module$exports$eeapiclient$ee_api_client.ThinningOptions({maxFeaturesPerTile:numberOrNull_(params.maxFeaturesPerTile), thinningStrategy:params.thinningStrategy});\n};\nee.rpc_convert_batch.buildRankingOptions_ = function(params) {\n  return null == params ? null : new module$exports$eeapiclient$ee_api_client.RankingOptions({zOrderRankingRule:ee.rpc_convert_batch.buildRankingRule_(params.zOrderRankingRule), thinningRankingRule:ee.rpc_convert_batch.buildRankingRule_(params.thinningRankingRule),});\n};\nee.rpc_convert_batch.buildRankingRule_ = function(params) {\n  if (null == params) {\n    return null;\n  }\n  if (params.rankByOneThingRule && !Array.isArray(params.rankByOneThingRule)) {\n    throw Error('Parameter \"rankByOneThingRule\" should be an array, got ' + typeof params.rankByOneThingRule);\n  }\n  return new module$exports$eeapiclient$ee_api_client.RankingRule({rankByOneThingRule:(params.rankByOneThingRule || []).map(ee.rpc_convert_batch.buildRankByOneThingRule_), pseudoRandomTiebreaking:params.pseudoRandomTiebreaking || null,});\n};\nee.rpc_convert_batch.buildRankByOneThingRule_ = function(params) {\n  var result = new module$exports$eeapiclient$ee_api_client.RankByOneThingRule({direction:stringOrNull_(params.direction), rankByAttributeRule:null, rankByMinVisibleLodRule:null, rankByGeometryTypeRule:null, rankByNaturalOrderRule:null,});\n  params.rankByAttributeRule ? result.rankByAttributeRule = ee.rpc_convert_batch.buildRankByAttributeRule(params) : params.rankByMinVisibleLodRule ? result.rankByMinVisibleLodRule = new module$exports$eeapiclient$ee_api_client.RankByMinVisibleLodRule({}) : params.rankByGeometryTypeRule ? result.rankByGeometryTypeRule = new module$exports$eeapiclient$ee_api_client.RankByGeometryTypeRule({}) : params.rankByNaturalOrderRule && (result.rankByNaturalOrderRule = \n  new module$exports$eeapiclient$ee_api_client.RankByNaturalOrder({}));\n  return result;\n};\nee.rpc_convert_batch.buildRankByAttributeRule = function(params) {\n  return new module$exports$eeapiclient$ee_api_client.RankByAttributeRule({attributeName:stringOrNull_(params.attributeName)});\n};\nee.data = {};\nee.data.AbstractTaskConfig = {};\nee.data.AlgorithmsRegistry = {};\nee.data.AssetList = {};\nee.data.ClassifierTaskConfig = {};\nee.data.FeatureViewTaskConfig = {};\nee.data.ImageTaskConfig = {};\nee.data.MapTaskConfig = {};\nee.data.TableTaskConfig = {};\nee.data.VideoMapTaskConfig = {};\nee.data.VideoTaskConfig = {};\nee.data.authenticateViaOauth = function(clientId, success, opt_error, opt_extraScopes, opt_onImmediateFailed, opt_suppressDefaultScopes) {\n  var scopes = module$contents$ee$apiclient_apiclient.mergeAuthScopes_(!opt_suppressDefaultScopes, !1, opt_extraScopes || []);\n  module$contents$ee$apiclient_apiclient.setAuthClient(clientId, scopes);\n  null === clientId ? module$contents$ee$apiclient_apiclient.clearAuthToken() : module$contents$ee$apiclient_apiclient.ensureAuthLibLoaded_(function() {\n    var onImmediateFailed = opt_onImmediateFailed || goog.partial(ee.data.authenticateViaPopup, success, opt_error);\n    ee.data.refreshAuthToken(success, opt_error, onImmediateFailed);\n  });\n};\ngoog.exportSymbol(\"ee.data.authenticateViaOauth\", ee.data.authenticateViaOauth);\nee.data.authenticate = function(clientId, success, opt_error, opt_extraScopes, opt_onImmediateFailed) {\n  ee.data.authenticateViaOauth(clientId, success, opt_error, opt_extraScopes, opt_onImmediateFailed);\n};\ngoog.exportSymbol(\"ee.data.authenticate\", ee.data.authenticate);\nee.data.authenticateViaPopup = function(opt_success, opt_error) {\n  goog.global.gapi.auth.authorize({client_id:module$contents$ee$apiclient_apiclient.getAuthClientId(), immediate:!1, scope:module$contents$ee$apiclient_apiclient.getAuthScopes().join(\" \")}, goog.partial(module$contents$ee$apiclient_apiclient.handleAuthResult_, opt_success, opt_error));\n};\ngoog.exportSymbol(\"ee.data.authenticateViaPopup\", ee.data.authenticateViaPopup);\nee.data.authenticateViaPrivateKey = function(privateKey, opt_success, opt_error, opt_extraScopes, opt_suppressDefaultScopes) {\n  if (\"window\" in goog.global) {\n    throw Error(\"Use of private key authentication in the browser is insecure. Consider using OAuth, instead.\");\n  }\n  var scopes = module$contents$ee$apiclient_apiclient.mergeAuthScopes_(!opt_suppressDefaultScopes, !opt_suppressDefaultScopes, opt_extraScopes || []);\n  module$contents$ee$apiclient_apiclient.setAuthClient(privateKey.client_email, scopes);\n  var jwtClient = new google.auth.JWT(privateKey.client_email, null, privateKey.private_key, scopes, null);\n  ee.data.setAuthTokenRefresher(function(authArgs, callback) {\n    jwtClient.authorize(function(error, token) {\n      error ? callback({error:error}) : callback({access_token:token.access_token, token_type:token.token_type, expires_in:(token.expiry_date - Date.now()) / 1000,});\n    });\n  });\n  ee.data.refreshAuthToken(opt_success, opt_error);\n};\ngoog.exportSymbol(\"ee.data.authenticateViaPrivateKey\", ee.data.authenticateViaPrivateKey);\nee.data.setApiKey = module$contents$ee$apiclient_apiclient.setApiKey;\nee.data.setProject = module$contents$ee$apiclient_apiclient.setProject;\nee.data.getProject = module$contents$ee$apiclient_apiclient.getProject;\nee.data.PROFILE_REQUEST_HEADER = module$contents$ee$apiclient_apiclient.PROFILE_REQUEST_HEADER;\nee.data.setExpressionAugmenter = function(augmenter) {\n  ee.data.expressionAugmenter_ = augmenter || goog.functions.identity;\n};\ngoog.exportSymbol(\"ee.data.setExpressionAugmenter\", ee.data.setExpressionAugmenter);\nee.data.expressionAugmenter_ = goog.functions.identity;\nee.data.setAuthToken = module$contents$ee$apiclient_apiclient.setAuthToken;\ngoog.exportSymbol(\"ee.data.setAuthToken\", ee.data.setAuthToken);\nee.data.refreshAuthToken = module$contents$ee$apiclient_apiclient.refreshAuthToken;\ngoog.exportSymbol(\"ee.data.refreshAuthToken\", ee.data.refreshAuthToken);\nee.data.setAuthTokenRefresher = module$contents$ee$apiclient_apiclient.setAuthTokenRefresher;\ngoog.exportSymbol(\"ee.data.setAuthTokenRefresher\", ee.data.setAuthTokenRefresher);\nee.data.getAuthToken = module$contents$ee$apiclient_apiclient.getAuthToken;\ngoog.exportSymbol(\"ee.data.getAuthToken\", ee.data.getAuthToken);\nee.data.clearAuthToken = module$contents$ee$apiclient_apiclient.clearAuthToken;\ngoog.exportSymbol(\"ee.data.clearAuthToken\", ee.data.clearAuthToken);\nee.data.getAuthClientId = module$contents$ee$apiclient_apiclient.getAuthClientId;\ngoog.exportSymbol(\"ee.data.getAuthClientId\", ee.data.getAuthClientId);\nee.data.getAuthScopes = module$contents$ee$apiclient_apiclient.getAuthScopes;\ngoog.exportSymbol(\"ee.data.getAuthScopes\", ee.data.getAuthScopes);\nee.data.setDeadline = module$contents$ee$apiclient_apiclient.setDeadline;\ngoog.exportSymbol(\"ee.data.setDeadline\", ee.data.setDeadline);\nee.data.setParamAugmenter = module$contents$ee$apiclient_apiclient.setParamAugmenter;\ngoog.exportSymbol(\"ee.data.setParamAugmenter\", ee.data.setParamAugmenter);\nee.data.initialize = module$contents$ee$apiclient_apiclient.initialize;\nee.data.reset = module$contents$ee$apiclient_apiclient.reset;\nee.data.PROFILE_HEADER = module$contents$ee$apiclient_apiclient.PROFILE_HEADER;\nee.data.makeRequest_ = module$contents$ee$apiclient_apiclient.makeRequest_;\nee.data.send_ = module$contents$ee$apiclient_apiclient.send;\nee.data.setupMockSend = module$contents$ee$apiclient_apiclient.setupMockSend;\nee.data.withProfiling = module$contents$ee$apiclient_apiclient.withProfiling;\nee.data.getAlgorithms = function(opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.algorithms().list(call.projectsPath(), {prettyPrint:!1}).then(ee.rpc_convert.algorithms));\n};\nee.data.getMapId = function(params, opt_callback) {\n  if (\"string\" === typeof params.image) {\n    throw Error(\"Image as JSON string not supported.\");\n  }\n  if (void 0 !== params.version) {\n    throw Error(\"Image version specification not supported.\");\n  }\n  var map = new module$exports$eeapiclient$ee_api_client.EarthEngineMap({name:null, expression:ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(params.image)), fileFormat:ee.rpc_convert.fileFormat(params.format), bandIds:ee.rpc_convert.bandList(params.bands), visualizationOptions:ee.rpc_convert.visualizationOptions(params),}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.maps().create(call.projectsPath(), map, {fields:[\"name\"]}).then(function(response) {\n    return ee.data.makeMapId_(response.name, \"\");\n  }));\n};\ngoog.exportSymbol(\"ee.data.getMapId\", ee.data.getMapId);\nee.data.getTileUrl = function(id, x, y, z) {\n  if (!id.formatTileUrl) {\n    var newId = ee.data.makeMapId_(id.mapid, id.token, id.urlFormat);\n    id.urlFormat = newId.urlFormat;\n    id.formatTileUrl = newId.formatTileUrl;\n  }\n  return id.formatTileUrl(x, y, z);\n};\ngoog.exportSymbol(\"ee.data.getTileUrl\", ee.data.getTileUrl);\nee.data.makeMapId_ = function(mapid, token, opt_urlFormat) {\n  var urlFormat = void 0 === opt_urlFormat ? \"\" : opt_urlFormat;\n  if (!urlFormat) {\n    module$contents$ee$apiclient_apiclient.initialize();\n    var base = module$contents$ee$apiclient_apiclient.getTileBaseUrl();\n    urlFormat = token ? base + \"/map/\" + mapid + \"/{z}/{x}/{y}?token=\" + token : base + \"/\" + module$exports$ee$apiVersion.V1ALPHA + \"/\" + mapid + \"/tiles/{z}/{x}/{y}\";\n  }\n  return {mapid:mapid, token:token, formatTileUrl:function(x, y, z) {\n    var width = Math.pow(2, z);\n    x %= width;\n    x = String(0 > x ? x + width : x);\n    return urlFormat.replace(\"{x}\", x).replace(\"{y}\", y).replace(\"{z}\", z);\n  }, urlFormat:urlFormat};\n};\nee.data.getFeatureViewTilesKey = function(params, opt_callback) {\n  var visualizationExpression = params.visParams ? ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(params.visParams)) : null, map = new module$exports$eeapiclient$ee_api_client.DMSMap({name:null, asset:params.assetName, dmsName:params.mapName, visualizationExpression:visualizationExpression,}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.dmsMaps().create(call.projectsPath(), map, {fields:[\"name\"]}).then(function(response) {\n    return {token:response.name};\n  }));\n};\ngoog.exportSymbol(\"ee.data.getFeatureViewTilesKey\", ee.data.getFeatureViewTilesKey);\nee.data.computeValue = function(obj, opt_callback) {\n  var expression = ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(obj)), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.value().compute(call.projectsPath(), new module$exports$eeapiclient$ee_api_client.ComputeValueRequest({expression:expression})).then(function(x) {\n    return x.result;\n  }));\n};\ngoog.exportSymbol(\"ee.data.computeValue\", ee.data.computeValue);\nee.data.getThumbId = function(params, opt_callback) {\n  if (\"string\" === typeof params.image) {\n    throw Error(\"Image as JSON string not supported.\");\n  }\n  if (void 0 !== params.version) {\n    throw Error(\"Image version specification not supported.\");\n  }\n  if (void 0 !== params.region) {\n    throw Error('\"region\" not supported in call to ee.data.getThumbId. Use ee.Image.getThumbURL.');\n  }\n  if (void 0 !== params.dimensions) {\n    throw Error('\"dimensions\" is not supported in call to ee.data.getThumbId. Use ee.Image.getThumbURL.');\n  }\n  var thumbnail = new module$exports$eeapiclient$ee_api_client.Thumbnail({name:null, expression:ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(params.image)), fileFormat:ee.rpc_convert.fileFormat(params.format), filenamePrefix:params.name, bandIds:ee.rpc_convert.bandList(params.bands), visualizationOptions:ee.rpc_convert.visualizationOptions(params), grid:null,}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.thumbnails().create(call.projectsPath(), thumbnail, {fields:[\"name\"]}).then(function(response) {\n    return {thumbid:response.name, token:\"\"};\n  }));\n};\ngoog.exportSymbol(\"ee.data.getThumbId\", ee.data.getThumbId);\nee.data.getVideoThumbId = function(params, opt_callback) {\n  var videoOptions = new module$exports$eeapiclient$ee_api_client.VideoOptions({framesPerSecond:params.framesPerSecond || null, maxFrames:params.maxFrames || null, maxPixelsPerFrame:params.maxPixelsPerFrame || null,}), request = new module$exports$eeapiclient$ee_api_client.VideoThumbnail({name:null, expression:ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(params.imageCollection)), fileFormat:ee.rpc_convert.fileFormat(params.format), \n  videoOptions:videoOptions, grid:null,}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.videoThumbnails().create(call.projectsPath(), request, {fields:[\"name\"]}).then(function(response) {\n    return {thumbid:response.name, token:\"\"};\n  }));\n};\ngoog.exportSymbol(\"ee.data.getVideoThumbId\", ee.data.getVideoThumbId);\nee.data.getFilmstripThumbId = function(params, opt_callback) {\n  var request = new module$exports$eeapiclient$ee_api_client.FilmstripThumbnail({name:null, expression:ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(params.imageCollection)), fileFormat:ee.rpc_convert.fileFormat(params.format), orientation:ee.rpc_convert.orientation(params.orientation), grid:null,}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.filmstripThumbnails().create(call.projectsPath(), request, {fields:[\"name\"]}).then(function(response) {\n    return {thumbid:response.name, token:\"\"};\n  }));\n};\ngoog.exportSymbol(\"ee.data.getFilmstripThumbId\", ee.data.getFilmstripThumbId);\nee.data.makeThumbUrl = function(id) {\n  return module$contents$ee$apiclient_apiclient.getTileBaseUrl() + \"/\" + module$exports$ee$apiVersion.V1ALPHA + \"/\" + id.thumbid + \":getPixels\";\n};\ngoog.exportSymbol(\"ee.data.makeThumbUrl\", ee.data.makeThumbUrl);\nee.data.getDownloadId = function(params, opt_callback) {\n  params = Object.assign({}, params);\n  params.id && (params.image = new ee.Image(params.id));\n  if (\"string\" === typeof params.image) {\n    throw Error(\"Image as serialized JSON string not supported.\");\n  }\n  if (!params.image) {\n    throw Error(\"Missing ID or image parameter.\");\n  }\n  params.filePerBand = !1 !== params.filePerBand;\n  params.format = params.format || (params.filePerBand ? \"ZIPPED_GEO_TIFF_PER_BAND\" : \"ZIPPED_GEO_TIFF\");\n  if (null != params.region && (null != params.scale || null != params.crs_transform) && null != params.dimensions) {\n    throw Error(\"Cannot specify (bounding region, crs_transform/scale, dimensions) simultaneously.\");\n  }\n  if (\"string\" === typeof params.bands) {\n    try {\n      params.bands = JSON.parse(params.bands);\n    } catch (e) {\n      params.bands = ee.rpc_convert.bandList(params.bands);\n    }\n  }\n  if (params.bands && !Array.isArray(params.bands)) {\n    throw Error(\"Bands parameter must be an array.\");\n  }\n  params.bands && params.bands.every(function(band) {\n    return \"string\" === typeof band;\n  }) && (params.bands = params.bands.map(function(band) {\n    return {id:band};\n  }));\n  if (params.bands && params.bands.some(function($jscomp$destructuring$var34) {\n    return null == $jscomp$destructuring$var34.id;\n  })) {\n    throw Error(\"Each band dictionary must have an id.\");\n  }\n  \"string\" === typeof params.region && (params.region = JSON.parse(params.region));\n  if (\"string\" === typeof params.crs_transform) {\n    try {\n      params.crs_transform = JSON.parse(params.crs_transform);\n    } catch (e$64) {\n    }\n  }\n  var image = ee.data.images.buildDownloadIdImage(params.image, params), thumbnail = new module$exports$eeapiclient$ee_api_client.Thumbnail({name:null, expression:ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(image)), fileFormat:ee.rpc_convert.fileFormat(params.format), filenamePrefix:params.name, bandIds:params.bands && ee.rpc_convert.bandList(params.bands.map(function(band) {\n    return band.id;\n  })), grid:null,}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.thumbnails().create(call.projectsPath(), thumbnail, {fields:[\"name\"]}).then(function(response) {\n    return {docid:response.name, token:\"\"};\n  }));\n};\ngoog.exportSymbol(\"ee.data.getDownloadId\", ee.data.getDownloadId);\nee.data.makeDownloadUrl = function(id) {\n  module$contents$ee$apiclient_apiclient.initialize();\n  return module$contents$ee$apiclient_apiclient.getTileBaseUrl() + \"/\" + module$exports$ee$apiVersion.V1ALPHA + \"/\" + id.docid + \":getPixels\";\n};\ngoog.exportSymbol(\"ee.data.makeDownloadUrl\", ee.data.makeDownloadUrl);\nee.data.getTableDownloadId = function(params, opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback), fileFormat = ee.rpc_convert.tableFileFormat(params.format), expression = ee.data.expressionAugmenter_(ee.Serializer.encodeCloudApiExpression(params.table)), selectors = null;\n  if (null != params.selectors) {\n    if (\"string\" === typeof params.selectors) {\n      selectors = params.selectors.split(\",\");\n    } else {\n      if (Array.isArray(params.selectors) && params.selectors.every(function(x) {\n        return \"string\" === typeof x;\n      })) {\n        selectors = params.selectors;\n      } else {\n        throw Error(\"'selectors' parameter must be an array of strings.\");\n      }\n    }\n  }\n  var table = new module$exports$eeapiclient$ee_api_client.Table({name:null, expression:expression, fileFormat:fileFormat, selectors:selectors, filename:params.filename || null,});\n  return call.handle(call.tables().create(call.projectsPath(), table, {fields:[\"name\"]}).then(function(res) {\n    return {docid:res.name || \"\", token:\"\"};\n  }));\n};\ngoog.exportSymbol(\"ee.data.getTableDownloadId\", ee.data.getTableDownloadId);\nee.data.makeTableDownloadUrl = function(id) {\n  return module$contents$ee$apiclient_apiclient.getTileBaseUrl() + \"/\" + module$exports$ee$apiVersion.V1ALPHA + \"/\" + id.docid + \":getFeatures\";\n};\ngoog.exportSymbol(\"ee.data.makeTableDownloadUrl\", ee.data.makeTableDownloadUrl);\nee.data.newTaskId = function(opt_count, opt_callback) {\n  var rand = function(n) {\n    return Math.floor(Math.random() * n);\n  }, hex = function(d) {\n    return rand(Math.pow(2, 4 * d)).toString(16).padStart(d, \"0\");\n  }, variantPart = function() {\n    return (8 + rand(4)).toString(16) + hex(3);\n  }, uuids = module$contents$goog$array_range(opt_count || 1).map(function() {\n    return [hex(8), hex(4), \"4\" + hex(3), variantPart(), hex(12)].join(\"-\");\n  });\n  return opt_callback ? opt_callback(uuids) : uuids;\n};\ngoog.exportSymbol(\"ee.data.newTaskId\", ee.data.newTaskId);\nee.data.getTaskStatus = function(taskId, opt_callback) {\n  var opNames = ee.data.makeStringArray_(taskId).map(ee.rpc_convert.taskIdToOperationName);\n  if (1 === opNames.length) {\n    var call$66 = new module$contents$ee$apiclient_Call(opt_callback);\n    return call$66.handle(call$66.operations().get(opNames[0]).then(function(op) {\n      return [ee.rpc_convert.operationToTask(op)];\n    }));\n  }\n  var call = new module$contents$ee$apiclient_BatchCall(opt_callback), operations = call.operations();\n  return call.send(opNames.map(function(op) {\n    return [op, operations.get(op)];\n  }), function(data) {\n    return opNames.map(function(id) {\n      return ee.rpc_convert.operationToTask(data[id]);\n    });\n  });\n};\ngoog.exportSymbol(\"ee.data.getTaskStatus\", ee.data.getTaskStatus);\nee.data.makeStringArray_ = function(value) {\n  if (\"string\" === typeof value) {\n    return [value];\n  }\n  if (Array.isArray(value)) {\n    return value;\n  }\n  throw Error(\"Invalid value: expected a string or an array of strings.\");\n};\nee.data.TASKLIST_PAGE_SIZE_ = 500;\nee.data.getTaskList = function(opt_callback) {\n  return ee.data.getTaskListWithLimit(void 0, opt_callback);\n};\ngoog.exportSymbol(\"ee.data.getTaskList\", ee.data.getTaskList);\nee.data.getTaskListWithLimit = function(opt_limit, opt_callback) {\n  var convert = function(ops) {\n    return {tasks:ops.map(ee.rpc_convert.operationToTask)};\n  };\n  return opt_callback ? (ee.data.listOperations(opt_limit, function(v, e) {\n    return opt_callback(v ? convert(v) : null, e);\n  }), null) : convert(ee.data.listOperations(opt_limit));\n};\ngoog.exportSymbol(\"ee.data.getTaskListWithLimit\", ee.data.getTaskListWithLimit);\nee.data.listOperations = function(opt_limit, opt_callback) {\n  var ops = [], truncatedOps = function() {\n    return opt_limit ? ops.slice(0, opt_limit) : ops;\n  }, params = {pageSize:ee.data.TASKLIST_PAGE_SIZE_}, getResponse = function(response) {\n    module$contents$goog$array_extend(ops, response.operations || []);\n    !response.nextPageToken || opt_limit && ops.length >= opt_limit ? opt_callback && opt_callback(truncatedOps()) : (params.pageToken = response.nextPageToken, call.handle(operations.list(call.projectsPath(), params).then(getResponse)));\n    return null;\n  }, call = new module$contents$ee$apiclient_Call(opt_callback ? function(value, err) {\n    return err && opt_callback(value, err);\n  } : void 0), operations = call.operations();\n  call.handle(operations.list(call.projectsPath(), params).then(getResponse));\n  return opt_callback ? null : truncatedOps();\n};\ngoog.exportSymbol(\"ee.data.listOperations\", ee.data.listOperations);\nee.data.cancelOperation = function(operationName, opt_callback) {\n  var opNames = ee.data.makeStringArray_(operationName), request = new module$exports$eeapiclient$ee_api_client.CancelOperationRequest();\n  if (1 === opNames.length) {\n    var call$67 = new module$contents$ee$apiclient_Call(opt_callback);\n    call$67.handle(call$67.operations().cancel(opNames[0], request));\n  } else {\n    var call = new module$contents$ee$apiclient_BatchCall(opt_callback), operations = call.operations();\n    call.send(opNames.map(function(op) {\n      return [op, operations.cancel(op, request)];\n    }));\n  }\n};\ngoog.exportSymbol(\"ee.data.cancelOperation\", ee.data.cancelOperation);\nee.data.getOperation = function(operationName, opt_callback) {\n  var opNames = ee.data.makeStringArray_(operationName).map(ee.rpc_convert.taskIdToOperationName);\n  if (!Array.isArray(operationName)) {\n    var call$68 = new module$contents$ee$apiclient_Call(opt_callback);\n    return call$68.handle(call$68.operations().get(opNames[0]));\n  }\n  var call = new module$contents$ee$apiclient_BatchCall(opt_callback), operations = call.operations();\n  return call.send(opNames.map(function(op) {\n    return [op, operations.get(op)];\n  }));\n};\ngoog.exportSymbol(\"ee.data.getOperation\", ee.data.getOperation);\nee.data.cancelTask = function(taskId, opt_callback) {\n  return ee.data.updateTask(taskId, ee.data.TaskUpdateActions.CANCEL, opt_callback);\n};\ngoog.exportSymbol(\"ee.data.cancelTask\", ee.data.cancelTask);\nee.data.updateTask = function(taskId, action, opt_callback) {\n  if (!module$contents$goog$object_containsValue(ee.data.TaskUpdateActions, action)) {\n    throw Error(\"Invalid action: \" + action);\n  }\n  taskId = ee.data.makeStringArray_(taskId);\n  var operations = taskId.map(ee.rpc_convert.taskIdToOperationName);\n  ee.data.cancelOperation(operations, opt_callback);\n  return null;\n};\ngoog.exportSymbol(\"ee.data.updateTask\", ee.data.updateTask);\nee.data.startProcessing = function(taskId, params, opt_callback) {\n  params.id = taskId;\n  var taskType = params.type, metadata = null != params.sourceUrl ? {__source_url__:params.sourceUrl} : {}, call = new module$contents$ee$apiclient_Call(opt_callback), handle = function(response) {\n    return call.handle(response.then(ee.rpc_convert.operationToProcessingResponse));\n  };\n  switch(taskType) {\n    case ee.data.ExportType.IMAGE:\n      var imageRequest = ee.data.prepareExportImageRequest_(params, metadata);\n      return handle(call.image().export(call.projectsPath(), imageRequest));\n    case ee.data.ExportType.TABLE:\n      var tableRequest = ee.rpc_convert_batch.taskToExportTableRequest(params);\n      tableRequest.expression = ee.data.expressionAugmenter_(tableRequest.expression, metadata);\n      return handle(call.table().export(call.projectsPath(), tableRequest));\n    case ee.data.ExportType.VIDEO:\n      var videoRequest = ee.data.prepareExportVideoRequest_(params, metadata);\n      return handle(call.video().export(call.projectsPath(), videoRequest));\n    case ee.data.ExportType.MAP:\n      var mapRequest = ee.data.prepareExportMapRequest_(params, metadata);\n      return handle(call.map().export(call.projectsPath(), mapRequest));\n    case ee.data.ExportType.VIDEO_MAP:\n      var videoMapRequest = ee.data.prepareExportVideoMapRequest_(params, metadata);\n      return handle(call.videoMap().export(call.projectsPath(), videoMapRequest));\n    case ee.data.ExportType.CLASSIFIER:\n      var classifierRequest = ee.data.prepareExportClassifierRequest_(params, metadata);\n      return handle(call.classifier().export(call.projectsPath(), classifierRequest));\n    default:\n      throw Error(\"Unable to start processing for task of type \" + taskType);\n  }\n};\ngoog.exportSymbol(\"ee.data.startProcessing\", ee.data.startProcessing);\nee.data.prepareExportImageRequest_ = function(taskConfig, metadata) {\n  var imageTask = ee.data.images.applyTransformsToImage(taskConfig), imageRequest = ee.rpc_convert_batch.taskToExportImageRequest(imageTask);\n  imageRequest.expression = ee.data.expressionAugmenter_(imageRequest.expression, metadata);\n  return imageRequest;\n};\nee.data.prepareExportVideoRequest_ = function(taskConfig, metadata) {\n  var videoTask = ee.data.images.applyTransformsToCollection(taskConfig), videoRequest = ee.rpc_convert_batch.taskToExportVideoRequest(videoTask);\n  videoRequest.expression = ee.data.expressionAugmenter_(videoRequest.expression, metadata);\n  return videoRequest;\n};\nee.data.prepareExportMapRequest_ = function(taskConfig, metadata) {\n  var scale = taskConfig.scale;\n  delete taskConfig.scale;\n  var mapTask = ee.data.images.applyTransformsToImage(taskConfig);\n  mapTask.scale = scale;\n  var mapRequest = ee.rpc_convert_batch.taskToExportMapRequest(mapTask);\n  mapRequest.expression = ee.data.expressionAugmenter_(mapRequest.expression, metadata);\n  return mapRequest;\n};\nee.data.prepareExportVideoMapRequest_ = function(taskConfig, metadata) {\n  var scale = taskConfig.scale;\n  delete taskConfig.scale;\n  var videoMapTask = ee.data.images.applyTransformsToCollection(taskConfig);\n  videoMapTask.scale = scale;\n  var videoMapRequest = ee.rpc_convert_batch.taskToExportVideoMapRequest(videoMapTask);\n  videoMapRequest.expression = ee.data.expressionAugmenter_(videoMapRequest.expression);\n  return videoMapRequest;\n};\nee.data.prepareExportClassifierRequest_ = function(taskConfig, metadata) {\n  var classifierRequest = ee.rpc_convert_batch.taskToExportClassifierRequest(taskConfig);\n  classifierRequest.expression = ee.data.expressionAugmenter_(classifierRequest.expression);\n  return classifierRequest;\n};\nee.data.startIngestion = function(taskId, request, opt_callback) {\n  var manifest = ee.rpc_convert.toImageManifest(request), convert = function(arg) {\n    return arg ? ee.rpc_convert.operationToProcessingResponse(arg) : null;\n  };\n  return convert(ee.data.ingestImage(taskId, manifest, opt_callback && function(arg, err) {\n    return opt_callback(convert(arg), err);\n  }));\n};\ngoog.exportSymbol(\"ee.data.startIngestion\", ee.data.startIngestion);\nee.data.ingestImage = function(taskId, imageManifest, callback) {\n  var request = new module$exports$eeapiclient$ee_api_client.ImportImageRequest({imageManifest:imageManifest, requestId:taskId, overwrite:null, description:null,}), call = new module$contents$ee$apiclient_Call(callback, taskId ? void 0 : 0);\n  return call.handle(call.image().import(call.projectsPath(), request));\n};\nee.data.ingestTable = function(taskId, tableManifest, callback) {\n  var request = new module$exports$eeapiclient$ee_api_client.ImportTableRequest({tableManifest:tableManifest, requestId:taskId, overwrite:null, description:null,}), call = new module$contents$ee$apiclient_Call(callback, taskId ? void 0 : 0);\n  return call.handle(call.table().import(call.projectsPath(), request));\n};\nee.data.startTableIngestion = function(taskId, request, opt_callback) {\n  var manifest = ee.rpc_convert.toTableManifest(request), convert = function(arg) {\n    return arg ? ee.rpc_convert.operationToProcessingResponse(arg) : null;\n  };\n  return convert(ee.data.ingestTable(taskId, manifest, opt_callback && function(arg, err) {\n    return opt_callback(convert(arg), err);\n  }));\n};\ngoog.exportSymbol(\"ee.data.startTableIngestion\", ee.data.startTableIngestion);\nee.data.getAsset = function(id, opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback), name = ee.rpc_convert.assetIdToAssetName(id);\n  return call.handle(call.assets().get(name, {prettyPrint:!1}).then(ee.rpc_convert.assetToLegacyResult));\n};\ngoog.exportSymbol(\"ee.data.getAsset\", ee.data.getAsset);\nee.data.getInfo = ee.data.getAsset;\ngoog.exportSymbol(\"ee.data.getInfo\", ee.data.getInfo);\nee.data.getList = function(params, opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback), methodRoot = call.assets(), parent = ee.rpc_convert.assetIdToAssetName(params.id), isProjectAssetRoot = ee.rpc_convert.CLOUD_ASSET_ROOT_RE.test(params.id);\n  isProjectAssetRoot && (methodRoot = call.projects(), parent = ee.rpc_convert.projectParentFromPath(params.id));\n  if (Object.keys(params).every(function(k) {\n    return \"id\" === k || \"num\" === k;\n  })) {\n    return call.handle(methodRoot.listAssets(parent, {pageSize:params.num}).then(ee.rpc_convert.listAssetsToGetList));\n  }\n  if (isProjectAssetRoot) {\n    throw Error(\"getList on a project does not support filtering options. Please provide a full asset path. Got: \" + params.id);\n  }\n  var body = ee.rpc_convert.getListToListImages(params);\n  return call.handle(methodRoot.listImages(parent, body).then(ee.rpc_convert.listImagesToGetList));\n};\ngoog.exportSymbol(\"ee.data.getList\", ee.data.getList);\nee.data.listAssets = function(parent, params, opt_callback) {\n  params = void 0 === params ? {} : params;\n  var isProjectAssetRoot = ee.rpc_convert.CLOUD_ASSET_ROOT_RE.test(parent), call = new module$contents$ee$apiclient_Call(opt_callback), methodRoot = isProjectAssetRoot ? call.projects() : call.assets();\n  parent = isProjectAssetRoot ? ee.rpc_convert.projectParentFromPath(parent) : ee.rpc_convert.assetIdToAssetName(parent);\n  return call.handle(methodRoot.listAssets(parent, params));\n};\ngoog.exportSymbol(\"ee.data.listAssets\", ee.data.listAssets);\nee.data.listImages = function(parent, params, opt_callback) {\n  params = void 0 === params ? {} : params;\n  var call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.assets().listImages(parent, params));\n};\ngoog.exportSymbol(\"ee.data.listImages\", ee.data.listImages);\nee.data.listBuckets = function(project, opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.projects().listAssets(project || call.projectsPath()));\n};\ngoog.exportSymbol(\"ee.data.listBuckets\", ee.data.listBuckets);\nee.data.getAssetRoots = function(opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.projects().listAssets(call.projectsPath()).then(ee.rpc_convert.listAssetsToGetList));\n};\ngoog.exportSymbol(\"ee.data.getAssetRoots\", ee.data.getAssetRoots);\nee.data.createAssetHome = function(requestedId, opt_callback) {\n  var parent = ee.rpc_convert.projectParentFromPath(requestedId), assetId = parent === \"projects/\" + module$contents$ee$apiclient_apiclient.DEFAULT_PROJECT_ ? requestedId : void 0, asset = new module$exports$eeapiclient$ee_api_client.EarthEngineAsset({type:\"Folder\"}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  call.handle(call.assets().create(parent, asset, {assetId:assetId}).then(ee.rpc_convert.assetToLegacyResult));\n};\ngoog.exportSymbol(\"ee.data.createAssetHome\", ee.data.createAssetHome);\nee.data.createAsset = function(value, opt_path, opt_force, opt_properties, opt_callback) {\n  if (opt_force) {\n    throw Error(\"Asset overwrite not supported.\");\n  }\n  if (\"string\" === typeof value) {\n    throw Error(\"Asset cannot be specified as string.\");\n  }\n  var name = value.name || opt_path && ee.rpc_convert.assetIdToAssetName(opt_path);\n  if (!name) {\n    throw Error(\"Either asset name or opt_path must be specified.\");\n  }\n  var split = name.indexOf(\"/assets/\");\n  if (-1 === split) {\n    throw Error(\"Asset name must contain /assets/.\");\n  }\n  var asset = new module$exports$eeapiclient$ee_api_client.EarthEngineAsset(value), parent = name.slice(0, split), assetId = name.slice(split + 8);\n  asset.id = null;\n  asset.name = null;\n  opt_properties && !asset.properties && (asset.properties = opt_properties);\n  asset.type = ee.rpc_convert.assetTypeForCreate(asset.type);\n  var call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.assets().create(parent, asset, {assetId:assetId}).then(ee.rpc_convert.assetToLegacyResult));\n};\ngoog.exportSymbol(\"ee.data.createAsset\", ee.data.createAsset);\nee.data.createFolder = function(path, opt_force, opt_callback) {\n  return ee.data.createAsset({type:\"Folder\"}, path, opt_force, void 0, opt_callback);\n};\ngoog.exportSymbol(\"ee.data.createFolder\", ee.data.createFolder);\nee.data.renameAsset = function(sourceId, destinationId, opt_callback) {\n  var sourceName = ee.rpc_convert.assetIdToAssetName(sourceId), destinationName = ee.rpc_convert.assetIdToAssetName(destinationId), request = new module$exports$eeapiclient$ee_api_client.MoveAssetRequest({destinationName:destinationName}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  call.handle(call.assets().move(sourceName, request).then(ee.rpc_convert.assetToLegacyResult));\n};\ngoog.exportSymbol(\"ee.data.renameAsset\", ee.data.renameAsset);\nee.data.copyAsset = function(sourceId, destinationId, opt_overwrite, opt_callback) {\n  var sourceName = ee.rpc_convert.assetIdToAssetName(sourceId), destinationName = ee.rpc_convert.assetIdToAssetName(destinationId), request = new module$exports$eeapiclient$ee_api_client.CopyAssetRequest({destinationName:destinationName, overwrite:null != opt_overwrite ? opt_overwrite : null}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  call.handle(call.assets().copy(sourceName, request).then(ee.rpc_convert.assetToLegacyResult));\n};\ngoog.exportSymbol(\"ee.data.copyAsset\", ee.data.copyAsset);\nee.data.deleteAsset = function(assetId, opt_callback) {\n  var call = new module$contents$ee$apiclient_Call(opt_callback);\n  call.handle(call.assets().delete(ee.rpc_convert.assetIdToAssetName(assetId)));\n};\ngoog.exportSymbol(\"ee.data.deleteAsset\", ee.data.deleteAsset);\nee.data.getAssetAcl = function(assetId, opt_callback) {\n  var resource = ee.rpc_convert.assetIdToAssetName(assetId), request = new module$exports$eeapiclient$ee_api_client.GetIamPolicyRequest(), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.assets().getIamPolicy(resource, request, {prettyPrint:!1}).then(ee.rpc_convert.iamPolicyToAcl));\n};\ngoog.exportSymbol(\"ee.data.getAssetAcl\", ee.data.getAssetAcl);\nee.data.getIamPolicy = function(assetId, opt_callback) {\n  var resource = ee.rpc_convert.assetIdToAssetName(assetId), request = new module$exports$eeapiclient$ee_api_client.GetIamPolicyRequest(), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.assets().getIamPolicy(resource, request, {prettyPrint:!1}));\n};\nee.data.setIamPolicy = function(assetId, policy, opt_callback) {\n  var resource = ee.rpc_convert.assetIdToAssetName(assetId), request = new module$exports$eeapiclient$ee_api_client.SetIamPolicyRequest({policy:policy}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.assets().setIamPolicy(resource, request, {prettyPrint:!1}));\n};\nee.data.updateAsset = function(assetId, asset, updateFields, opt_callback) {\n  var updateMask = (updateFields || []).join(\",\"), request = new module$exports$eeapiclient$ee_api_client.UpdateAssetRequest({asset:asset, updateMask:updateMask}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  return call.handle(call.assets().patch(ee.rpc_convert.assetIdToAssetName(assetId), request).then(ee.rpc_convert.assetToLegacyResult));\n};\ngoog.exportSymbol(\"ee.data.updateAsset\", ee.data.updateAsset);\nee.data.setAssetAcl = function(assetId, aclUpdate, opt_callback) {\n  var resource = ee.rpc_convert.assetIdToAssetName(assetId), policy = ee.rpc_convert.aclToIamPolicy(aclUpdate), request = new module$exports$eeapiclient$ee_api_client.SetIamPolicyRequest({policy:policy}), call = new module$contents$ee$apiclient_Call(opt_callback);\n  call.handle(call.assets().setIamPolicy(resource, request, {prettyPrint:!1}));\n};\ngoog.exportSymbol(\"ee.data.setAssetAcl\", ee.data.setAssetAcl);\nee.data.setAssetProperties = function(assetId, properties, opt_callback) {\n  var asset = ee.rpc_convert.legacyPropertiesToAssetUpdate(properties), updateFields = asset.getClassMetadata().keys.filter(function(k) {\n    return \"properties\" !== k && asset.Serializable$has(k);\n  }).map(function(str) {\n    return str.replace(/([A-Z])/g, function(all, cap) {\n      return \"_\" + cap.toLowerCase();\n    });\n  }).concat(Object.keys(asset.properties || {}).map(function(k) {\n    return 'properties.\"' + k + '\"';\n  }));\n  ee.data.updateAsset(assetId, asset, updateFields, opt_callback);\n};\ngoog.exportSymbol(\"ee.data.setAssetProperties\", ee.data.setAssetProperties);\nee.data.getAssetRootQuota = function(rootId, opt_callback) {\n  var name = ee.rpc_convert.assetIdToAssetName(rootId), call = new module$contents$ee$apiclient_Call(opt_callback), assetsCall = call.assets(), validateParams = assetsCall.$apiClient.$validateParameter;\n  assetsCall.$apiClient.$validateParameter = function(param, pattern) {\n    \"^projects\\\\/[^/]+\\\\/assets\\\\/.+$\" === pattern.source && (pattern = RegExp(\"^projects/[^/]+/assets/.*$\"));\n    return validateParams(param, pattern);\n  };\n  var getAssetRequest = assetsCall.get(name, {prettyPrint:!1});\n  return call.handle(getAssetRequest.then(function(asset) {\n    if (!(asset instanceof module$exports$eeapiclient$ee_api_client.EarthEngineAsset && asset.quota)) {\n      throw Error(rootId + \" is not a root folder.\");\n    }\n    return ee.rpc_convert.folderQuotaToAssetQuotaDetails(asset.quota);\n  }));\n};\ngoog.exportSymbol(\"ee.data.getAssetRootQuota\", ee.data.getAssetRootQuota);\nee.data.AssetType = {ALGORITHM:\"Algorithm\", CLASSIFIER:\"Classifier\", FEATURE_VIEW:\"FeatureView\", FOLDER:\"Folder\", FEATURE_COLLECTION:\"FeatureCollection\", IMAGE:\"Image\", IMAGE_COLLECTION:\"ImageCollection\", TABLE:\"Table\", UNKNOWN:\"Unknown\"};\nee.data.ExportType = {IMAGE:\"EXPORT_IMAGE\", MAP:\"EXPORT_TILES\", TABLE:\"EXPORT_FEATURES\", VIDEO:\"EXPORT_VIDEO\", VIDEO_MAP:\"EXPORT_VIDEO_MAP\", CLASSIFIER:\"EXPORT_CLASSIFIER\"};\nee.data.ExportState = {UNSUBMITTED:\"UNSUBMITTED\", READY:\"READY\", RUNNING:\"RUNNING\", COMPLETED:\"COMPLETED\", FAILED:\"FAILED\", CANCEL_REQUESTED:\"CANCEL_REQUESTED\", CANCELLED:\"CANCELLED\",};\nee.data.ExportDestination = {DRIVE:\"DRIVE\", GCS:\"GOOGLE_CLOUD_STORAGE\", ASSET:\"ASSET\", FEATURE_VIEW:\"FEATURE_VIEW\",};\nee.data.ThinningStrategy = {GLOBALLY_CONSISTENT:\"GLOBALLY_CONSISTENT\", HIGHER_DENSITY:\"HIGHER_DENSITY\",};\nee.data.Direction = {ASCENDING:\"ASCENDING\", DESCENDING:\"DESCENDING\",};\nee.data.SystemPropertyPrefix = \"system:\";\nee.data.SystemTimeProperty = {START:\"system:time_start\", END:\"system:time_end\"};\nee.data.SYSTEM_ASSET_SIZE_PROPERTY = \"system:asset_size\";\nee.data.AssetDetailsProperty = {TITLE:\"system:title\", DESCRIPTION:\"system:description\", TAGS:\"system:tags\"};\nee.data.ALLOWED_DESCRIPTION_HTML_TABLE_ELEMENTS_ = \"col colgroup caption table tbody td tfoot th thead tr\".split(\" \");\nee.data.ALLOWED_DESCRIPTION_HTML_ELEMENTS = ee.data.ALLOWED_DESCRIPTION_HTML_TABLE_ELEMENTS_.concat(\"a code em i li ol p strong sub sup ul\".split(\" \"));\nee.data.ShortAssetDescription = function() {\n};\nee.data.AssetAcl = function() {\n};\nee.data.AssetAclUpdate = function() {\n};\nee.data.AssetQuotaEntry = function() {\n};\nee.data.AssetQuotaDetails = function() {\n};\nee.data.FeatureViewDescription = function() {\n};\nee.data.FolderDescription = function() {\n};\nee.data.FeatureCollectionDescription = function() {\n};\nee.data.FeatureVisualizationParameters = function() {\n};\nee.data.GeoJSONFeature = function() {\n};\nee.data.GeoJSONGeometry = function() {\n};\nee.data.GeoJSONGeometryCrs = function() {\n};\nee.data.GeoJSONGeometryCrsProperties = function() {\n};\nee.data.ImageCollectionDescription = function() {\n};\nee.data.ImageDescription = function() {\n};\nee.data.TableDescription = function() {\n};\nee.data.TableDownloadParameters = function() {\n};\nee.data.ImageVisualizationParameters = function() {\n};\nee.data.FeatureViewVisualizationParameters = function() {\n};\nee.data.ThumbnailOptions = function() {\n};\n$jscomp.inherits(ee.data.ThumbnailOptions, ee.data.ImageVisualizationParameters);\nee.data.VideoThumbnailOptions = function() {\n};\n$jscomp.inherits(ee.data.VideoThumbnailOptions, ee.data.ThumbnailOptions);\nee.data.FilmstripThumbnailOptions = function() {\n};\n$jscomp.inherits(ee.data.FilmstripThumbnailOptions, ee.data.ThumbnailOptions);\nee.data.BandDescription = function() {\n};\nee.data.PixelTypeDescription = function() {\n};\nee.data.AlgorithmSignature = function() {\n};\nee.data.AlgorithmArgument = function() {\n};\nee.data.ThumbnailId = function() {\n};\nee.data.DownloadId = function() {\n};\nee.data.RawMapId = function() {\n};\nee.data.MapId = function() {\n};\n$jscomp.inherits(ee.data.MapId, ee.data.RawMapId);\nee.data.FeatureViewTilesKey = function() {\n};\nee.data.MapZoomRange = {MIN:0, MAX:24};\nee.data.TaskStatus = function() {\n};\nee.data.ProcessingResponse = function() {\n};\nee.data.TaskListResponse = function() {\n};\nee.data.TaskUpdateActions = {CANCEL:\"CANCEL\", UPDATE:\"UPDATE\"};\nee.data.AssetDescription = function() {\n};\nee.data.IngestionRequest = function() {\n};\nee.data.MissingData = function() {\n};\nee.data.PyramidingPolicy = {MEAN:\"MEAN\", MODE:\"MODE\", MIN:\"MIN\", MAX:\"MAX\", SAMPLE:\"SAMPLE\"};\nee.data.Band = function() {\n};\nee.data.Tileset = function() {\n};\nee.data.FileBand = function() {\n};\nee.data.FileSource = function() {\n};\nee.data.TableIngestionRequest = function() {\n};\nee.data.TableSource = function() {\n};\n$jscomp.inherits(ee.data.TableSource, ee.data.FileSource);\nee.data.AuthPrivateKey = function() {\n};\nee.ComputedObject = function(func, args, opt_varName) {\n  if (!(this instanceof ee.ComputedObject)) {\n    return ee.ComputedObject.construct(ee.ComputedObject, arguments);\n  }\n  if (opt_varName && (func || args)) {\n    throw Error('When \"opt_varName\" is specified, \"func\" and \"args\" must be null.');\n  }\n  if (func && !args) {\n    throw Error('When \"func\" is specified, \"args\" must not be null.');\n  }\n  this.func = func;\n  this.args = args;\n  this.varName = opt_varName || null;\n};\ngoog.inherits(ee.ComputedObject, ee.Encodable);\ngoog.exportSymbol(\"ee.ComputedObject\", ee.ComputedObject);\nee.ComputedObject.prototype.evaluate = function(callback) {\n  if (!callback || \"function\" !== typeof callback) {\n    throw Error(\"evaluate() requires a callback function.\");\n  }\n  ee.data.computeValue(this, callback);\n};\ngoog.exportProperty(ee.ComputedObject.prototype, \"evaluate\", ee.ComputedObject.prototype.evaluate);\nee.ComputedObject.prototype.getInfo = function(opt_callback) {\n  return ee.data.computeValue(this, opt_callback);\n};\ngoog.exportProperty(ee.ComputedObject.prototype, \"getInfo\", ee.ComputedObject.prototype.getInfo);\nee.ComputedObject.prototype.encode = function(encoder) {\n  if (this.isVariable()) {\n    return {type:\"ArgumentRef\", value:this.varName};\n  }\n  var encodedArgs = {}, name;\n  for (name in this.args) {\n    void 0 !== this.args[name] && (encodedArgs[name] = encoder(this.args[name]));\n  }\n  var result = {type:\"Invocation\", arguments:encodedArgs}, func = encoder(this.func);\n  result[\"string\" === typeof func ? \"functionName\" : \"function\"] = func;\n  return result;\n};\nee.ComputedObject.prototype.encodeCloudValue = function(serializer) {\n  if (this.isVariable()) {\n    var name = this.varName || serializer.unboundName;\n    if (!name) {\n      throw Error(\"A mapped function's arguments cannot be used in client-side operations\");\n    }\n    return ee.rpc_node.argumentReference(name);\n  }\n  var encodedArgs = {}, name$69;\n  for (name$69 in this.args) {\n    void 0 !== this.args[name$69] && (encodedArgs[name$69] = ee.rpc_node.reference(serializer.makeReference(this.args[name$69])));\n  }\n  return \"string\" === typeof this.func ? ee.rpc_node.functionByName(String(this.func), encodedArgs) : this.func.encodeCloudInvocation(serializer, encodedArgs);\n};\nee.ComputedObject.prototype.serialize = function(legacy) {\n  return (void 0 === legacy ? 0 : legacy) ? ee.Serializer.toJSON(this) : ee.Serializer.toCloudApiJSON(this);\n};\ngoog.exportProperty(ee.ComputedObject.prototype, \"serialize\", ee.ComputedObject.prototype.serialize);\nee.ComputedObject.prototype.toString = function() {\n  return \"ee.\" + this.name() + \"(\" + ee.Serializer.toReadableJSON(this) + \")\";\n};\ngoog.exportSymbol(\"ee.ComputedObject.prototype.toString\", ee.ComputedObject.prototype.toString);\nee.ComputedObject.prototype.isVariable = function() {\n  return null === this.func && null === this.args;\n};\nee.ComputedObject.prototype.name = function() {\n  return \"ComputedObject\";\n};\nee.ComputedObject.prototype.aside = function(func, var_args) {\n  var args = Array.from(arguments);\n  args[0] = this;\n  func.apply(goog.global, args);\n  return this;\n};\ngoog.exportProperty(ee.ComputedObject.prototype, \"aside\", ee.ComputedObject.prototype.aside);\nee.ComputedObject.prototype.castInternal = function(obj) {\n  if (obj instanceof this.constructor) {\n    return obj;\n  }\n  var klass = function() {\n  };\n  klass.prototype = this.constructor.prototype;\n  var result = new klass();\n  result.func = obj.func;\n  result.args = obj.args;\n  result.varName = obj.varName;\n  return result;\n};\nee.ComputedObject.construct = function(constructor, argsArray) {\n  function F() {\n    return constructor.apply(this, argsArray);\n  }\n  F.prototype = constructor.prototype;\n  return new F();\n};\nee.Types = {};\nee.Types.registeredClasses_ = {};\nee.Types.registerClasses = function(classes) {\n  ee.Types.registeredClasses_ = classes;\n};\nee.Types.nameToClass = function(name) {\n  return name in ee.Types.registeredClasses_ ? ee.Types.registeredClasses_[name] : null;\n};\nee.Types.classToName = function(klass) {\n  return klass.prototype instanceof ee.ComputedObject ? klass.prototype.name.call(null) : klass == Number ? \"Number\" : klass == String ? \"String\" : klass == Array ? \"Array\" : klass == Date ? \"Date\" : \"Object\";\n};\nee.Types.isSubtype = function(firstType, secondType) {\n  if (secondType == firstType) {\n    return !0;\n  }\n  switch(firstType) {\n    case \"Element\":\n      return \"Element\" == secondType || \"Image\" == secondType || \"Feature\" == secondType || \"Collection\" == secondType || \"ImageCollection\" == secondType || \"FeatureCollection\" == secondType;\n    case \"FeatureCollection\":\n    case \"Collection\":\n      return \"Collection\" == secondType || \"ImageCollection\" == secondType || \"FeatureCollection\" == secondType;\n    case \"Object\":\n      return !0;\n    default:\n      return !1;\n  }\n};\nee.Types.isNumber = function(obj) {\n  return \"number\" === typeof obj || obj instanceof ee.ComputedObject && \"Number\" == obj.name();\n};\nee.Types.isString = function(obj) {\n  return \"string\" === typeof obj || obj instanceof ee.ComputedObject && \"String\" == obj.name();\n};\nee.Types.isArray = function(obj) {\n  return Array.isArray(obj) || obj instanceof ee.ComputedObject && \"List\" == obj.name();\n};\nee.Types.isRegularObject = function(obj) {\n  if (goog.isObject(obj) && \"function\" !== typeof obj) {\n    var proto = Object.getPrototypeOf(obj);\n    return null !== proto && null === Object.getPrototypeOf(proto);\n  }\n  return !1;\n};\nee.Types.useKeywordArgs = function(args, signature, isInstance) {\n  isInstance = void 0 === isInstance ? !1 : isInstance;\n  if (1 === args.length && ee.Types.isRegularObject(args[0])) {\n    var formalArgs = signature.args;\n    isInstance && (formalArgs = formalArgs.slice(1));\n    if (formalArgs.length) {\n      return !(1 === formalArgs.length || formalArgs[1].optional) || \"Dictionary\" !== formalArgs[0].type;\n    }\n  }\n  return !1;\n};\nee.Function = function() {\n  if (!(this instanceof ee.Function)) {\n    return new ee.Function();\n  }\n};\ngoog.inherits(ee.Function, ee.Encodable);\ngoog.exportSymbol(\"ee.Function\", ee.Function);\nee.Function.promoter_ = goog.functions.identity;\nee.Function.registerPromoter = function(promoter) {\n  ee.Function.promoter_ = promoter;\n};\nee.Function.prototype.call = function(var_args) {\n  return this.apply(this.nameArgs(Array.prototype.slice.call(arguments, 0)));\n};\ngoog.exportProperty(ee.Function.prototype, \"call\", ee.Function.prototype.call);\nee.Function.prototype.apply = function(namedArgs) {\n  var result = new ee.ComputedObject(this, this.promoteArgs(namedArgs));\n  return ee.Function.promoter_(result, this.getReturnType());\n};\ngoog.exportProperty(ee.Function.prototype, \"apply\", ee.Function.prototype.apply);\nee.Function.prototype.callOrApply = function(thisValue, args) {\n  var isInstance = void 0 !== thisValue, signature = this.getSignature();\n  if (ee.Types.useKeywordArgs(args, signature, isInstance)) {\n    var namedArgs = module$contents$goog$object_clone(args[0]);\n    if (isInstance) {\n      var firstArgName = signature.args[0].name;\n      if (firstArgName in namedArgs) {\n        throw Error(\"Named args for \" + signature.name + \" can't contain keyword \" + firstArgName);\n      }\n      namedArgs[firstArgName] = thisValue;\n    }\n  } else {\n    namedArgs = this.nameArgs(isInstance ? [thisValue].concat(args) : args);\n  }\n  return this.apply(namedArgs);\n};\nee.Function.prototype.promoteArgs = function(args) {\n  for (var specs = this.getSignature().args, promotedArgs = {}, known = {}, i = 0; i < specs.length; i++) {\n    var name = specs[i].name;\n    if (name in args && void 0 !== args[name]) {\n      promotedArgs[name] = ee.Function.promoter_(args[name], specs[i].type);\n    } else {\n      if (!specs[i].optional) {\n        throw Error(\"Required argument (\" + name + \") missing to function: \" + this);\n      }\n    }\n    known[name] = !0;\n  }\n  var unknown = [], argName;\n  for (argName in args) {\n    known[argName] || unknown.push(argName);\n  }\n  if (0 < unknown.length) {\n    throw Error(\"Unrecognized arguments (\" + unknown + \") to function: \" + this);\n  }\n  return promotedArgs;\n};\nee.Function.prototype.nameArgs = function(args) {\n  var specs = this.getSignature().args;\n  if (specs.length < args.length) {\n    throw Error(\"Too many (\" + args.length + \") arguments to function: \" + this);\n  }\n  for (var namedArgs = {}, i = 0; i < args.length; i++) {\n    namedArgs[specs[i].name] = args[i];\n  }\n  return namedArgs;\n};\nee.Function.prototype.getReturnType = function() {\n  return this.getSignature().returns;\n};\nee.Function.prototype.toString = function(opt_name, opt_isInstance) {\n  var signature = this.getSignature(), buffer = [];\n  buffer.push(opt_name || signature.name);\n  buffer.push(\"(\");\n  buffer.push(module$contents$goog$array_map(signature.args.slice(opt_isInstance ? 1 : 0), function(elem) {\n    return elem.name;\n  }).join(\", \"));\n  buffer.push(\")\\n\");\n  buffer.push(\"\\n\");\n  signature.description ? buffer.push(signature.description) : buffer.push(\"Undocumented.\");\n  buffer.push(\"\\n\");\n  if (signature.args.length) {\n    buffer.push(\"\\nArgs:\\n\");\n    for (var i = 0; i < signature.args.length; i++) {\n      opt_isInstance && 0 == i ? buffer.push(\"  this:\") : buffer.push(\"\\n  \");\n      var arg = signature.args[i];\n      buffer.push(arg.name);\n      buffer.push(\" (\");\n      buffer.push(arg.type);\n      arg.optional && buffer.push(\", optional\");\n      buffer.push(\"): \");\n      arg.description ? buffer.push(arg.description) : buffer.push(\"Undocumented.\");\n    }\n  }\n  return buffer.join(\"\");\n};\nee.Function.prototype.serialize = function(legacy) {\n  return (void 0 === legacy ? 0 : legacy) ? ee.Serializer.toJSON(this) : ee.Serializer.toCloudApiJSON(this);\n};\nee.ApiFunction = function(name, opt_signature) {\n  if (void 0 === opt_signature) {\n    return ee.ApiFunction.lookup(name);\n  }\n  if (!(this instanceof ee.ApiFunction)) {\n    return ee.ComputedObject.construct(ee.ApiFunction, arguments);\n  }\n  this.signature_ = module$contents$goog$object_unsafeClone(opt_signature);\n  this.signature_.name = name;\n};\ngoog.inherits(ee.ApiFunction, ee.Function);\ngoog.exportSymbol(\"ee.ApiFunction\", ee.ApiFunction);\nee.ApiFunction._call = function(name, var_args) {\n  return ee.Function.prototype.call.apply(ee.ApiFunction.lookup(name), Array.prototype.slice.call(arguments, 1));\n};\ngoog.exportSymbol(\"ee.ApiFunction._call\", ee.ApiFunction._call);\nee.ApiFunction._apply = function(name, namedArgs) {\n  return ee.ApiFunction.lookup(name).apply(namedArgs);\n};\ngoog.exportSymbol(\"ee.ApiFunction._apply\", ee.ApiFunction._apply);\nee.ApiFunction.prototype.encode = function(encoder) {\n  return this.signature_.name;\n};\nee.ApiFunction.prototype.encodeCloudInvocation = function(serializer, args) {\n  return ee.rpc_node.functionByName(this.signature_.name, args);\n};\nee.ApiFunction.prototype.getSignature = function() {\n  return this.signature_;\n};\nee.ApiFunction.api_ = null;\nee.ApiFunction.boundSignatures_ = {};\nee.ApiFunction.allSignatures = function() {\n  ee.ApiFunction.initialize();\n  return module$contents$goog$object_map(ee.ApiFunction.api_, function(func) {\n    return func.getSignature();\n  });\n};\nee.ApiFunction.unboundFunctions = function() {\n  ee.ApiFunction.initialize();\n  return module$contents$goog$object_filter(ee.ApiFunction.api_, function(func, name) {\n    return !ee.ApiFunction.boundSignatures_[name];\n  });\n};\nee.ApiFunction.lookup = function(name) {\n  var func = ee.ApiFunction.lookupInternal(name);\n  if (!func) {\n    throw Error(\"Unknown built-in function name: \" + name);\n  }\n  return func;\n};\ngoog.exportSymbol(\"ee.ApiFunction.lookup\", ee.ApiFunction.lookup);\nee.ApiFunction.lookupInternal = function(name) {\n  ee.ApiFunction.initialize();\n  return ee.ApiFunction.api_[name] || null;\n};\nee.ApiFunction.initialize = function(opt_successCallback, opt_failureCallback) {\n  if (ee.ApiFunction.api_) {\n    opt_successCallback && opt_successCallback();\n  } else {\n    var callback = function(data, opt_error) {\n      opt_error ? opt_failureCallback && opt_failureCallback(Error(opt_error)) : (ee.ApiFunction.api_ = module$contents$goog$object_map(data, function(sig, name) {\n        sig.returns = sig.returns.replace(/<.*>/, \"\");\n        for (var i = 0; i < sig.args.length; i++) {\n          sig.args[i].type = sig.args[i].type.replace(/<.*>/, \"\");\n        }\n        return new ee.ApiFunction(name, sig);\n      }), opt_successCallback && opt_successCallback());\n    };\n    opt_successCallback ? ee.data.getAlgorithms(callback) : callback(ee.data.getAlgorithms());\n  }\n};\nee.ApiFunction.reset = function() {\n  ee.ApiFunction.api_ = null;\n  ee.ApiFunction.boundSignatures_ = {};\n};\nee.ApiFunction.importApi = function(target, prefix, typeName, opt_prepend) {\n  ee.ApiFunction.initialize();\n  var prepend = opt_prepend || \"\";\n  module$contents$goog$object_forEach(ee.ApiFunction.api_, function(apiFunc, name) {\n    var parts = name.split(\".\");\n    if (2 == parts.length && parts[0] == prefix) {\n      var fname = prepend + parts[1], signature = apiFunc.getSignature();\n      ee.ApiFunction.boundSignatures_[name] = !0;\n      var isInstance = !1;\n      if (signature.args.length) {\n        var firstArgType = signature.args[0].type;\n        isInstance = \"Object\" != firstArgType && ee.Types.isSubtype(firstArgType, typeName);\n      }\n      var destination = isInstance ? target.prototype : target;\n      fname in destination && !destination[fname].signature || (destination[fname] = function(var_args) {\n        return apiFunc.callOrApply(isInstance ? this : void 0, Array.prototype.slice.call(arguments, 0));\n      }, destination[fname].toString = goog.bind(apiFunc.toString, apiFunc, fname, isInstance), destination[fname].signature = signature);\n    }\n  });\n};\nee.ApiFunction.clearApi = function(target$jscomp$0) {\n  var clear = function(target) {\n    for (var name in target) {\n      \"function\" === typeof target[name] && target[name].signature && delete target[name];\n    }\n  };\n  clear(target$jscomp$0);\n  clear(target$jscomp$0.prototype || {});\n};\nee.arguments = {};\nee.arguments.extractFromFunction = function(fn, originalArgs) {\n  return ee.arguments.extractImpl_(fn, originalArgs, ee.arguments.JS_PARAM_DECL_MATCHER_FUNCTION_);\n};\nee.arguments.extractFromClassConstructor = function(fn, originalArgs) {\n  return ee.arguments.extractImpl_(fn, originalArgs, ee.arguments.JS_PARAM_DECL_MATCHER_CLASS_CONSTRUCTOR_);\n};\nee.arguments.extractFromClassMethod = function(fn, originalArgs) {\n  return ee.arguments.extractImpl_(fn, originalArgs, ee.arguments.JS_PARAM_DECL_MATCHER_CLASS_METHOD_);\n};\nee.arguments.extract = ee.arguments.extractFromFunction;\nee.arguments.extractImpl_ = function(fn, originalArgs, parameterMatcher) {\n  var paramNamesWithOptPrefix = ee.arguments.getParamNames_(fn, parameterMatcher), paramNames = module$contents$goog$array_map(paramNamesWithOptPrefix, function(param) {\n    return param.replace(/^opt_/, \"\");\n  }), fnName = ee.arguments.getFnName_(fn), fnNameSnippet = fnName ? \" to function \" + fnName : \"\", args = {}, firstArg = originalArgs[0], firstArgCouldBeDictionary = goog.isObject(firstArg) && \"function\" !== typeof firstArg && !Array.isArray(firstArg) && \"Object\" === Object.getPrototypeOf(firstArg).constructor.name;\n  if (1 < originalArgs.length || !firstArgCouldBeDictionary) {\n    if (originalArgs.length > paramNames.length) {\n      throw Error(\"Received too many arguments\" + fnNameSnippet + \". Expected at most \" + paramNames.length + \" but got \" + originalArgs.length + \".\");\n    }\n    for (var i = 0; i < originalArgs.length; i++) {\n      args[paramNames[i]] = originalArgs[i];\n    }\n  } else {\n    var seen = new goog.structs.Set(module$contents$goog$object_getKeys(firstArg)), expected = new goog.structs.Set(paramNames);\n    if (expected.intersection(seen).isEmpty()) {\n      args[paramNames[0]] = originalArgs[0];\n    } else {\n      var unexpected = seen.difference(expected);\n      if (0 !== unexpected.size) {\n        throw Error(\"Unexpected arguments\" + fnNameSnippet + \": \" + Array.from(unexpected.values()).join(\", \"));\n      }\n      args = module$contents$goog$object_clone(firstArg);\n    }\n  }\n  var provided = new goog.structs.Set(module$contents$goog$object_getKeys(args)), missing = (new goog.structs.Set(module$contents$goog$array_filter(paramNamesWithOptPrefix, function(param) {\n    return !goog.string.startsWith(param, \"opt_\");\n  }))).difference(provided);\n  if (0 !== missing.size) {\n    throw Error(\"Missing required arguments\" + fnNameSnippet + \": \" + Array.from(missing.values()).join(\", \"));\n  }\n  return args;\n};\nee.arguments.getParamNames_ = function(fn, parameterMatcher) {\n  var paramNames = [];\n  if (goog.global.EXPORTED_FN_INFO) {\n    var exportedFnInfo = goog.global.EXPORTED_FN_INFO[fn.toString()];\n    goog.isObject(exportedFnInfo) || ee.arguments.throwMatchFailedError_();\n    paramNames = exportedFnInfo.paramNames;\n    Array.isArray(paramNames) || ee.arguments.throwMatchFailedError_();\n  } else {\n    var fnMatchResult = fn.toString().replace(ee.arguments.JS_COMMENT_MATCHER_, \"\").match(parameterMatcher);\n    null === fnMatchResult && ee.arguments.throwMatchFailedError_();\n    paramNames = (fnMatchResult[1].split(\",\") || []).map(function(p) {\n      return p.replace(ee.arguments.JS_PARAM_DEFAULT_MATCHER_, \"\");\n    });\n  }\n  return paramNames;\n};\nee.arguments.getFnName_ = function(fn) {\n  return goog.global.EXPORTED_FN_INFO ? goog.global.EXPORTED_FN_INFO[fn.toString()].name.split(\".\").pop() + \"()\" : null;\n};\nee.arguments.throwMatchFailedError_ = function() {\n  throw Error(\"Failed to locate function parameters.\");\n};\nee.arguments.JS_COMMENT_MATCHER_ = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/)|(\\s))/mg;\nee.arguments.JS_PARAM_DECL_MATCHER_FUNCTION_ = /^function[^\\(]*\\(([^\\)]*)\\)/m;\nee.arguments.JS_PARAM_DECL_MATCHER_CLASS_CONSTRUCTOR_ = /^class[^\\{]*{\\S*?\\bconstructor\\(([^\\)]*)\\)/m;\nee.arguments.JS_PARAM_DECL_MATCHER_CLASS_METHOD_ = /[^\\(]*\\(([^\\)]*)\\)/m;\nee.arguments.JS_PARAM_DEFAULT_MATCHER_ = /=.*$/;\nee.Element = function(func, args, opt_varName) {\n  ee.ComputedObject.call(this, func, args, opt_varName);\n  ee.Element.initialize();\n};\ngoog.inherits(ee.Element, ee.ComputedObject);\ngoog.exportSymbol(\"ee.Element\", ee.Element);\nee.Element.initialized_ = !1;\nee.Element.initialize = function() {\n  ee.Element.initialized_ || (ee.ApiFunction.importApi(ee.Element, \"Element\", \"Element\"), ee.Element.initialized_ = !0);\n};\nee.Element.reset = function() {\n  ee.ApiFunction.clearApi(ee.Element);\n  ee.Element.initialized_ = !1;\n};\nee.Element.prototype.name = function() {\n  return \"Element\";\n};\nee.Element.prototype.set = function(var_args) {\n  if (1 >= arguments.length) {\n    var properties = arguments[0];\n    ee.Types.isRegularObject(properties) && module$contents$goog$array_equals(module$contents$goog$object_getKeys(properties), [\"properties\"]) && goog.isObject(properties.properties) && (properties = properties.properties);\n    if (ee.Types.isRegularObject(properties)) {\n      var result = this;\n      for (var key in properties) {\n        var value = properties[key];\n        result = ee.ApiFunction._call(\"Element.set\", result, key, value);\n      }\n    } else {\n      if (properties instanceof ee.ComputedObject && ee.ApiFunction.lookupInternal(\"Element.setMulti\")) {\n        result = ee.ApiFunction._call(\"Element.setMulti\", this, properties);\n      } else {\n        throw Error(\"When Element.set() is passed one argument, it must be a dictionary.\");\n      }\n    }\n  } else {\n    if (0 != arguments.length % 2) {\n      throw Error(\"When Element.set() is passed multiple arguments, there must be an even number of them.\");\n    }\n    result = this;\n    for (var i = 0; i < arguments.length; i += 2) {\n      key = arguments[i], value = arguments[i + 1], result = ee.ApiFunction._call(\"Element.set\", result, key, value);\n    }\n  }\n  return this.castInternal(result);\n};\ngoog.exportProperty(ee.Element.prototype, \"set\", ee.Element.prototype.set);\nee.Geometry = function(geoJson, opt_proj, opt_geodesic, opt_evenOdd) {\n  if (!(this instanceof ee.Geometry)) {\n    return ee.ComputedObject.construct(ee.Geometry, arguments);\n  }\n  if (!(\"type\" in geoJson)) {\n    var args = ee.arguments.extractFromFunction(ee.Geometry, arguments);\n    geoJson = args.geoJson;\n    opt_proj = args.proj;\n    opt_geodesic = args.geodesic;\n    opt_evenOdd = args.evenOdd;\n  }\n  ee.Geometry.initialize();\n  var options = null != opt_proj || null != opt_geodesic || null != opt_evenOdd;\n  if (geoJson instanceof ee.ComputedObject && !(geoJson instanceof ee.Geometry && geoJson.type_)) {\n    if (options) {\n      throw Error(\"Setting the CRS, geodesic, or evenOdd flag on a computed Geometry is not supported.  Use Geometry.transform().\");\n    }\n    ee.ComputedObject.call(this, geoJson.func, geoJson.args, geoJson.varName);\n  } else {\n    geoJson instanceof ee.Geometry && (geoJson = geoJson.encode());\n    if (!ee.Geometry.isValidGeometry_(geoJson)) {\n      throw Error(\"Invalid GeoJSON geometry: \" + JSON.stringify(geoJson));\n    }\n    ee.ComputedObject.call(this, null, null);\n    this.type_ = geoJson.type;\n    this.coordinates_ = null != geoJson.coordinates ? module$contents$goog$object_unsafeClone(geoJson.coordinates) : null;\n    this.geometries_ = geoJson.geometries || null;\n    if (null != opt_proj) {\n      this.proj_ = opt_proj;\n    } else {\n      if (\"crs\" in geoJson) {\n        if (goog.isObject(geoJson.crs) && \"name\" == geoJson.crs.type && goog.isObject(geoJson.crs.properties) && \"string\" === typeof geoJson.crs.properties.name) {\n          this.proj_ = geoJson.crs.properties.name;\n        } else {\n          throw Error(\"Invalid CRS declaration in GeoJSON: \" + (new goog.json.Serializer()).serialize(geoJson.crs));\n        }\n      }\n    }\n    this.geodesic_ = opt_geodesic;\n    void 0 === this.geodesic_ && \"geodesic\" in geoJson && (this.geodesic_ = !!geoJson.geodesic);\n    this.evenOdd_ = opt_evenOdd;\n    void 0 === this.evenOdd_ && \"evenOdd\" in geoJson && (this.evenOdd_ = !!geoJson.evenOdd);\n  }\n};\ngoog.inherits(ee.Geometry, ee.ComputedObject);\ngoog.exportSymbol(\"ee.Geometry\", ee.Geometry);\nee.Geometry.initialized_ = !1;\nee.Geometry.initialize = function() {\n  ee.Geometry.initialized_ || (ee.ApiFunction.importApi(ee.Geometry, \"Geometry\", \"Geometry\"), ee.Geometry.initialized_ = !0);\n};\nee.Geometry.reset = function() {\n  ee.ApiFunction.clearApi(ee.Geometry);\n  ee.Geometry.initialized_ = !1;\n};\nee.Geometry.Point = function(coords, opt_proj) {\n  if (!(this instanceof ee.Geometry.Point)) {\n    return ee.Geometry.createInstance_(ee.Geometry.Point, arguments);\n  }\n  var init = ee.Geometry.construct_(ee.Geometry.Point, \"Point\", 1, arguments);\n  if (!(init instanceof ee.ComputedObject)) {\n    var xy = init.coordinates;\n    if (!Array.isArray(xy) || 2 != xy.length) {\n      throw Error(\"The Geometry.Point constructor requires 2 coordinates.\");\n    }\n  }\n  ee.Geometry.call(this, init);\n};\ngoog.inherits(ee.Geometry.Point, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"Point\", ee.Geometry.Point);\nee.Geometry.MultiPoint = function(coords, opt_proj) {\n  if (!(this instanceof ee.Geometry.MultiPoint)) {\n    return ee.Geometry.createInstance_(ee.Geometry.MultiPoint, arguments);\n  }\n  ee.Geometry.call(this, ee.Geometry.construct_(ee.Geometry.MultiPoint, \"MultiPoint\", 2, arguments));\n};\ngoog.inherits(ee.Geometry.MultiPoint, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"MultiPoint\", ee.Geometry.MultiPoint);\nee.Geometry.Rectangle = function(coords, opt_proj, opt_geodesic, opt_evenOdd) {\n  if (!(this instanceof ee.Geometry.Rectangle)) {\n    return ee.Geometry.createInstance_(ee.Geometry.Rectangle, arguments);\n  }\n  var init = ee.Geometry.construct_(ee.Geometry.Rectangle, \"Rectangle\", 2, arguments);\n  if (!(init instanceof ee.ComputedObject)) {\n    var xy = init.coordinates;\n    if (2 != xy.length) {\n      throw Error(\"The Geometry.Rectangle constructor requires 2 points or 4 coordinates.\");\n    }\n    var x1 = xy[0][0], y1 = xy[0][1], x2 = xy[1][0], y2 = xy[1][1];\n    init.coordinates = [[[x1, y2], [x1, y1], [x2, y1], [x2, y2]]];\n    init.type = \"Polygon\";\n  }\n  ee.Geometry.call(this, init);\n};\ngoog.inherits(ee.Geometry.Rectangle, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"Rectangle\", ee.Geometry.Rectangle);\nee.Geometry.BBox = function(west, south, east, north) {\n  if (!(this instanceof ee.Geometry.BBox)) {\n    return ee.Geometry.createInstance_(ee.Geometry.BBox, arguments);\n  }\n  var coordinates = [west, south, east, north];\n  if (ee.Geometry.hasServerValue_(coordinates)) {\n    return (new ee.ApiFunction(\"GeometryConstructors.BBox\")).apply(coordinates);\n  }\n  if (!(Infinity > west)) {\n    throw Error(\"Geometry.BBox: west must not be \" + west);\n  }\n  if (!(-Infinity < east)) {\n    throw Error(\"Geometry.BBox: east must not be \" + east);\n  }\n  if (!(90 >= south)) {\n    throw Error(\"Geometry.BBox: south must be at most +90\\u00b0, but was \" + south + \"\\u00b0\");\n  }\n  if (!(-90 <= north)) {\n    throw Error(\"Geometry.BBox: north must be at least -90\\u00b0, but was \" + north + \"\\u00b0\");\n  }\n  south = Math.max(south, -90);\n  north = Math.min(north, 90);\n  360 <= east - west ? (west = -180, east = 180) : (west = ee.Geometry.canonicalizeLongitude_(west), east = ee.Geometry.canonicalizeLongitude_(east), east < west && (east += 360));\n  ee.Geometry.call(this, {type:\"Polygon\", coordinates:[[[west, north], [west, south], [east, south], [east, north]]],}, void 0, !1, !0);\n};\ngoog.inherits(ee.Geometry.BBox, ee.Geometry.Rectangle);\ngoog.exportProperty(ee.Geometry, \"BBox\", ee.Geometry.BBox);\nee.Geometry.canonicalizeLongitude_ = function(longitude) {\n  longitude %= 360;\n  180 < longitude ? longitude -= 360 : -180 > longitude && (longitude += 360);\n  return longitude;\n};\nee.Geometry.LineString = function(coords, opt_proj, opt_geodesic, opt_maxError) {\n  if (!(this instanceof ee.Geometry.LineString)) {\n    return ee.Geometry.createInstance_(ee.Geometry.LineString, arguments);\n  }\n  ee.Geometry.call(this, ee.Geometry.construct_(ee.Geometry.LineString, \"LineString\", 2, arguments));\n};\ngoog.inherits(ee.Geometry.LineString, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"LineString\", ee.Geometry.LineString);\nee.Geometry.LinearRing = function(coords, opt_proj, opt_geodesic, opt_maxError) {\n  if (!(this instanceof ee.Geometry.LinearRing)) {\n    return ee.Geometry.createInstance_(ee.Geometry.LinearRing, arguments);\n  }\n  ee.Geometry.call(this, ee.Geometry.construct_(ee.Geometry.LinearRing, \"LinearRing\", 2, arguments));\n};\ngoog.inherits(ee.Geometry.LinearRing, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"LinearRing\", ee.Geometry.LinearRing);\nee.Geometry.MultiLineString = function(coords, opt_proj, opt_geodesic, opt_maxError) {\n  if (!(this instanceof ee.Geometry.MultiLineString)) {\n    return ee.Geometry.createInstance_(ee.Geometry.MultiLineString, arguments);\n  }\n  ee.Geometry.call(this, ee.Geometry.construct_(ee.Geometry.MultiLineString, \"MultiLineString\", 3, arguments));\n};\ngoog.inherits(ee.Geometry.MultiLineString, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"MultiLineString\", ee.Geometry.MultiLineString);\nee.Geometry.Polygon = function(coords, opt_proj, opt_geodesic, opt_maxError, opt_evenOdd) {\n  if (!(this instanceof ee.Geometry.Polygon)) {\n    return ee.Geometry.createInstance_(ee.Geometry.Polygon, arguments);\n  }\n  ee.Geometry.call(this, ee.Geometry.construct_(ee.Geometry.Polygon, \"Polygon\", 3, arguments));\n};\ngoog.inherits(ee.Geometry.Polygon, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"Polygon\", ee.Geometry.Polygon);\nee.Geometry.MultiPolygon = function(coords, opt_proj, opt_geodesic, opt_maxError, opt_evenOdd) {\n  if (!(this instanceof ee.Geometry.MultiPolygon)) {\n    return ee.Geometry.createInstance_(ee.Geometry.MultiPolygon, arguments);\n  }\n  ee.Geometry.call(this, ee.Geometry.construct_(ee.Geometry.MultiPolygon, \"MultiPolygon\", 4, arguments));\n};\ngoog.inherits(ee.Geometry.MultiPolygon, ee.Geometry);\ngoog.exportProperty(ee.Geometry, \"MultiPolygon\", ee.Geometry.MultiPolygon);\nee.Geometry.prototype.encode = function(opt_encoder) {\n  if (!this.type_) {\n    if (!opt_encoder) {\n      throw Error(\"Must specify an encode function when encoding a computed geometry.\");\n    }\n    return ee.ComputedObject.prototype.encode.call(this, opt_encoder);\n  }\n  var result = {type:this.type_};\n  \"GeometryCollection\" == this.type_ ? result.geometries = this.geometries_ : result.coordinates = this.coordinates_;\n  null != this.proj_ && (result.crs = {type:\"name\", properties:{name:this.proj_}});\n  null != this.geodesic_ && (result.geodesic = this.geodesic_);\n  null != this.evenOdd_ && (result.evenOdd = this.evenOdd_);\n  return result;\n};\nee.Geometry.prototype.toGeoJSON = function() {\n  if (this.func) {\n    throw Error(\"Can't convert a computed Geometry to GeoJSON. Use evaluate() instead.\");\n  }\n  return this.encode();\n};\ngoog.exportProperty(ee.Geometry.prototype, \"toGeoJSON\", ee.Geometry.prototype.toGeoJSON);\nee.Geometry.prototype.toGeoJSONString = function() {\n  if (this.func) {\n    throw Error(\"Can't convert a computed Geometry to GeoJSON. Use evaluate() instead.\");\n  }\n  return (new goog.json.Serializer()).serialize(this.toGeoJSON());\n};\ngoog.exportProperty(ee.Geometry.prototype, \"toGeoJSONString\", ee.Geometry.prototype.toGeoJSONString);\nee.Geometry.prototype.serialize = function(legacy) {\n  return (void 0 === legacy ? 0 : legacy) ? ee.Serializer.toJSON(this) : ee.Serializer.toCloudApiJSON(this);\n};\ngoog.exportProperty(ee.Geometry.prototype, \"serialize\", ee.Geometry.prototype.serialize);\nee.Geometry.prototype.toString = function() {\n  return \"ee.Geometry(\" + this.toGeoJSONString() + \")\";\n};\nee.Geometry.prototype.encodeCloudValue = function(serializer) {\n  if (!this.type_) {\n    if (!serializer) {\n      throw Error(\"Must specify a serializer when encoding a computed geometry.\");\n    }\n    return ee.ComputedObject.prototype.encodeCloudValue.call(this, serializer);\n  }\n  var args = {}, func = \"\";\n  \"GeometryCollection\" === this.type_ ? (args.geometries = this.geometries_.map(function(geometry) {\n    return new ee.Geometry(geometry);\n  }), func = \"GeometryConstructors.MultiGeometry\") : (args.coordinates = this.coordinates_, func = \"GeometryConstructors.\" + this.type_);\n  null != this.proj_ && (args.crs = \"string\" === typeof this.proj_ ? (new ee.ApiFunction(\"Projection\")).call(this.proj_) : this.proj_);\n  var acceptsGeodesicArg = \"Point\" !== this.type_ && \"MultiPoint\" !== this.type_;\n  null != this.geodesic_ && acceptsGeodesicArg && (args.geodesic = this.geodesic_);\n  null != this.evenOdd_ && (args.evenOdd = this.evenOdd_);\n  return (new ee.ApiFunction(func)).apply(args).encodeCloudValue(serializer);\n};\nee.Geometry.isValidGeometry_ = function(geometry) {\n  var type = geometry.type;\n  if (\"GeometryCollection\" == type) {\n    var geometries = geometry.geometries;\n    if (!Array.isArray(geometries)) {\n      return !1;\n    }\n    for (var i = 0; i < geometries.length; i++) {\n      if (!ee.Geometry.isValidGeometry_(geometries[i])) {\n        return !1;\n      }\n    }\n    return !0;\n  }\n  var coords = geometry.coordinates, nesting = ee.Geometry.isValidCoordinates_(coords);\n  return \"Point\" == type && 1 == nesting || \"MultiPoint\" == type && (2 == nesting || 0 == coords.length) || \"LineString\" == type && 2 == nesting || \"LinearRing\" == type && 2 == nesting || \"MultiLineString\" == type && (3 == nesting || 0 == coords.length) || \"Polygon\" == type && 3 == nesting || \"MultiPolygon\" == type && (4 == nesting || 0 == coords.length);\n};\nee.Geometry.isValidCoordinates_ = function(shape) {\n  if (!Array.isArray(shape)) {\n    return -1;\n  }\n  if (Array.isArray(shape[0])) {\n    for (var count = ee.Geometry.isValidCoordinates_(shape[0]), i = 1; i < shape.length; i++) {\n      if (ee.Geometry.isValidCoordinates_(shape[i]) != count) {\n        return -1;\n      }\n    }\n    return count + 1;\n  }\n  for (i = 0; i < shape.length; i++) {\n    if (\"number\" !== typeof shape[i]) {\n      return -1;\n    }\n  }\n  return 0 == shape.length % 2 ? 1 : -1;\n};\nee.Geometry.coordinatesToLine_ = function(coordinates) {\n  if (\"number\" !== typeof coordinates[0] || 2 == coordinates.length) {\n    return coordinates;\n  }\n  if (0 != coordinates.length % 2) {\n    throw Error(\"Invalid number of coordinates: \" + coordinates.length);\n  }\n  for (var line = [], i = 0; i < coordinates.length; i += 2) {\n    line.push([coordinates[i], coordinates[i + 1]]);\n  }\n  return line;\n};\nee.Geometry.construct_ = function(jsConstructorFn, apiConstructorName, depth, originalArgs) {\n  var eeArgs = ee.Geometry.getEeApiArgs_(jsConstructorFn, originalArgs);\n  if (ee.Geometry.hasServerValue_(eeArgs.coordinates) || null != eeArgs.crs || null != eeArgs.maxError) {\n    return (new ee.ApiFunction(\"GeometryConstructors.\" + apiConstructorName)).apply(eeArgs);\n  }\n  eeArgs.type = apiConstructorName;\n  eeArgs.coordinates = ee.Geometry.fixDepth_(depth, eeArgs.coordinates);\n  var isPolygon = module$contents$goog$array_contains([\"Polygon\", \"Rectangle\", \"MultiPolygon\"], apiConstructorName);\n  isPolygon && null == eeArgs.evenOdd && (eeArgs.evenOdd = !0);\n  if (isPolygon && !1 === eeArgs.geodesic && !1 === eeArgs.evenOdd) {\n    throw Error(\"Planar interiors must be even/odd.\");\n  }\n  return eeArgs;\n};\nee.Geometry.getEeApiArgs_ = function(jsConstructorFn, originalArgs) {\n  if (module$contents$goog$array_every(originalArgs, ee.Types.isNumber)) {\n    return {coordinates:module$contents$goog$array_toArray(originalArgs)};\n  }\n  var args = ee.arguments.extractFromFunction(jsConstructorFn, originalArgs);\n  args.coordinates = args.coords;\n  delete args.coords;\n  args.crs = args.proj;\n  delete args.proj;\n  return module$contents$goog$object_filter(args, function(x) {\n    return null != x;\n  });\n};\nee.Geometry.hasServerValue_ = function(coordinates) {\n  return Array.isArray(coordinates) ? module$contents$goog$array_some(coordinates, ee.Geometry.hasServerValue_) : coordinates instanceof ee.ComputedObject;\n};\nee.Geometry.fixDepth_ = function(depth, coords) {\n  if (1 > depth || 4 < depth) {\n    throw Error(\"Unexpected nesting level.\");\n  }\n  module$contents$goog$array_every(coords, function(x) {\n    return \"number\" === typeof x;\n  }) && (coords = ee.Geometry.coordinatesToLine_(coords));\n  for (var item = coords, count = 0; Array.isArray(item);) {\n    item = item[0], count++;\n  }\n  for (; count < depth;) {\n    coords = [coords], count++;\n  }\n  if (ee.Geometry.isValidCoordinates_(coords) != depth) {\n    throw Error(\"Invalid geometry\");\n  }\n  for (item = coords; Array.isArray(item) && 1 == item.length;) {\n    item = item[0];\n  }\n  return Array.isArray(item) && 0 == item.length ? [] : coords;\n};\nee.Geometry.createInstance_ = function(klass, args) {\n  var f = function() {\n  };\n  f.prototype = klass.prototype;\n  var instance = new f(), result = klass.apply(instance, args);\n  return void 0 !== result ? result : instance;\n};\nee.Geometry.prototype.name = function() {\n  return \"Geometry\";\n};\nee.Filter = function(opt_filter) {\n  if (!(this instanceof ee.Filter)) {\n    return ee.ComputedObject.construct(ee.Filter, arguments);\n  }\n  if (opt_filter instanceof ee.Filter) {\n    return opt_filter;\n  }\n  ee.Filter.initialize();\n  if (Array.isArray(opt_filter)) {\n    if (0 == opt_filter.length) {\n      throw Error(\"Empty list specified for ee.Filter().\");\n    }\n    if (1 == opt_filter.length) {\n      return new ee.Filter(opt_filter[0]);\n    }\n    ee.ComputedObject.call(this, new ee.ApiFunction(\"Filter.and\"), {filters:opt_filter});\n    this.filter_ = opt_filter;\n  } else {\n    if (opt_filter instanceof ee.ComputedObject) {\n      ee.ComputedObject.call(this, opt_filter.func, opt_filter.args, opt_filter.varName), this.filter_ = [opt_filter];\n    } else {\n      if (void 0 === opt_filter) {\n        ee.ComputedObject.call(this, null, null), this.filter_ = [];\n      } else {\n        throw Error(\"Invalid argument specified for ee.Filter(): \" + opt_filter);\n      }\n    }\n  }\n};\ngoog.inherits(ee.Filter, ee.ComputedObject);\ngoog.exportSymbol(\"ee.Filter\", ee.Filter);\nee.Filter.initialized_ = !1;\nee.Filter.initialize = function() {\n  ee.Filter.initialized_ || (ee.ApiFunction.importApi(ee.Filter, \"Filter\", \"Filter\"), ee.Filter.initialized_ = !0);\n};\nee.Filter.reset = function() {\n  ee.ApiFunction.clearApi(ee.Filter);\n  ee.Filter.initialized_ = !1;\n};\nee.Filter.functionNames_ = {equals:\"equals\", less_than:\"lessThan\", greater_than:\"greaterThan\", contains:\"stringContains\", starts_with:\"stringStartsWith\", ends_with:\"stringEndsWith\"};\nee.Filter.prototype.append_ = function(newFilter) {\n  var prev = this.filter_.slice(0);\n  newFilter instanceof ee.Filter ? module$contents$goog$array_extend(prev, newFilter.filter_) : newFilter instanceof Array ? module$contents$goog$array_extend(prev, newFilter) : prev.push(newFilter);\n  return new ee.Filter(prev);\n};\nee.Filter.prototype.not = function() {\n  return ee.ApiFunction._call(\"Filter.not\", this);\n};\ngoog.exportProperty(ee.Filter.prototype, \"not\", ee.Filter.prototype.not);\nee.Filter.eq = function(name, value) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.eq, arguments);\n  return ee.ApiFunction._call(\"Filter.equals\", args.name, args.value);\n};\ngoog.exportProperty(ee.Filter, \"eq\", ee.Filter.eq);\nee.Filter.neq = function(name, value) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.neq, arguments);\n  return ee.Filter.eq(args.name, args.value).not();\n};\ngoog.exportProperty(ee.Filter, \"neq\", ee.Filter.neq);\nee.Filter.lt = function(name, value) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.lt, arguments);\n  return ee.ApiFunction._call(\"Filter.lessThan\", args.name, args.value);\n};\ngoog.exportProperty(ee.Filter, \"lt\", ee.Filter.lt);\nee.Filter.gte = function(name, value) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.gte, arguments);\n  return ee.Filter.lt(args.name, args.value).not();\n};\ngoog.exportProperty(ee.Filter, \"gte\", ee.Filter.gte);\nee.Filter.gt = function(name, value) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.gt, arguments);\n  return ee.ApiFunction._call(\"Filter.greaterThan\", args.name, args.value);\n};\ngoog.exportProperty(ee.Filter, \"gt\", ee.Filter.gt);\nee.Filter.lte = function(name, value) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.lte, arguments);\n  return ee.Filter.gt(args.name, args.value).not();\n};\ngoog.exportProperty(ee.Filter, \"lte\", ee.Filter.lte);\nee.Filter.and = function(var_args) {\n  var args = Array.prototype.slice.call(arguments);\n  return ee.ApiFunction._call(\"Filter.and\", args);\n};\ngoog.exportProperty(ee.Filter, \"and\", ee.Filter.and);\nee.Filter.or = function(var_args) {\n  var args = Array.prototype.slice.call(arguments);\n  return ee.ApiFunction._call(\"Filter.or\", args);\n};\ngoog.exportProperty(ee.Filter, \"or\", ee.Filter.or);\nee.Filter.date = function(start, opt_end) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.date, arguments), range = ee.ApiFunction._call(\"DateRange\", args.start, args.end);\n  return ee.ApiFunction._apply(\"Filter.dateRangeContains\", {leftValue:range, rightField:\"system:time_start\"});\n};\ngoog.exportProperty(ee.Filter, \"date\", ee.Filter.date);\nee.Filter.inList = function(opt_leftField, opt_rightValue, opt_rightField, opt_leftValue) {\n  var args = ee.arguments.extractFromFunction(ee.Filter.inList, arguments);\n  return ee.ApiFunction._apply(\"Filter.listContains\", {leftField:args.rightField, rightValue:args.leftValue, rightField:args.leftField, leftValue:args.rightValue});\n};\ngoog.exportProperty(ee.Filter, \"inList\", ee.Filter.inList);\nee.Filter.bounds = function(geometry, opt_errorMargin) {\n  return ee.ApiFunction._apply(\"Filter.intersects\", {leftField:\".all\", rightValue:ee.ApiFunction._call(\"Feature\", geometry), maxError:opt_errorMargin});\n};\ngoog.exportProperty(ee.Filter, \"bounds\", ee.Filter.bounds);\nee.Filter.prototype.name = function() {\n  return \"Filter\";\n};\nee.Filter.metadata = function(name, operator, value) {\n  operator = operator.toLowerCase();\n  var negated = !1;\n  goog.string.startsWith(operator, \"not_\") && (negated = !0, operator = operator.substring(4));\n  if (!(operator in ee.Filter.functionNames_)) {\n    throw Error(\"Unknown filtering operator: \" + operator);\n  }\n  var filter = ee.ApiFunction._call(\"Filter.\" + ee.Filter.functionNames_[operator], name, value);\n  return negated ? filter.not() : filter;\n};\ngoog.exportProperty(ee.Filter, \"metadata\", ee.Filter.metadata);\nee.Collection = function(func, args, opt_varName) {\n  ee.Element.call(this, func, args, opt_varName);\n  ee.Collection.initialize();\n};\ngoog.inherits(ee.Collection, ee.Element);\ngoog.exportSymbol(\"ee.Collection\", ee.Collection);\nee.Collection.initialized_ = !1;\nee.Collection.initialize = function() {\n  ee.Collection.initialized_ || (ee.ApiFunction.importApi(ee.Collection, \"Collection\", \"Collection\"), ee.ApiFunction.importApi(ee.Collection, \"AggregateFeatureCollection\", \"Collection\", \"aggregate_\"), ee.Collection.initialized_ = !0);\n};\nee.Collection.reset = function() {\n  ee.ApiFunction.clearApi(ee.Collection);\n  ee.Collection.initialized_ = !1;\n};\nee.Collection.prototype.filter = function(filter) {\n  filter = ee.arguments.extractFromFunction(ee.Collection.prototype.filter, arguments).filter;\n  if (!filter) {\n    throw Error(\"Empty filters.\");\n  }\n  return this.castInternal(ee.ApiFunction._call(\"Collection.filter\", this, filter));\n};\ngoog.exportProperty(ee.Collection.prototype, \"filter\", ee.Collection.prototype.filter);\nee.Collection.prototype.filterMetadata = function(name, operator, value) {\n  var args = ee.arguments.extractFromFunction(ee.Collection.prototype.filterMetadata, arguments);\n  return this.filter(ee.Filter.metadata(args.name, args.operator, args.value));\n};\ngoog.exportProperty(ee.Collection.prototype, \"filterMetadata\", ee.Collection.prototype.filterMetadata);\nee.Collection.prototype.filterBounds = function(geometry) {\n  return this.filter(ee.Filter.bounds(geometry));\n};\ngoog.exportProperty(ee.Collection.prototype, \"filterBounds\", ee.Collection.prototype.filterBounds);\nee.Collection.prototype.filterDate = function(start, opt_end) {\n  var args = ee.arguments.extractFromFunction(ee.Collection.prototype.filterDate, arguments);\n  return this.filter(ee.Filter.date(args.start, args.end));\n};\ngoog.exportProperty(ee.Collection.prototype, \"filterDate\", ee.Collection.prototype.filterDate);\nee.Collection.prototype.limit = function(max, opt_property, opt_ascending) {\n  var args = ee.arguments.extractFromFunction(ee.Collection.prototype.limit, arguments);\n  return this.castInternal(ee.ApiFunction._call(\"Collection.limit\", this, args.max, args.property, args.ascending));\n};\ngoog.exportProperty(ee.Collection.prototype, \"limit\", ee.Collection.prototype.limit);\nee.Collection.prototype.sort = function(property, opt_ascending) {\n  var args = ee.arguments.extractFromFunction(ee.Collection.prototype.sort, arguments);\n  return this.castInternal(ee.ApiFunction._call(\"Collection.limit\", this, void 0, args.property, args.ascending));\n};\ngoog.exportProperty(ee.Collection.prototype, \"sort\", ee.Collection.prototype.sort);\nee.Collection.prototype.name = function() {\n  return \"Collection\";\n};\nee.Collection.prototype.elementType = function() {\n  return ee.Element;\n};\nee.Collection.prototype.map = function(algorithm, opt_dropNulls) {\n  var elementType = this.elementType();\n  return this.castInternal(ee.ApiFunction._call(\"Collection.map\", this, function(e) {\n    return algorithm(new elementType(e));\n  }, opt_dropNulls));\n};\ngoog.exportProperty(ee.Collection.prototype, \"map\", ee.Collection.prototype.map);\nee.Collection.prototype.iterate = function(algorithm, opt_first) {\n  var first = void 0 !== opt_first ? opt_first : null, elementType = this.elementType();\n  return ee.ApiFunction._call(\"Collection.iterate\", this, function(e, p) {\n    return algorithm(new elementType(e), p);\n  }, first);\n};\ngoog.exportProperty(ee.Collection.prototype, \"iterate\", ee.Collection.prototype.iterate);\nee.Feature = function(geometry, opt_properties) {\n  if (!(this instanceof ee.Feature)) {\n    return ee.ComputedObject.construct(ee.Feature, arguments);\n  }\n  if (geometry instanceof ee.Feature) {\n    if (opt_properties) {\n      throw Error(\"Can't create Feature out of a Feature and properties.\");\n    }\n    return geometry;\n  }\n  if (2 < arguments.length) {\n    throw Error(\"The Feature constructor takes at most 2 arguments (\" + arguments.length + \" given)\");\n  }\n  ee.Feature.initialize();\n  if (geometry instanceof ee.Geometry || null === geometry) {\n    ee.Element.call(this, new ee.ApiFunction(\"Feature\"), {geometry:geometry, metadata:opt_properties || null});\n  } else {\n    if (geometry instanceof ee.ComputedObject) {\n      ee.Element.call(this, geometry.func, geometry.args, geometry.varName);\n    } else {\n      if (\"Feature\" == geometry.type) {\n        var properties = geometry.properties || {};\n        if (\"id\" in geometry) {\n          if (\"system:index\" in properties) {\n            throw Error('Can\\'t specify both \"id\" and \"system:index\".');\n          }\n          properties = module$contents$goog$object_clone(properties);\n          properties[\"system:index\"] = geometry.id;\n        }\n        ee.Element.call(this, new ee.ApiFunction(\"Feature\"), {geometry:new ee.Geometry(geometry.geometry), metadata:properties});\n      } else {\n        ee.Element.call(this, new ee.ApiFunction(\"Feature\"), {geometry:new ee.Geometry(geometry), metadata:opt_properties || null});\n      }\n    }\n  }\n};\ngoog.inherits(ee.Feature, ee.Element);\ngoog.exportSymbol(\"ee.Feature\", ee.Feature);\nee.Feature.initialized_ = !1;\nee.Feature.initialize = function() {\n  ee.Feature.initialized_ || (ee.ApiFunction.importApi(ee.Feature, \"Feature\", \"Feature\"), ee.Feature.initialized_ = !0);\n};\nee.Feature.reset = function() {\n  ee.ApiFunction.clearApi(ee.Feature);\n  ee.Feature.initialized_ = !1;\n};\nee.Feature.prototype.getInfo = function(opt_callback) {\n  return ee.Feature.superClass_.getInfo.call(this, opt_callback);\n};\ngoog.exportProperty(ee.Feature.prototype, \"getInfo\", ee.Feature.prototype.getInfo);\nee.Feature.prototype.getMap = function(opt_visParams, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.Feature.prototype.getMap, arguments);\n  return ee.ApiFunction._call(\"Collection\", [this]).getMap(args.visParams, args.callback);\n};\ngoog.exportProperty(ee.Feature.prototype, \"getMap\", ee.Feature.prototype.getMap);\nee.Feature.prototype.name = function() {\n  return \"Feature\";\n};\nee.data.images = {};\nee.data.images.applyTransformsToImage = function(taskConfig) {\n  var resultParams = {}, image = ee.data.images.applyCrsAndTransform(taskConfig.element, taskConfig);\n  image = ee.data.images.applySelectionAndScale(image, taskConfig, resultParams);\n  resultParams.element = image;\n  return resultParams;\n};\nee.data.images.applyTransformsToCollection = function(taskConfig) {\n  var resultParams = {}, collection = taskConfig.element.map(function(image) {\n    var projected = ee.data.images.applyCrsAndTransform(image, taskConfig);\n    return ee.data.images.applySelectionAndScale(projected, taskConfig, resultParams);\n  });\n  resultParams.element = collection;\n  return resultParams;\n};\nee.data.images.applySelectionAndScale = function(image, params, outParams) {\n  var clipParams = {}, dimensions_consumed = !1, SCALING_KEYS = [\"maxDimension\", \"width\", \"height\", \"scale\"];\n  module$contents$goog$object_forEach(params, function(value, key) {\n    if (null != value) {\n      switch(key) {\n        case \"dimensions\":\n          var dims = \"string\" === typeof value ? value.split(\"x\").map(Number) : Array.isArray(value) ? value : \"number\" === typeof value ? [value] : [];\n          if (1 === dims.length) {\n            clipParams.maxDimension = dims[0];\n          } else {\n            if (2 === dims.length) {\n              clipParams.width = dims[0], clipParams.height = dims[1];\n            } else {\n              throw Error(\"Invalid dimensions \" + value);\n            }\n          }\n          break;\n        case \"dimensions_consumed\":\n          dimensions_consumed = !0;\n          break;\n        case \"bbox\":\n          null != clipParams.geometry && console.warn(\"Multiple request parameters converted to region.\");\n          clipParams.geometry = ee.data.images.bboxToGeometry(value);\n          break;\n        case \"region\":\n          null != clipParams.geometry && console.warn(\"Multiple request parameters converted to region.\");\n          clipParams.geometry = ee.data.images.regionToGeometry(value);\n          break;\n        case \"scale\":\n          clipParams.scale = Number(value);\n          break;\n        default:\n          outParams[key] = value;\n      }\n    }\n  });\n  module$contents$goog$object_isEmpty(clipParams) || (clipParams.input = image, image = SCALING_KEYS.some(function(key) {\n    return key in clipParams;\n  }) || dimensions_consumed ? ee.ApiFunction._apply(\"Image.clipToBoundsAndScale\", clipParams) : ee.ApiFunction._apply(\"Image.clip\", clipParams));\n  return image;\n};\nee.data.images.bboxToGeometry = function(bbox) {\n  if (bbox instanceof ee.Geometry.Rectangle) {\n    return bbox;\n  }\n  var bboxArray = bbox;\n  if (\"string\" === typeof bbox) {\n    try {\n      bboxArray = JSON.parse(bbox);\n    } catch ($jscomp$unused$catch) {\n      bboxArray = bbox.split(/\\s*,\\s*/).map(Number);\n    }\n  }\n  if (Array.isArray(bboxArray)) {\n    if (bboxArray.some(isNaN)) {\n      throw Error(\"Invalid bbox `{bboxArray}`, please specify a list of numbers.\");\n    }\n    return new ee.Geometry.Rectangle(bboxArray, null, !1);\n  }\n  throw Error('Invalid bbox \"{bbox}\" type, must be of type Array<number>');\n};\nee.data.images.regionToGeometry = function(region) {\n  if (region instanceof ee.Geometry) {\n    return region;\n  }\n  var regionObject = region;\n  if (\"string\" === typeof region) {\n    try {\n      regionObject = JSON.parse(region);\n    } catch (e) {\n      throw Error('Region string \"' + region + '\" is not valid GeoJSON.');\n    }\n  }\n  if (Array.isArray(regionObject)) {\n    return new ee.Geometry.Polygon(regionObject, null, !1);\n  }\n  if (goog.isObject(regionObject)) {\n    return new ee.Geometry(regionObject, null, !1);\n  }\n  throw Error(\"Region {region} was not convertible to an ee.Geometry.\");\n};\nee.data.images.applyCrsAndTransform = function(image, params) {\n  var crs = params.crs || \"\", crsTransform = params.crsTransform || params.crs_transform;\n  null != crsTransform && (crsTransform = ee.data.images.maybeConvertCrsTransformToArray_(crsTransform));\n  if (!crs && !crsTransform) {\n    return image;\n  }\n  if (crsTransform && !crs) {\n    throw Error('Must specify \"crs\" if \"crsTransform\" is specified.');\n  }\n  if (crsTransform) {\n    if (image = ee.ApiFunction._apply(\"Image.reproject\", {image:image, crs:crs, crsTransform:crsTransform}), null != params.dimensions && null == params.scale && null == params.region) {\n      var dimensions = params.dimensions;\n      \"string\" === typeof dimensions && (dimensions = dimensions.split(\"x\").map(Number));\n      if (2 === dimensions.length) {\n        delete params.dimensions;\n        params.dimensions_consumed = !0;\n        var projection = (new ee.ApiFunction(\"Projection\")).call(crs, crsTransform);\n        params.region = new ee.Geometry.Rectangle([0, 0, dimensions[0], dimensions[1]], projection, !1);\n      }\n    }\n  } else {\n    image = ee.ApiFunction._apply(\"Image.setDefaultProjection\", {image:image, crs:crs, crsTransform:[1, 0, 0, 0, -1, 0]});\n  }\n  return image;\n};\nee.data.images.maybeConvertCrsTransformToArray_ = function(crsTransform) {\n  var transformArray = crsTransform;\n  if (\"string\" === typeof transformArray) {\n    try {\n      transformArray = JSON.parse(transformArray);\n    } catch (e) {\n    }\n  }\n  if (Array.isArray(transformArray)) {\n    if (6 === transformArray.length && module$contents$goog$array_every(transformArray, function(x) {\n      return \"number\" === typeof x;\n    })) {\n      return transformArray;\n    }\n    throw Error(\"Invalid argument, crs transform must be a list of 6 numbers.\");\n  }\n  throw Error(\"Invalid argument, crs transform was not a string or array.\");\n};\nee.data.images.applyVisualization = function(image, params) {\n  var request = {}, visParams = ee.data.images.extractVisParams(params, request);\n  module$contents$goog$object_isEmpty(visParams) || (visParams.image = image, image = ee.ApiFunction._apply(\"Image.visualize\", visParams));\n  request.image = image;\n  return request;\n};\nee.data.images.extractVisParams = function(params, outParams) {\n  var keysToExtract = \"bands gain bias min max gamma palette opacity forceRgbOutput\".split(\" \"), visParams = {};\n  module$contents$goog$object_forEach(params, function(value, key) {\n    module$contents$goog$array_contains(keysToExtract, key) ? visParams[key] = value : outParams[key] = value;\n  });\n  return visParams;\n};\nee.data.images.buildDownloadIdImage = function(image, params) {\n  params = Object.assign({}, params);\n  var extractAndValidateTransforms = function(obj) {\n    var extracted = {};\n    [\"crs\", \"crs_transform\", \"dimensions\", \"region\"].forEach(function(key) {\n      key in obj && (extracted[key] = obj[key]);\n    });\n    null != obj.scale && null == obj.dimensions && (extracted.scale = obj.scale);\n    return extracted;\n  }, buildImagePerBand = function(band) {\n    var bandId = band.id;\n    if (void 0 === bandId) {\n      throw Error(\"Each band dictionary must have an id.\");\n    }\n    var bandImage = image.select(bandId), copyParams = extractAndValidateTransforms(params), bandParams = extractAndValidateTransforms(band);\n    bandParams = extractAndValidateTransforms(Object.assign(copyParams, bandParams));\n    bandImage = ee.data.images.applyCrsAndTransform(bandImage, bandParams);\n    return bandImage = ee.data.images.applySelectionAndScale(bandImage, bandParams, {});\n  };\n  if (\"ZIPPED_GEO_TIFF_PER_BAND\" === params.format && params.bands && params.bands.length) {\n    var images = params.bands.map(buildImagePerBand);\n    image = images.reduce(function(result, bandImage) {\n      return ee.ApiFunction._call(\"Image.addBands\", result, bandImage, null, !0);\n    }, images.shift());\n  } else {\n    var copyParams = extractAndValidateTransforms(params);\n    image = ee.data.images.applyCrsAndTransform(image, copyParams);\n    image = ee.data.images.applySelectionAndScale(image, copyParams, {});\n  }\n  return image;\n};\nee.Image = function(opt_args) {\n  if (!(this instanceof ee.Image)) {\n    return ee.ComputedObject.construct(ee.Image, arguments);\n  }\n  if (opt_args instanceof ee.Image) {\n    return opt_args;\n  }\n  ee.Image.initialize();\n  var argCount = arguments.length;\n  if (0 == argCount || 1 == argCount && void 0 === opt_args) {\n    ee.Element.call(this, new ee.ApiFunction(\"Image.mask\"), {image:new ee.Image(0), mask:new ee.Image(0)});\n  } else {\n    if (1 == argCount) {\n      if (ee.Types.isNumber(opt_args)) {\n        ee.Element.call(this, new ee.ApiFunction(\"Image.constant\"), {value:opt_args});\n      } else {\n        if (ee.Types.isString(opt_args)) {\n          ee.Element.call(this, new ee.ApiFunction(\"Image.load\"), {id:opt_args});\n        } else {\n          if (Array.isArray(opt_args)) {\n            return ee.Image.combine_(module$contents$goog$array_map(opt_args, function(elem) {\n              return new ee.Image(elem);\n            }));\n          }\n          if (opt_args instanceof ee.ComputedObject) {\n            \"Array\" == opt_args.name() ? ee.Element.call(this, new ee.ApiFunction(\"Image.constant\"), {value:opt_args}) : ee.Element.call(this, opt_args.func, opt_args.args, opt_args.varName);\n          } else {\n            throw Error(\"Unrecognized argument type to convert to an Image: \" + opt_args);\n          }\n        }\n      }\n    } else {\n      if (2 == argCount) {\n        var id = arguments[0], version = arguments[1];\n        if (ee.Types.isString(id) && ee.Types.isNumber(version)) {\n          ee.Element.call(this, new ee.ApiFunction(\"Image.load\"), {id:id, version:version});\n        } else {\n          throw Error(\"Unrecognized argument types to convert to an Image: \" + arguments);\n        }\n      } else {\n        throw Error(\"The Image constructor takes at most 2 arguments (\" + argCount + \" given)\");\n      }\n    }\n  }\n};\ngoog.inherits(ee.Image, ee.Element);\ngoog.exportSymbol(\"ee.Image\", ee.Image);\nee.Image.initialized_ = !1;\nee.Image.initialize = function() {\n  ee.Image.initialized_ || (ee.ApiFunction.importApi(ee.Image, \"Image\", \"Image\"), ee.Image.initialized_ = !0);\n};\nee.Image.reset = function() {\n  ee.ApiFunction.clearApi(ee.Image);\n  ee.Image.initialized_ = !1;\n};\nee.Image.prototype.getInfo = function(opt_callback) {\n  return ee.Image.superClass_.getInfo.call(this, opt_callback);\n};\ngoog.exportProperty(ee.Image.prototype, \"getInfo\", ee.Image.prototype.getInfo);\nee.Image.prototype.getMap = function(opt_visParams, opt_callback) {\n  var $jscomp$this = this, args = ee.arguments.extractFromFunction(ee.Image.prototype.getMap, arguments), request = ee.data.images.applyVisualization(this, args.visParams);\n  if (args.callback) {\n    var callback = args.callback;\n    ee.data.getMapId(request, function(data, error) {\n      var mapId = data ? Object.assign(data, {image:$jscomp$this}) : void 0;\n      callback(mapId, error);\n    });\n  } else {\n    var response = ee.data.getMapId(request);\n    response.image = this;\n    return response;\n  }\n};\ngoog.exportProperty(ee.Image.prototype, \"getMap\", ee.Image.prototype.getMap);\nee.Image.prototype.getDownloadURL = function(params, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.Image.prototype.getDownloadURL, arguments), request = args.params ? module$contents$goog$object_clone(args.params) : {};\n  request.image = this;\n  if (args.callback) {\n    var callback = args.callback;\n    ee.data.getDownloadId(request, function(downloadId, error) {\n      downloadId ? callback(ee.data.makeDownloadUrl(downloadId)) : callback(null, error);\n    });\n  } else {\n    return ee.data.makeDownloadUrl(ee.data.getDownloadId(request));\n  }\n};\ngoog.exportProperty(ee.Image.prototype, \"getDownloadURL\", ee.Image.prototype.getDownloadURL);\nee.Image.prototype.getThumbId = function(params, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.Image.prototype.getDownloadURL, arguments), request = args.params ? module$contents$goog$object_clone(args.params) : {}, extra = {}, image = ee.data.images.applyCrsAndTransform(this, request);\n  image = ee.data.images.applySelectionAndScale(image, request, extra);\n  request = ee.data.images.applyVisualization(image, extra);\n  return args.callback ? (ee.data.getThumbId(request, args.callback), null) : ee.data.getThumbId(request);\n};\ngoog.exportProperty(ee.Image.prototype, \"getThumbId\", ee.Image.prototype.getThumbId);\nee.Image.prototype.getThumbURL = function(params, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.Image.prototype.getThumbURL, arguments);\n  if (args.callback) {\n    this.getThumbId(args.params, function(thumbId, opt_error) {\n      var thumbUrl = \"\";\n      if (void 0 === opt_error) {\n        try {\n          thumbUrl = ee.data.makeThumbUrl(thumbId);\n        } catch (e) {\n          opt_error = String(e.message);\n        }\n      }\n      args.callback(thumbUrl, opt_error);\n    });\n  } else {\n    return ee.data.makeThumbUrl(this.getThumbId(args.params));\n  }\n};\ngoog.exportProperty(ee.Image.prototype, \"getThumbURL\", ee.Image.prototype.getThumbURL);\nee.Image.rgb = function(r, g, b) {\n  var args = ee.arguments.extractFromFunction(ee.Image.rgb, arguments);\n  return ee.Image.combine_([args.r, args.g, args.b], [\"vis-red\", \"vis-green\", \"vis-blue\"]);\n};\ngoog.exportProperty(ee.Image, \"rgb\", ee.Image.rgb);\nee.Image.cat = function(var_args) {\n  var args = Array.prototype.slice.call(arguments);\n  return ee.Image.combine_(args, null);\n};\ngoog.exportProperty(ee.Image, \"cat\", ee.Image.cat);\nee.Image.combine_ = function(images, opt_names) {\n  if (0 == images.length) {\n    return ee.ApiFunction._call(\"Image.constant\", []);\n  }\n  for (var result = new ee.Image(images[0]), i = 1; i < images.length; i++) {\n    result = ee.ApiFunction._call(\"Image.addBands\", result, images[i]);\n  }\n  opt_names && (result = result.select([\".*\"], opt_names));\n  return result;\n};\nee.Image.prototype.select = function(var_args) {\n  var args = Array.prototype.slice.call(arguments), algorithmArgs = {input:this, bandSelectors:args[0] || []};\n  if (2 < args.length || ee.Types.isString(args[0]) || ee.Types.isNumber(args[0])) {\n    for (var i = 0; i < args.length; i++) {\n      if (!(ee.Types.isString(args[i]) || ee.Types.isNumber(args[i]) || args[i] instanceof ee.ComputedObject)) {\n        throw Error(\"Illegal argument to select(): \" + args[i]);\n      }\n    }\n    algorithmArgs.bandSelectors = args;\n  } else {\n    args[1] && (algorithmArgs.newNames = args[1]);\n  }\n  return ee.ApiFunction._apply(\"Image.select\", algorithmArgs);\n};\ngoog.exportProperty(ee.Image.prototype, \"select\", ee.Image.prototype.select);\nee.Image.prototype.expression = function(expression, opt_map) {\n  var originalArgs = ee.arguments.extractFromFunction(ee.Image.prototype.expression, arguments), vars = [\"DEFAULT_EXPRESSION_IMAGE\"], eeArgs = {DEFAULT_EXPRESSION_IMAGE:this};\n  if (originalArgs.map) {\n    var map = originalArgs.map, name$jscomp$0;\n    for (name$jscomp$0 in map) {\n      vars.push(name$jscomp$0), eeArgs[name$jscomp$0] = new ee.Image(map[name$jscomp$0]);\n    }\n  }\n  var body = ee.ApiFunction._call(\"Image.parseExpression\", originalArgs.expression, \"DEFAULT_EXPRESSION_IMAGE\", vars), func = new ee.Function();\n  func.encode = function(encoder) {\n    return body.encode(encoder);\n  };\n  func.encodeCloudInvocation = function(serializer, args) {\n    return ee.rpc_node.functionByReference(serializer.makeReference(body), args);\n  };\n  func.getSignature = function() {\n    return {name:\"\", args:module$contents$goog$array_map(vars, function(name) {\n      return {name:name, type:\"Image\", optional:!1};\n    }, this), returns:\"Image\"};\n  };\n  return func.apply(eeArgs);\n};\ngoog.exportProperty(ee.Image.prototype, \"expression\", ee.Image.prototype.expression);\nee.Image.prototype.clip = function(geometry) {\n  try {\n    geometry = new ee.Geometry(geometry);\n  } catch (e) {\n  }\n  return ee.ApiFunction._call(\"Image.clip\", this, geometry);\n};\ngoog.exportProperty(ee.Image.prototype, \"clip\", ee.Image.prototype.clip);\nee.Image.prototype.rename = function(var_args) {\n  var names = 1 != arguments.length || ee.Types.isString(arguments[0]) ? Array.from(arguments) : arguments[0];\n  return ee.ApiFunction._call(\"Image.rename\", this, names);\n};\ngoog.exportProperty(ee.Image.prototype, \"rename\", ee.Image.prototype.rename);\nee.Image.prototype.name = function() {\n  return \"Image\";\n};\nee.List = function(list) {\n  if (this instanceof ee.List) {\n    if (1 < arguments.length) {\n      throw Error(\"ee.List() only accepts 1 argument.\");\n    }\n    if (list instanceof ee.List) {\n      return list;\n    }\n  } else {\n    return ee.ComputedObject.construct(ee.List, arguments);\n  }\n  ee.List.initialize();\n  if (Array.isArray(list)) {\n    ee.ComputedObject.call(this, null, null), this.list_ = list;\n  } else {\n    if (list instanceof ee.ComputedObject) {\n      ee.ComputedObject.call(this, list.func, list.args, list.varName), this.list_ = null;\n    } else {\n      throw Error(\"Invalid argument specified for ee.List(): \" + list);\n    }\n  }\n};\ngoog.inherits(ee.List, ee.ComputedObject);\ngoog.exportSymbol(\"ee.List\", ee.List);\nee.List.initialized_ = !1;\nee.List.initialize = function() {\n  ee.List.initialized_ || (ee.ApiFunction.importApi(ee.List, \"List\", \"List\"), ee.List.initialized_ = !0);\n};\nee.List.reset = function() {\n  ee.ApiFunction.clearApi(ee.List);\n  ee.List.initialized_ = !1;\n};\nee.List.prototype.encode = function(encoder) {\n  return Array.isArray(this.list_) ? module$contents$goog$array_map(this.list_, function(elem) {\n    return encoder(elem);\n  }) : ee.List.superClass_.encode.call(this, encoder);\n};\nee.List.prototype.encodeCloudValue = function(serializer) {\n  return Array.isArray(this.list_) ? ee.rpc_node.reference(serializer.makeReference(this.list_)) : ee.List.superClass_.encodeCloudValue.call(this, serializer);\n};\nee.List.prototype.name = function() {\n  return \"List\";\n};\nee.FeatureCollection = function(args, opt_column) {\n  if (!(this instanceof ee.FeatureCollection)) {\n    return ee.ComputedObject.construct(ee.FeatureCollection, arguments);\n  }\n  if (args instanceof ee.FeatureCollection) {\n    return args;\n  }\n  if (2 < arguments.length) {\n    throw Error(\"The FeatureCollection constructor takes at most 2 arguments (\" + arguments.length + \" given)\");\n  }\n  ee.FeatureCollection.initialize();\n  args instanceof ee.Geometry && (args = new ee.Feature(args));\n  args instanceof ee.Feature && (args = [args]);\n  if (ee.Types.isString(args)) {\n    var actualArgs = {tableId:args};\n    opt_column && (actualArgs.geometryColumn = opt_column);\n    ee.Collection.call(this, new ee.ApiFunction(\"Collection.loadTable\"), actualArgs);\n  } else {\n    if (Array.isArray(args)) {\n      ee.Collection.call(this, new ee.ApiFunction(\"Collection\"), {features:module$contents$goog$array_map(args, function(elem) {\n        return new ee.Feature(elem);\n      })});\n    } else {\n      if (args instanceof ee.List) {\n        ee.Collection.call(this, new ee.ApiFunction(\"Collection\"), {features:args});\n      } else {\n        if (args && \"object\" === typeof args && \"FeatureCollection\" === args.type) {\n          ee.Collection.call(this, new ee.ApiFunction(\"Collection\"), {features:args.features.map(function(f) {\n            return new ee.Feature(f);\n          })});\n        } else {\n          if (args instanceof ee.ComputedObject) {\n            ee.Collection.call(this, args.func, args.args, args.varName);\n          } else {\n            throw Error(\"Unrecognized argument type to convert to a FeatureCollection: \" + args);\n          }\n        }\n      }\n    }\n  }\n};\ngoog.inherits(ee.FeatureCollection, ee.Collection);\ngoog.exportSymbol(\"ee.FeatureCollection\", ee.FeatureCollection);\nee.FeatureCollection.initialized_ = !1;\nee.FeatureCollection.initialize = function() {\n  ee.FeatureCollection.initialized_ || (ee.ApiFunction.importApi(ee.FeatureCollection, \"FeatureCollection\", \"FeatureCollection\"), ee.FeatureCollection.initialized_ = !0);\n};\nee.FeatureCollection.reset = function() {\n  ee.ApiFunction.clearApi(ee.FeatureCollection);\n  ee.FeatureCollection.initialized_ = !1;\n};\nee.FeatureCollection.prototype.getMap = function(opt_visParams, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.FeatureCollection.prototype.getMap, arguments), painted = ee.ApiFunction._apply(\"Collection.draw\", {collection:this, color:(args.visParams || {}).color || \"000000\"});\n  if (args.callback) {\n    painted.getMap(void 0, args.callback);\n  } else {\n    return painted.getMap();\n  }\n};\ngoog.exportProperty(ee.FeatureCollection.prototype, \"getMap\", ee.FeatureCollection.prototype.getMap);\nee.FeatureCollection.prototype.getInfo = function(opt_callback) {\n  return ee.FeatureCollection.superClass_.getInfo.call(this, opt_callback);\n};\ngoog.exportProperty(ee.FeatureCollection.prototype, \"getInfo\", ee.FeatureCollection.prototype.getInfo);\nee.FeatureCollection.prototype.getDownloadURL = function(opt_format, opt_selectors, opt_filename, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.FeatureCollection.prototype.getDownloadURL, arguments), request = {table:this};\n  args.format && (request.format = args.format.toUpperCase());\n  args.filename && (request.filename = args.filename);\n  args.selectors && (request.selectors = args.selectors);\n  if (args.callback) {\n    ee.data.getTableDownloadId(request, function(downloadId, error) {\n      downloadId ? args.callback(ee.data.makeTableDownloadUrl(downloadId)) : args.callback(null, error);\n    });\n  } else {\n    return ee.data.makeTableDownloadUrl(ee.data.getTableDownloadId(request));\n  }\n};\ngoog.exportProperty(ee.FeatureCollection.prototype, \"getDownloadURL\", ee.FeatureCollection.prototype.getDownloadURL);\nee.FeatureCollection.prototype.select = function(propertySelectors, opt_newProperties, opt_retainGeometry) {\n  if (ee.Types.isString(propertySelectors)) {\n    var varargs = Array.prototype.slice.call(arguments);\n    return this.map(function(feature) {\n      return feature.select(varargs);\n    });\n  }\n  var args = ee.arguments.extractFromFunction(ee.FeatureCollection.prototype.select, arguments);\n  return this.map(function(feature) {\n    return feature.select(args);\n  });\n};\ngoog.exportProperty(ee.FeatureCollection.prototype, \"select\", ee.FeatureCollection.prototype.select);\nee.FeatureCollection.prototype.name = function() {\n  return \"FeatureCollection\";\n};\nee.FeatureCollection.prototype.elementType = function() {\n  return ee.Feature;\n};\nee.ImageCollection = function(args) {\n  if (!(this instanceof ee.ImageCollection)) {\n    return ee.ComputedObject.construct(ee.ImageCollection, arguments);\n  }\n  if (args instanceof ee.ImageCollection) {\n    return args;\n  }\n  if (1 != arguments.length) {\n    throw Error(\"The ImageCollection constructor takes exactly 1 argument (\" + arguments.length + \" given)\");\n  }\n  ee.ImageCollection.initialize();\n  args instanceof ee.Image && (args = [args]);\n  if (ee.Types.isString(args)) {\n    ee.Collection.call(this, new ee.ApiFunction(\"ImageCollection.load\"), {id:args});\n  } else {\n    if (Array.isArray(args)) {\n      ee.Collection.call(this, new ee.ApiFunction(\"ImageCollection.fromImages\"), {images:module$contents$goog$array_map(args, function(elem) {\n        return new ee.Image(elem);\n      })});\n    } else {\n      if (args instanceof ee.List) {\n        ee.Collection.call(this, new ee.ApiFunction(\"ImageCollection.fromImages\"), {images:args});\n      } else {\n        if (args instanceof ee.ComputedObject) {\n          ee.Collection.call(this, args.func, args.args, args.varName);\n        } else {\n          throw Error(\"Unrecognized argument type to convert to an ImageCollection: \" + args);\n        }\n      }\n    }\n  }\n};\ngoog.inherits(ee.ImageCollection, ee.Collection);\ngoog.exportSymbol(\"ee.ImageCollection\", ee.ImageCollection);\nee.ImageCollection.initialized_ = !1;\nee.ImageCollection.initialize = function() {\n  ee.ImageCollection.initialized_ || (ee.ApiFunction.importApi(ee.ImageCollection, \"ImageCollection\", \"ImageCollection\"), ee.ApiFunction.importApi(ee.ImageCollection, \"reduce\", \"ImageCollection\"), ee.ImageCollection.initialized_ = !0);\n};\nee.ImageCollection.reset = function() {\n  ee.ApiFunction.clearApi(ee.ImageCollection);\n  ee.ImageCollection.initialized_ = !1;\n};\nee.ImageCollection.prototype.getFilmstripThumbURL = function(params, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.ImageCollection.prototype.getFilmstripThumbURL, arguments);\n  return ee.ImageCollection.prototype.getThumbURL_(this, args, [\"png\", \"jpg\", \"jpeg\"], ee.ImageCollection.ThumbTypes.FILMSTRIP, opt_callback);\n};\ngoog.exportProperty(ee.ImageCollection.prototype, \"getFilmstripThumbURL\", ee.ImageCollection.prototype.getFilmstripThumbURL);\nee.ImageCollection.prototype.getVideoThumbURL = function(params, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.ImageCollection.prototype.getVideoThumbURL, arguments);\n  return ee.ImageCollection.prototype.getThumbURL_(this, args, [\"gif\"], ee.ImageCollection.ThumbTypes.VIDEO, opt_callback);\n};\ngoog.exportProperty(ee.ImageCollection.prototype, \"getVideoThumbURL\", ee.ImageCollection.prototype.getVideoThumbURL);\nee.ImageCollection.ThumbTypes = {FILMSTRIP:\"filmstrip\", VIDEO:\"video\", IMAGE:\"image\",};\nee.ImageCollection.prototype.getThumbURL_ = function(collection, args, validFormats, opt_thumbType, opt_callback) {\n  var extraParams = {}, clippedCollection = collection.map(function(image) {\n    var projected = ee.data.images.applyCrsAndTransform(image, args.params);\n    return ee.data.images.applySelectionAndScale(projected, args.params, extraParams);\n  }), request = {}, visParams = ee.data.images.extractVisParams(extraParams, request);\n  request.imageCollection = clippedCollection.map(function(image) {\n    visParams.image = image;\n    return ee.ApiFunction._apply(\"Image.visualize\", visParams);\n  });\n  null != args.params.dimensions && (request.dimensions = args.params.dimensions);\n  if (request.format) {\n    if (!module$contents$goog$array_some(validFormats, function(format) {\n      return goog.string.caseInsensitiveEquals(format, request.format);\n    })) {\n      throw Error(\"Invalid format specified.\");\n    }\n  } else {\n    request.format = validFormats[0];\n  }\n  var getThumbId = ee.data.getThumbId;\n  switch(opt_thumbType) {\n    case ee.ImageCollection.ThumbTypes.VIDEO:\n      getThumbId = ee.data.getVideoThumbId;\n      break;\n    case ee.ImageCollection.ThumbTypes.FILMSTRIP:\n      getThumbId = ee.data.getFilmstripThumbId;\n  }\n  if (args.callback) {\n    getThumbId(request, function(thumbId, opt_error) {\n      var thumbUrl = \"\";\n      if (void 0 === opt_error) {\n        try {\n          thumbUrl = ee.data.makeThumbUrl(thumbId);\n        } catch (e) {\n          opt_error = String(e.message);\n        }\n      }\n      args.callback(thumbUrl, opt_error);\n    });\n  } else {\n    return ee.data.makeThumbUrl(getThumbId(request));\n  }\n};\nee.ImageCollection.prototype.getMap = function(opt_visParams, opt_callback) {\n  var args = ee.arguments.extractFromFunction(ee.ImageCollection.prototype.getMap, arguments), mosaic = ee.ApiFunction._call(\"ImageCollection.mosaic\", this);\n  if (args.callback) {\n    mosaic.getMap(args.visParams, args.callback);\n  } else {\n    return mosaic.getMap(args.visParams);\n  }\n};\ngoog.exportProperty(ee.ImageCollection.prototype, \"getMap\", ee.ImageCollection.prototype.getMap);\nee.ImageCollection.prototype.getInfo = function(opt_callback) {\n  return ee.ImageCollection.superClass_.getInfo.call(this, opt_callback);\n};\ngoog.exportProperty(ee.ImageCollection.prototype, \"getInfo\", ee.ImageCollection.prototype.getInfo);\nee.ImageCollection.prototype.select = function(selectors, opt_names) {\n  var varargs = arguments;\n  return this.map(function(obj) {\n    return obj.select.apply(obj, varargs);\n  });\n};\ngoog.exportProperty(ee.ImageCollection.prototype, \"select\", ee.ImageCollection.prototype.select);\nee.ImageCollection.prototype.first = function() {\n  return new ee.Image(ee.ApiFunction._call(\"Collection.first\", this));\n};\ngoog.exportProperty(ee.ImageCollection.prototype, \"first\", ee.ImageCollection.prototype.first);\nee.ImageCollection.prototype.name = function() {\n  return \"ImageCollection\";\n};\nee.ImageCollection.prototype.elementType = function() {\n  return ee.Image;\n};\nee.batch = {};\nvar module$contents$ee$batch_Export = {image:{}, map:{}, table:{}, video:{}, videoMap:{}, classifier:{}}, module$contents$ee$batch_ExportTask = function(config) {\n  this.config_ = config;\n  this.id = null;\n};\nmodule$contents$ee$batch_ExportTask.create = function(exportArgs) {\n  var config = {element:module$contents$ee$batch_Export.extractElement(exportArgs)};\n  Object.assign(config, exportArgs);\n  config = module$contents$goog$object_filter(config, function(x) {\n    return null != x;\n  });\n  return new module$contents$ee$batch_ExportTask(config);\n};\nmodule$contents$ee$batch_ExportTask.prototype.start = function(opt_success, opt_error) {\n  var $jscomp$this = this;\n  goog.asserts.assert(this.config_, \"Task config must be specified for tasks to be started.\");\n  if (opt_success) {\n    var startProcessing = function() {\n      goog.asserts.assertString($jscomp$this.id);\n      ee.data.startProcessing($jscomp$this.id, $jscomp$this.config_, function(_, error) {\n        error ? opt_error(error) : opt_success();\n      });\n    };\n    this.id ? startProcessing() : ee.data.newTaskId(1, function(ids) {\n      var id = ids && ids[0];\n      id ? ($jscomp$this.id = id, startProcessing()) : opt_error(\"Failed to obtain task ID.\");\n    });\n  } else {\n    this.id = this.id || ee.data.newTaskId(1)[0], goog.asserts.assertString(this.id, \"Failed to obtain task ID.\"), ee.data.startProcessing(this.id, this.config_);\n  }\n};\ngoog.exportProperty(module$contents$ee$batch_ExportTask.prototype, \"start\", module$contents$ee$batch_ExportTask.prototype.start);\nmodule$contents$ee$batch_Export.image.toAsset = function(image, opt_description, opt_assetId, opt_pyramidingPolicy, opt_dimensions, opt_region, opt_scale, opt_crs, opt_crsTransform, opt_maxPixels, opt_shardSize) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.image.toAsset, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.ASSET, ee.data.ExportType.IMAGE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.image.toAsset\", module$contents$ee$batch_Export.image.toAsset);\nmodule$contents$ee$batch_Export.image.toCloudStorage = function(image, opt_description, opt_bucket, opt_fileNamePrefix, opt_dimensions, opt_region, opt_scale, opt_crs, opt_crsTransform, opt_maxPixels, opt_shardSize, opt_fileDimensions, opt_skipEmptyTiles, opt_fileFormat, opt_formatOptions) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.image.toCloudStorage, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.GCS, ee.data.ExportType.IMAGE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.image.toCloudStorage\", module$contents$ee$batch_Export.image.toCloudStorage);\nmodule$contents$ee$batch_Export.image.toDrive = function(image, opt_description, opt_folder, opt_fileNamePrefix, opt_dimensions, opt_region, opt_scale, opt_crs, opt_crsTransform, opt_maxPixels, opt_shardSize, opt_fileDimensions, opt_skipEmptyTiles, opt_fileFormat, opt_formatOptions) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.image.toDrive, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.DRIVE, ee.data.ExportType.IMAGE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.image.toDrive\", module$contents$ee$batch_Export.image.toDrive);\nmodule$contents$ee$batch_Export.map.toCloudStorage = function(image, opt_description, opt_bucket, opt_fileFormat, opt_path, opt_writePublicTiles, opt_scale, opt_maxZoom, opt_minZoom, opt_region, opt_skipEmptyTiles, opt_mapsApiKey, opt_bucketCorsUris) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.map.toCloudStorage, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.GCS, ee.data.ExportType.MAP);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.map.toCloudStorage\", module$contents$ee$batch_Export.map.toCloudStorage);\nmodule$contents$ee$batch_Export.table.toCloudStorage = function(collection, opt_description, opt_bucket, opt_fileNamePrefix, opt_fileFormat, opt_selectors, opt_maxVertices) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.table.toCloudStorage, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.GCS, ee.data.ExportType.TABLE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.table.toCloudStorage\", module$contents$ee$batch_Export.table.toCloudStorage);\nmodule$contents$ee$batch_Export.table.toDrive = function(collection, opt_description, opt_folder, opt_fileNamePrefix, opt_fileFormat, opt_selectors, opt_maxVertices) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.table.toDrive, arguments);\n  clientConfig.type = ee.data.ExportType.TABLE;\n  var serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.DRIVE, ee.data.ExportType.TABLE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.table.toDrive\", module$contents$ee$batch_Export.table.toDrive);\nmodule$contents$ee$batch_Export.table.toAsset = function(collection, opt_description, opt_assetId, opt_maxVertices) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.table.toAsset, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.ASSET, ee.data.ExportType.TABLE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.table.toAsset\", module$contents$ee$batch_Export.table.toAsset);\nmodule$contents$ee$batch_Export.table.toFeatureView = function(collection, opt_description, opt_assetId) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.table.toFeatureView, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.FEATURE_VIEW, ee.data.ExportType.TABLE);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.table.toFeatureView\", module$contents$ee$batch_Export.table.toFeatureView);\nmodule$contents$ee$batch_Export.video.toCloudStorage = function(collection, opt_description, opt_bucket, opt_fileNamePrefix, opt_framesPerSecond, opt_dimensions, opt_region, opt_scale, opt_crs, opt_crsTransform, opt_maxPixels, opt_maxFrames) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.video.toCloudStorage, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.GCS, ee.data.ExportType.VIDEO);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.video.toCloudStorage\", module$contents$ee$batch_Export.video.toCloudStorage);\nmodule$contents$ee$batch_Export.video.toDrive = function(collection, opt_description, opt_folder, opt_fileNamePrefix, opt_framesPerSecond, opt_dimensions, opt_region, opt_scale, opt_crs, opt_crsTransform, opt_maxPixels, opt_maxFrames) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.video.toDrive, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.DRIVE, ee.data.ExportType.VIDEO);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.video.toDrive\", module$contents$ee$batch_Export.video.toDrive);\nmodule$contents$ee$batch_Export.videoMap.toCloudStorage = function(collection, opt_description, opt_bucket, opt_fileNamePrefix, opt_framesPerSecond, opt_writePublicTiles, opt_minZoom, opt_maxZoom, opt_scale, opt_region, opt_skipEmptyTiles, opt_minTimeMachineZoomSubset, opt_maxTimeMachineZoomSubset, opt_tileWidth, opt_tileHeight, opt_tileStride, opt_videoFormat, opt_version, opt_mapsApiKey, opt_bucketCorsUris) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.videoMap.toCloudStorage, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.GCS, ee.data.ExportType.VIDEO_MAP);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.videoMap.toCloudStorage\", module$contents$ee$batch_Export.videoMap.toCloudStorage);\nmodule$contents$ee$batch_Export.classifier.toAsset = function(classifier, opt_description, opt_assetId) {\n  var clientConfig = ee.arguments.extractFromFunction(module$contents$ee$batch_Export.classifier.toAsset, arguments), serverConfig = module$contents$ee$batch_Export.convertToServerParams(clientConfig, ee.data.ExportDestination.ASSET, ee.data.ExportType.CLASSIFIER);\n  return module$contents$ee$batch_ExportTask.create(serverConfig);\n};\ngoog.exportSymbol(\"module$contents$ee$batch_Export.classifier.toAsset\", module$contents$ee$batch_Export.classifier.toAsset);\nmodule$contents$ee$batch_Export.serializeRegion = function(region) {\n  if (region instanceof ee.Geometry) {\n    region = region.toGeoJSON();\n  } else {\n    if (\"string\" === typeof region) {\n      try {\n        region = goog.asserts.assertObject(JSON.parse(region));\n      } catch (x) {\n        throw Error(\"Invalid format for region property. Region must be GeoJSON LinearRing or Polygon specified as actual coordinates or serialized as a string. See Export documentation.\");\n      }\n    }\n  }\n  if (!(goog.isObject(region) && \"type\" in region)) {\n    try {\n      new ee.Geometry.LineString(region);\n    } catch (e) {\n      try {\n        new ee.Geometry.Polygon(region);\n      } catch (e2) {\n        throw Error(\"Invalid format for region property. Region must be GeoJSON LinearRing or Polygon specified as actual coordinates or serialized as a string. See Export documentation.\");\n      }\n    }\n  }\n  return JSON.stringify(region);\n};\nmodule$contents$ee$batch_Export.resolveRegionParam = function(params) {\n  params = module$contents$goog$object_clone(params);\n  if (!params.region) {\n    return goog.Promise.resolve(params);\n  }\n  var region = params.region;\n  if (region instanceof ee.ComputedObject) {\n    return region instanceof ee.Element && (region = region.geometry()), new goog.Promise(function(resolve, reject) {\n      region.getInfo(function(regionInfo, error) {\n        error ? reject(error) : (params.region = params.type === ee.data.ExportType.IMAGE ? new ee.Geometry(regionInfo) : module$contents$ee$batch_Export.serializeRegion(regionInfo), resolve(params));\n      });\n    });\n  }\n  params.region = params.type === ee.data.ExportType.IMAGE ? new ee.Geometry(region) : module$contents$ee$batch_Export.serializeRegion(region);\n  return goog.Promise.resolve(params);\n};\nmodule$contents$ee$batch_Export.extractElement = function(exportArgs) {\n  var isInArgs = function(key) {\n    return key in exportArgs;\n  }, eeElementKey = module$contents$ee$batch_Export.EE_ELEMENT_KEYS.find(isInArgs);\n  goog.asserts.assert(1 === module$contents$goog$array_count(module$contents$ee$batch_Export.EE_ELEMENT_KEYS, isInArgs), 'Expected a single \"image\", \"collection\" or \"classifier\" key.');\n  var element = exportArgs[eeElementKey];\n  if (element instanceof ee.Image) {\n    var result = element;\n  } else {\n    if (element instanceof ee.FeatureCollection) {\n      result = element;\n    } else {\n      if (element instanceof ee.ImageCollection) {\n        result = element;\n      } else {\n        if (element instanceof ee.Element) {\n          result = element;\n        } else {\n          if (element instanceof ee.ComputedObject) {\n            result = element;\n          } else {\n            throw Error(\"Unknown element type provided: \" + typeof element + \". Expected:  ee.Image, ee.ImageCollection, ee.FeatureCollection,  ee.Element or ee.ComputedObject.\");\n          }\n        }\n      }\n    }\n  }\n  delete exportArgs[eeElementKey];\n  return result;\n};\nmodule$contents$ee$batch_Export.convertToServerParams = function(originalArgs, destination, exportType, serializeRegion) {\n  serializeRegion = void 0 === serializeRegion ? !0 : serializeRegion;\n  var taskConfig = {type:exportType};\n  Object.assign(taskConfig, originalArgs);\n  switch(exportType) {\n    case ee.data.ExportType.IMAGE:\n      taskConfig = module$contents$ee$batch_Export.image.prepareTaskConfig_(taskConfig, destination);\n      break;\n    case ee.data.ExportType.MAP:\n      taskConfig = module$contents$ee$batch_Export.map.prepareTaskConfig_(taskConfig, destination);\n      break;\n    case ee.data.ExportType.TABLE:\n      taskConfig = module$contents$ee$batch_Export.table.prepareTaskConfig_(taskConfig, destination);\n      break;\n    case ee.data.ExportType.VIDEO:\n      taskConfig = module$contents$ee$batch_Export.video.prepareTaskConfig_(taskConfig, destination);\n      break;\n    case ee.data.ExportType.VIDEO_MAP:\n      taskConfig = module$contents$ee$batch_Export.videoMap.prepareTaskConfig_(taskConfig, destination);\n      break;\n    case ee.data.ExportType.CLASSIFIER:\n      taskConfig = module$contents$ee$batch_Export.classifier.prepareTaskConfig_(taskConfig, destination);\n      break;\n    default:\n      throw Error(\"Unknown export type: \" + taskConfig.type);\n  }\n  serializeRegion && null != taskConfig.region && (taskConfig.region = module$contents$ee$batch_Export.serializeRegion(taskConfig.region));\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.prepareDestination_ = function(taskConfig, destination) {\n  switch(destination) {\n    case ee.data.ExportDestination.GCS:\n      taskConfig.outputBucket = taskConfig.bucket || \"\";\n      taskConfig.outputPrefix = taskConfig.fileNamePrefix || taskConfig.path || \"\";\n      delete taskConfig.fileNamePrefix;\n      delete taskConfig.path;\n      delete taskConfig.bucket;\n      break;\n    case ee.data.ExportDestination.ASSET:\n      taskConfig.assetId = taskConfig.assetId || \"\";\n      break;\n    case ee.data.ExportDestination.FEATURE_VIEW:\n      taskConfig.mapName = taskConfig.mapName || \"\";\n      break;\n    default:\n      var folderType = goog.typeOf(taskConfig.folder);\n      if (!module$contents$goog$array_contains([\"string\", \"undefined\"], folderType)) {\n        throw Error('Error: toDrive \"folder\" parameter must be a string, but is of type ' + folderType + \".\");\n      }\n      taskConfig.driveFolder = taskConfig.folder || \"\";\n      taskConfig.driveFileNamePrefix = taskConfig.fileNamePrefix || \"\";\n      delete taskConfig.folder;\n      delete taskConfig.fileNamePrefix;\n  }\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.image.prepareTaskConfig_ = function(taskConfig, destination) {\n  null == taskConfig.fileFormat && (taskConfig.fileFormat = \"GeoTIFF\");\n  taskConfig = module$contents$ee$batch_Export.reconcileImageFormat(taskConfig);\n  taskConfig = module$contents$ee$batch_Export.prepareDestination_(taskConfig, destination);\n  null != taskConfig.crsTransform && (taskConfig[module$contents$ee$batch_Export.CRS_TRANSFORM_KEY] = taskConfig.crsTransform, delete taskConfig.crsTransform);\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.table.prepareTaskConfig_ = function(taskConfig, destination) {\n  Array.isArray(taskConfig.selectors) && (taskConfig.selectors = taskConfig.selectors.join());\n  taskConfig = module$contents$ee$batch_Export.reconcileTableFormat(taskConfig);\n  return taskConfig = module$contents$ee$batch_Export.prepareDestination_(taskConfig, destination);\n};\nmodule$contents$ee$batch_Export.map.prepareTaskConfig_ = function(taskConfig, destination) {\n  taskConfig = module$contents$ee$batch_Export.prepareDestination_(taskConfig, destination);\n  return taskConfig = module$contents$ee$batch_Export.reconcileMapFormat(taskConfig);\n};\nmodule$contents$ee$batch_Export.video.prepareTaskConfig_ = function(taskConfig, destination) {\n  taskConfig = module$contents$ee$batch_Export.reconcileVideoFormat_(taskConfig);\n  taskConfig = module$contents$ee$batch_Export.prepareDestination_(taskConfig, destination);\n  null != taskConfig.crsTransform && (taskConfig[module$contents$ee$batch_Export.CRS_TRANSFORM_KEY] = taskConfig.crsTransform, delete taskConfig.crsTransform);\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.videoMap.prepareTaskConfig_ = function(taskConfig, destination) {\n  taskConfig = module$contents$ee$batch_Export.reconcileVideoFormat_(taskConfig);\n  taskConfig.version = taskConfig.version || module$contents$ee$batch_VideoMapVersion.V1;\n  taskConfig.stride = taskConfig.stride || 1;\n  taskConfig.tileDimensions = {width:taskConfig.tileWidth || 256, height:taskConfig.tileHeight || 256};\n  return taskConfig = module$contents$ee$batch_Export.prepareDestination_(taskConfig, destination);\n};\nmodule$contents$ee$batch_Export.classifier.prepareTaskConfig_ = function(taskConfig, destination) {\n  return taskConfig = module$contents$ee$batch_Export.prepareDestination_(taskConfig, destination);\n};\nvar module$contents$ee$batch_VideoFormat = {MP4:\"MP4\", GIF:\"GIF\", VP9:\"VP9\",}, module$contents$ee$batch_MapFormat = {AUTO_JPEG_PNG:\"AUTO_JPEG_PNG\", JPEG:\"JPEG\", PNG:\"PNG\",}, module$contents$ee$batch_ImageFormat = {GEO_TIFF:\"GEO_TIFF\", TF_RECORD_IMAGE:\"TF_RECORD_IMAGE\",}, module$contents$ee$batch_TableFormat = {CSV:\"CSV\", GEO_JSON:\"GEO_JSON\", KML:\"KML\", KMZ:\"KMZ\", SHP:\"SHP\", TF_RECORD_TABLE:\"TF_RECORD_TABLE\",}, module$contents$ee$batch_VideoMapVersion = {V1:\"V1\", V2:\"V2\",}, module$contents$ee$batch_FORMAT_OPTIONS_MAP = \n{GEO_TIFF:[\"cloudOptimized\", \"fileDimensions\", \"shardSize\",], TF_RECORD_IMAGE:\"patchDimensions kernelSize compressed maxFileSize defaultValue tensorDepths sequenceData collapseBands maskedThreshold\".split(\" \")}, module$contents$ee$batch_FORMAT_PREFIX_MAP = {GEO_TIFF:\"tiff\", TF_RECORD_IMAGE:\"tfrecord\"};\nmodule$contents$ee$batch_Export.reconcileVideoFormat_ = function(taskConfig) {\n  taskConfig.videoOptions = taskConfig.framesPerSecond || 5.0;\n  taskConfig.maxFrames = taskConfig.maxFrames || 1000;\n  taskConfig.maxPixels = taskConfig.maxPixels || 1e8;\n  var formatString = taskConfig.fileFormat;\n  null == formatString && (formatString = module$contents$ee$batch_VideoFormat.MP4);\n  formatString = formatString.toUpperCase();\n  switch(formatString) {\n    case \"MP4\":\n      formatString = module$contents$ee$batch_VideoFormat.MP4;\n      break;\n    case \"GIF\":\n    case \"JIF\":\n      formatString = module$contents$ee$batch_VideoFormat.GIF;\n      break;\n    case \"VP9\":\n    case \"WEBM\":\n      formatString = module$contents$ee$batch_VideoFormat.VP9;\n      break;\n    default:\n      throw Error(\"Invalid file format \" + formatString + \". Supported formats are: 'MP4', 'GIF', and 'WEBM'.\");\n  }\n  taskConfig.fileFormat = formatString;\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.reconcileImageFormat = function(taskConfig) {\n  var formatString = taskConfig.fileFormat;\n  null == formatString && (formatString = module$contents$ee$batch_ImageFormat.GEO_TIFF);\n  formatString = formatString.toUpperCase();\n  switch(formatString) {\n    case \"TIFF\":\n    case \"TIF\":\n    case \"GEO_TIFF\":\n    case \"GEOTIFF\":\n      formatString = module$contents$ee$batch_ImageFormat.GEO_TIFF;\n      break;\n    case \"TF_RECORD\":\n    case \"TF_RECORD_IMAGE\":\n    case \"TFRECORD\":\n      formatString = module$contents$ee$batch_ImageFormat.TF_RECORD_IMAGE;\n      break;\n    default:\n      throw Error(\"Invalid file format \" + formatString + \". Supported formats are: 'GEOTIFF', 'TFRECORD'.\");\n  }\n  taskConfig.fileFormat = formatString;\n  if (null != taskConfig.formatOptions) {\n    var formatOptions = module$contents$ee$batch_Export.prefixImageFormatOptions_(taskConfig, formatString);\n    delete taskConfig.formatOptions;\n    Object.assign(taskConfig, formatOptions);\n  }\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.reconcileMapFormat = function(taskConfig) {\n  var formatString = taskConfig.fileFormat;\n  null == formatString && (formatString = module$contents$ee$batch_MapFormat.AUTO_JPEG_PNG);\n  formatString = formatString.toUpperCase();\n  switch(formatString) {\n    case \"AUTO\":\n    case \"AUTO_JPEG_PNG\":\n    case \"AUTO_JPG_PNG\":\n      formatString = module$contents$ee$batch_MapFormat.AUTO_JPEG_PNG;\n      break;\n    case \"JPG\":\n    case \"JPEG\":\n      formatString = module$contents$ee$batch_MapFormat.JPEG;\n      break;\n    case \"PNG\":\n      formatString = module$contents$ee$batch_MapFormat.PNG;\n      break;\n    default:\n      throw Error(\"Invalid file format \" + formatString + \". Supported formats are: 'AUTO', 'PNG', and 'JPEG'.\");\n  }\n  taskConfig.fileFormat = formatString;\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.reconcileTableFormat = function(taskConfig) {\n  var formatString = taskConfig.fileFormat;\n  null == formatString && (formatString = module$contents$ee$batch_TableFormat.CSV);\n  formatString = formatString.toUpperCase();\n  switch(formatString) {\n    case \"CSV\":\n      formatString = module$contents$ee$batch_TableFormat.CSV;\n      break;\n    case \"JSON\":\n    case \"GEOJSON\":\n    case \"GEO_JSON\":\n      formatString = module$contents$ee$batch_TableFormat.GEO_JSON;\n      break;\n    case \"KML\":\n      formatString = module$contents$ee$batch_TableFormat.KML;\n      break;\n    case \"KMZ\":\n      formatString = module$contents$ee$batch_TableFormat.KMZ;\n      break;\n    case \"SHP\":\n      formatString = module$contents$ee$batch_TableFormat.SHP;\n      break;\n    case \"TF_RECORD\":\n    case \"TF_RECORD_TABLE\":\n    case \"TFRECORD\":\n      formatString = module$contents$ee$batch_TableFormat.TF_RECORD_TABLE;\n      break;\n    default:\n      throw Error(\"Invalid file format \" + formatString + \". Supported formats are: 'CSV', 'GeoJSON', 'KML', 'KMZ', 'SHP', and 'TFRecord'.\");\n  }\n  taskConfig.fileFormat = formatString;\n  return taskConfig;\n};\nmodule$contents$ee$batch_Export.prefixImageFormatOptions_ = function(taskConfig, imageFormat) {\n  var formatOptions = taskConfig.formatOptions;\n  if (null == formatOptions) {\n    return {};\n  }\n  if (Object.keys(taskConfig).some(function(key) {\n    return module$contents$goog$object_containsKey(formatOptions, key);\n  })) {\n    throw Error(\"Parameter specified at least twice: once in config, and once in config format options.\");\n  }\n  for (var prefix = module$contents$ee$batch_FORMAT_PREFIX_MAP[imageFormat], validOptionKeys = module$contents$ee$batch_FORMAT_OPTIONS_MAP[imageFormat], prefixedOptions = {}, $jscomp$iter$27 = $jscomp.makeIterator(Object.entries(formatOptions)), $jscomp$key$ = $jscomp$iter$27.next(); !$jscomp$key$.done; $jscomp$key$ = $jscomp$iter$27.next()) {\n    var $jscomp$destructuring$var37 = $jscomp.makeIterator($jscomp$key$.value), key$jscomp$0 = $jscomp$destructuring$var37.next().value, value = $jscomp$destructuring$var37.next().value;\n    if (!module$contents$goog$array_contains(validOptionKeys, key$jscomp$0)) {\n      var validKeysMsg = validOptionKeys.join(\", \");\n      throw Error('\"' + key$jscomp$0 + '\" is not a valid option, the image format \"' + imageFormat + '\"\"may have the following options: ' + (validKeysMsg + '\".'));\n    }\n    var prefixedKey = prefix + key$jscomp$0[0].toUpperCase() + key$jscomp$0.substring(1);\n    Array.isArray(value) ? prefixedOptions[prefixedKey] = value.join() : prefixedOptions[prefixedKey] = value;\n  }\n  return prefixedOptions;\n};\nmodule$contents$ee$batch_Export.CRS_TRANSFORM_KEY = \"crs_transform\";\nmodule$contents$ee$batch_Export.EE_ELEMENT_KEYS = [\"image\", \"collection\", \"classifier\"];\nee.batch.Export = module$contents$ee$batch_Export;\nee.batch.ExportTask = module$contents$ee$batch_ExportTask;\nee.batch.ImageFormat = module$contents$ee$batch_ImageFormat;\nee.batch.MapFormat = module$contents$ee$batch_MapFormat;\nee.batch.ServerTaskConfig = {};\nee.batch.TableFormat = module$contents$ee$batch_TableFormat;\nee.batch.VideoFormat = module$contents$ee$batch_VideoFormat;\nee.Number = function(number) {\n  if (!(this instanceof ee.Number)) {\n    return ee.ComputedObject.construct(ee.Number, arguments);\n  }\n  if (number instanceof ee.Number) {\n    return number;\n  }\n  ee.Number.initialize();\n  if (\"number\" === typeof number) {\n    ee.ComputedObject.call(this, null, null), this.number_ = number;\n  } else {\n    if (number instanceof ee.ComputedObject) {\n      ee.ComputedObject.call(this, number.func, number.args, number.varName), this.number_ = null;\n    } else {\n      throw Error(\"Invalid argument specified for ee.Number(): \" + number);\n    }\n  }\n};\ngoog.inherits(ee.Number, ee.ComputedObject);\ngoog.exportSymbol(\"ee.Number\", ee.Number);\nee.Number.initialized_ = !1;\nee.Number.initialize = function() {\n  ee.Number.initialized_ || (ee.ApiFunction.importApi(ee.Number, \"Number\", \"Number\"), ee.Number.initialized_ = !0);\n};\nee.Number.reset = function() {\n  ee.ApiFunction.clearApi(ee.Number);\n  ee.Number.initialized_ = !1;\n};\nee.Number.prototype.encode = function(encoder) {\n  return \"number\" === typeof this.number_ ? this.number_ : ee.Number.superClass_.encode.call(this, encoder);\n};\nee.Number.prototype.encodeCloudValue = function(serializer) {\n  return \"number\" === typeof this.number_ ? ee.rpc_node.reference(serializer.makeReference(this.number_)) : ee.Number.superClass_.encodeCloudValue.call(this, serializer);\n};\nee.Number.prototype.name = function() {\n  return \"Number\";\n};\nee.String = function(string) {\n  if (!(this instanceof ee.String)) {\n    return ee.ComputedObject.construct(ee.String, arguments);\n  }\n  if (string instanceof ee.String) {\n    return string;\n  }\n  ee.String.initialize();\n  if (\"string\" === typeof string) {\n    ee.ComputedObject.call(this, null, null), this.string_ = string;\n  } else {\n    if (string instanceof ee.ComputedObject) {\n      this.string_ = null, string.func && \"String\" == string.func.getSignature().returns ? ee.ComputedObject.call(this, string.func, string.args, string.varName) : ee.ComputedObject.call(this, new ee.ApiFunction(\"String\"), {input:string}, null);\n    } else {\n      throw Error(\"Invalid argument specified for ee.String(): \" + string);\n    }\n  }\n};\ngoog.inherits(ee.String, ee.ComputedObject);\ngoog.exportSymbol(\"ee.String\", ee.String);\nee.String.initialized_ = !1;\nee.String.initialize = function() {\n  ee.String.initialized_ || (ee.ApiFunction.importApi(ee.String, \"String\", \"String\"), ee.String.initialized_ = !0);\n};\nee.String.reset = function() {\n  ee.ApiFunction.clearApi(ee.String);\n  ee.String.initialized_ = !1;\n};\nee.String.prototype.encode = function(encoder) {\n  return \"string\" === typeof this.string_ ? this.string_ : ee.String.superClass_.encode.call(this, encoder);\n};\nee.String.prototype.encodeCloudValue = function(serializer) {\n  return \"string\" === typeof this.string_ ? ee.rpc_node.reference(serializer.makeReference(this.string_)) : ee.String.superClass_.encodeCloudValue.call(this, serializer);\n};\nee.String.prototype.name = function() {\n  return \"String\";\n};\nee.CustomFunction = function(signature, body) {\n  if (!(this instanceof ee.CustomFunction)) {\n    return ee.ComputedObject.construct(ee.CustomFunction, arguments);\n  }\n  for (var vars = [], args = signature.args, i = 0; i < args.length; i++) {\n    var arg = args[i];\n    vars.push(ee.CustomFunction.variable(ee.Types.nameToClass(arg.type), arg.name));\n  }\n  if (void 0 === body.apply(null, vars)) {\n    throw Error(\"User-defined methods must return a value.\");\n  }\n  this.signature_ = ee.CustomFunction.resolveNamelessArgs_(signature, vars, body);\n  this.body_ = body.apply(null, vars);\n};\ngoog.inherits(ee.CustomFunction, ee.Function);\ngoog.exportSymbol(\"ee.CustomFunction\", ee.CustomFunction);\nee.CustomFunction.prototype.encode = function(encoder) {\n  return {type:\"Function\", argumentNames:module$contents$goog$array_map(this.signature_.args, function(arg) {\n    return arg.name;\n  }), body:encoder(this.body_)};\n};\nee.CustomFunction.prototype.encodeCloudValue = function(serializer) {\n  return ee.rpc_node.functionDefinition(this.signature_.args.map(function(arg) {\n    return arg.name;\n  }), serializer.makeReference(this.body_));\n};\nee.CustomFunction.prototype.encodeCloudInvocation = function(serializer, args) {\n  return ee.rpc_node.functionByReference(serializer.makeReference(this), args);\n};\nee.CustomFunction.prototype.getSignature = function() {\n  return this.signature_;\n};\nee.CustomFunction.variable = function(type, name$jscomp$0) {\n  type = type || Object;\n  if (!(type.prototype instanceof ee.ComputedObject)) {\n    if (type && type != Object) {\n      if (type == String) {\n        type = ee.String;\n      } else {\n        if (type == Number) {\n          type = ee.Number;\n        } else {\n          if (type == Array) {\n            type = goog.global.ee.List;\n          } else {\n            throw Error(\"Variables must be of an EE type, e.g. ee.Image or ee.Number.\");\n          }\n        }\n      }\n    } else {\n      type = ee.ComputedObject;\n    }\n  }\n  var klass = function(name) {\n    this.args = this.func = null;\n    this.varName = name;\n  };\n  klass.prototype = type.prototype;\n  return new klass(name$jscomp$0);\n};\nee.CustomFunction.create = function(func, returnType, arg_types) {\n  var stringifyType = function(type) {\n    return \"string\" === typeof type ? type : ee.Types.classToName(type);\n  }, args = module$contents$goog$array_map(arg_types, function(argType) {\n    return {name:null, type:stringifyType(argType)};\n  }), signature = {name:\"\", returns:stringifyType(returnType), args:args};\n  return new ee.CustomFunction(signature, func);\n};\nee.CustomFunction.resolveNamelessArgs_ = function(signature, vars, body) {\n  for (var namelessArgIndices = [], i = 0; i < vars.length; i++) {\n    null === vars[i].varName && namelessArgIndices.push(i);\n  }\n  if (0 === namelessArgIndices.length) {\n    return signature;\n  }\n  for (var baseName = \"_MAPPING_VAR_\" + function(expression) {\n    var countNodes = function(nodes) {\n      return nodes.map(countNode).reduce(function(a, b) {\n        return a + b;\n      }, 0);\n    }, countNode = function(node) {\n      return node.functionDefinitionValue ? 1 : node.arrayValue ? countNodes(node.arrayValue.values) : node.dictionaryValue ? countNodes(Object.values(node.dictionaryValue.values)) : node.functionInvocationValue ? countNodes(Object.values(node.functionInvocationValue.arguments)) : 0;\n    };\n    return countNodes(Object.values(expression.values));\n  }(ee.Serializer.encodeCloudApiExpression(body.apply(null, vars), \"<unbound>\")) + \"_\", i$70 = 0; i$70 < namelessArgIndices.length; i$70++) {\n    var index = namelessArgIndices[i$70], name = baseName + i$70;\n    vars[index].varName = name;\n    signature.args[index].name = name;\n  }\n  return signature;\n};\nee.Date = function(date, opt_tz) {\n  if (!(this instanceof ee.Date)) {\n    return ee.ComputedObject.construct(ee.Date, arguments);\n  }\n  if (date instanceof ee.Date) {\n    return date;\n  }\n  ee.Date.initialize();\n  var jsArgs = ee.arguments.extractFromFunction(ee.Date, arguments);\n  date = jsArgs.date;\n  var tz = jsArgs.tz, func = new ee.ApiFunction(\"Date\"), args = {}, varName = null;\n  if (ee.Types.isString(date)) {\n    if (args.value = date, tz) {\n      if (ee.Types.isString(tz)) {\n        args.timeZone = tz;\n      } else {\n        throw Error(\"Invalid argument specified for ee.Date(..., opt_tz): \" + tz);\n      }\n    }\n  } else {\n    if (ee.Types.isNumber(date)) {\n      args.value = date;\n    } else {\n      if (goog.isDateLike(date)) {\n        args.value = Math.floor(date.getTime());\n      } else {\n        if (date instanceof ee.ComputedObject) {\n          date.func && \"Date\" == date.func.getSignature().returns ? (func = date.func, args = date.args, varName = date.varName) : args.value = date;\n        } else {\n          throw Error(\"Invalid argument specified for ee.Date(): \" + date);\n        }\n      }\n    }\n  }\n  ee.ComputedObject.call(this, func, args, varName);\n};\ngoog.inherits(ee.Date, ee.ComputedObject);\ngoog.exportSymbol(\"ee.Date\", ee.Date);\nee.Date.initialized_ = !1;\nee.Date.initialize = function() {\n  ee.Date.initialized_ || (ee.ApiFunction.importApi(ee.Date, \"Date\", \"Date\"), ee.Date.initialized_ = !0);\n};\nee.Date.reset = function() {\n  ee.ApiFunction.clearApi(ee.Date);\n  ee.Date.initialized_ = !1;\n};\nee.Date.prototype.name = function() {\n  return \"Date\";\n};\nee.Deserializer = function() {\n};\ngoog.exportSymbol(\"ee.Deserializer\", ee.Deserializer);\nee.Deserializer.fromJSON = function(json) {\n  return ee.Deserializer.decode(JSON.parse(json));\n};\ngoog.exportSymbol(\"ee.Deserializer.fromJSON\", ee.Deserializer.fromJSON);\nee.Deserializer.decode = function(json) {\n  if (\"result\" in json && \"values\" in json) {\n    return ee.Deserializer.decodeCloudApi(json);\n  }\n  var namedValues = {};\n  if (goog.isObject(json) && \"CompoundValue\" === json.type) {\n    for (var scopes = json.scope, i = 0; i < scopes.length; i++) {\n      var key = scopes[i][0], value = scopes[i][1];\n      if (key in namedValues) {\n        throw Error('Duplicate scope key \"' + key + '\" in scope #' + i + \".\");\n      }\n      namedValues[key] = ee.Deserializer.decodeValue_(value, namedValues);\n    }\n    json = json.value;\n  }\n  return ee.Deserializer.decodeValue_(json, namedValues);\n};\ngoog.exportSymbol(\"ee.Deserializer.decode\", ee.Deserializer.decode);\nee.Deserializer.decodeValue_ = function(json, namedValues) {\n  if (null === json || \"number\" === typeof json || \"boolean\" === typeof json || \"string\" === typeof json) {\n    return json;\n  }\n  if (Array.isArray(json)) {\n    return module$contents$goog$array_map(json, function(element) {\n      return ee.Deserializer.decodeValue_(element, namedValues);\n    });\n  }\n  if (!goog.isObject(json) || \"function\" === typeof json) {\n    throw Error(\"Cannot decode object: \" + json);\n  }\n  var typeName = json.type;\n  switch(typeName) {\n    case \"ValueRef\":\n      if (json.value in namedValues) {\n        return namedValues[json.value];\n      }\n      throw Error(\"Unknown ValueRef: \" + json);\n    case \"ArgumentRef\":\n      var varName = json.value;\n      if (\"string\" !== typeof varName) {\n        throw Error(\"Invalid variable name: \" + varName);\n      }\n      return ee.CustomFunction.variable(Object, varName);\n    case \"Date\":\n      var microseconds = json.value;\n      if (\"number\" !== typeof microseconds) {\n        throw Error(\"Invalid date value: \" + microseconds);\n      }\n      return new ee.Date(microseconds / 1000);\n    case \"Bytes\":\n      return ee.Deserializer.roundTrip_(new module$exports$eeapiclient$ee_api_client.ValueNode({bytesValue:json}), json);\n    case \"Invocation\":\n      var func = \"functionName\" in json ? ee.ApiFunction.lookup(json.functionName) : ee.Deserializer.decodeValue_(json[\"function\"], namedValues);\n      var args = module$contents$goog$object_map(json.arguments, function(element) {\n        return ee.Deserializer.decodeValue_(element, namedValues);\n      });\n      return ee.Deserializer.invocation_(func, args);\n    case \"Dictionary\":\n      return module$contents$goog$object_map(json.value, function(element) {\n        return ee.Deserializer.decodeValue_(element, namedValues);\n      });\n    case \"Function\":\n      var body = ee.Deserializer.decodeValue_(json.body, namedValues), signature = {name:\"\", args:module$contents$goog$array_map(json.argumentNames, function(argName) {\n        return {name:argName, type:\"Object\", optional:!1};\n      }), returns:\"Object\"};\n      return new ee.CustomFunction(signature, function() {\n        return body;\n      });\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n    case \"Polygon\":\n    case \"MultiPolygon\":\n    case \"LinearRing\":\n    case \"GeometryCollection\":\n      return new ee.Geometry(json);\n    case \"CompoundValue\":\n      throw Error(\"Nested CompoundValues are disallowed.\");\n    default:\n      throw Error(\"Unknown encoded object type: \" + typeName);\n  }\n};\nee.Deserializer.roundTrip_ = function(node, value) {\n  var Reencoder = function() {\n  };\n  $jscomp.inherits(Reencoder, ee.Encodable);\n  Reencoder.prototype.encode = function(encoder) {\n    return value;\n  };\n  Reencoder.prototype.encodeCloudValue = function(encoder) {\n    return node;\n  };\n  return new Reencoder();\n};\nee.Deserializer.invocation_ = function(func, args$jscomp$0) {\n  if (func instanceof ee.Function) {\n    return func.apply(args$jscomp$0);\n  }\n  if (func instanceof ee.ComputedObject) {\n    var ComputedFunction = function() {\n      return ee.Function.apply(this, arguments) || this;\n    };\n    $jscomp.inherits(ComputedFunction, ee.Function);\n    ComputedFunction.prototype.encode = function(encoder) {\n      return func.encode(encoder);\n    };\n    ComputedFunction.prototype.encodeCloudInvocation = function(serializer, args) {\n      return ee.rpc_node.functionByReference(serializer.makeReference(func), args);\n    };\n    return new ee.ComputedObject(new ComputedFunction(), args$jscomp$0);\n  }\n  throw Error(\"Invalid function value\");\n};\nee.Deserializer.fromCloudApiJSON = function(json) {\n  return ee.Deserializer.decodeCloudApi(JSON.parse(json));\n};\ngoog.exportSymbol(\"ee.Deserializer.fromCloudApiJSON\", ee.Deserializer.fromCloudApiJSON);\nee.Deserializer.decodeCloudApi = function(json) {\n  var expression = module$contents$eeapiclient$domain_object_deserialize(module$exports$eeapiclient$ee_api_client.Expression, json), decoded = {}, lookup = function(reference, kind) {\n    if (!(reference in decoded)) {\n      if (!(reference in expression.values)) {\n        throw Error(\"Cannot find \" + kind + \" \" + reference);\n      }\n      decoded[reference] = decode(expression.values[reference]);\n    }\n    return decoded[reference];\n  }, decode = function(node) {\n    return null !== node.constantValue ? node.constantValue : null !== node.arrayValue ? node.arrayValue.values.map(decode) : null !== node.dictionaryValue ? module$contents$goog$object_map(node.dictionaryValue.values, decode) : null !== node.argumentReference ? ee.CustomFunction.variable(Object, node.argumentReference) : null !== node.functionDefinitionValue ? decodeFunctionDefinition(node.functionDefinitionValue) : null !== node.functionInvocationValue ? decodeFunctionInvocation(node.functionInvocationValue) : \n    null !== node.bytesValue ? ee.Deserializer.roundTrip_(new module$exports$eeapiclient$ee_api_client.ValueNode({bytesValue:node.bytesValue}), node.bytesValue) : null !== node.integerValue ? ee.Deserializer.roundTrip_(new module$exports$eeapiclient$ee_api_client.ValueNode({integerValue:node.integerValue}), node.integerValue) : null !== node.valueReference ? lookup(node.valueReference, \"reference\") : null;\n  }, decodeFunctionDefinition = function(defined) {\n    var body = lookup(defined.body, \"function body\"), signature = {args:defined.argumentNames.map(function(name) {\n      return {name:name, type:\"Object\", optional:!1};\n    }), name:\"\", returns:\"Object\"};\n    return new ee.CustomFunction(signature, function() {\n      return body;\n    });\n  }, decodeFunctionInvocation = function(invoked) {\n    var func = invoked.functionReference ? lookup(invoked.functionReference, \"function\") : ee.ApiFunction.lookup(invoked.functionName), args = module$contents$goog$object_map(invoked.arguments, decode);\n    return ee.Deserializer.invocation_(func, args);\n  };\n  return lookup(expression.result, \"result value\");\n};\ngoog.exportSymbol(\"ee.Deserializer.decodeCloudApi\", ee.Deserializer.decodeCloudApi);\nee.Dictionary = function(opt_dict) {\n  if (!(this instanceof ee.Dictionary)) {\n    return ee.ComputedObject.construct(ee.Dictionary, arguments);\n  }\n  if (opt_dict instanceof ee.Dictionary) {\n    return opt_dict;\n  }\n  ee.Dictionary.initialize();\n  ee.Types.isRegularObject(opt_dict) ? (ee.ComputedObject.call(this, null, null), this.dict_ = opt_dict) : (opt_dict instanceof ee.ComputedObject && opt_dict.func && \"Dictionary\" == opt_dict.func.getSignature().returns ? ee.ComputedObject.call(this, opt_dict.func, opt_dict.args, opt_dict.varName) : ee.ComputedObject.call(this, new ee.ApiFunction(\"Dictionary\"), {input:opt_dict}, null), this.dict_ = null);\n};\ngoog.inherits(ee.Dictionary, ee.ComputedObject);\ngoog.exportSymbol(\"ee.Dictionary\", ee.Dictionary);\nee.Dictionary.initialized_ = !1;\nee.Dictionary.initialize = function() {\n  ee.Dictionary.initialized_ || (ee.ApiFunction.importApi(ee.Dictionary, \"Dictionary\", \"Dictionary\"), ee.Dictionary.initialized_ = !0);\n};\nee.Dictionary.reset = function() {\n  ee.ApiFunction.clearApi(ee.Dictionary);\n  ee.Dictionary.initialized_ = !1;\n};\nee.Dictionary.prototype.encode = function(encoder) {\n  return null !== this.dict_ ? encoder(this.dict_) : ee.Dictionary.superClass_.encode.call(this, encoder);\n};\nee.Dictionary.prototype.encodeCloudValue = function(serializer) {\n  return null !== this.dict_ ? ee.rpc_node.reference(serializer.makeReference(this.dict_)) : ee.Dictionary.superClass_.encodeCloudValue.call(this, serializer);\n};\nee.Dictionary.prototype.name = function() {\n  return \"Dictionary\";\n};\nee.Terrain = {};\ngoog.exportSymbol(\"ee.Terrain\", ee.Terrain);\nee.Terrain.initialized_ = !1;\nee.Terrain.initialize = function() {\n  ee.Terrain.initialized_ || (ee.ApiFunction.importApi(ee.Terrain, \"Terrain\", \"Terrain\"), ee.Terrain.initialized_ = !0);\n};\nee.Terrain.reset = function() {\n  ee.ApiFunction.clearApi(ee.Terrain);\n  ee.Terrain.initialized_ = !1;\n};\nee.initialize = function(opt_baseurl, opt_tileurl, opt_successCallback, opt_errorCallback, opt_xsrfToken, opt_project) {\n  if (ee.ready_ != ee.InitState.READY || opt_baseurl || opt_tileurl) {\n    var isAsynchronous = null != opt_successCallback;\n    if (opt_errorCallback) {\n      if (isAsynchronous) {\n        ee.errorCallbacks_.push(opt_errorCallback);\n      } else {\n        throw Error(\"Can't pass an error callback without a success callback.\");\n      }\n    }\n    if (ee.ready_ == ee.InitState.LOADING && isAsynchronous) {\n      ee.successCallbacks_.push(opt_successCallback);\n    } else {\n      if (ee.ready_ = ee.InitState.LOADING, ee.data.initialize(opt_baseurl, opt_tileurl, opt_xsrfToken, opt_project), isAsynchronous) {\n        ee.successCallbacks_.push(opt_successCallback), ee.ApiFunction.initialize(ee.initializationSuccess_, ee.initializationFailure_);\n      } else {\n        try {\n          ee.ApiFunction.initialize(), ee.initializationSuccess_();\n        } catch (e) {\n          throw ee.initializationFailure_(e), e;\n        }\n      }\n    }\n  } else {\n    opt_successCallback && opt_successCallback();\n  }\n};\ngoog.exportSymbol(\"ee.initialize\", ee.initialize);\nee.reset = function() {\n  ee.ready_ = ee.InitState.NOT_READY;\n  ee.data.reset();\n  ee.ApiFunction.reset();\n  ee.Date.reset();\n  ee.Dictionary.reset();\n  ee.Element.reset();\n  ee.Image.reset();\n  ee.Feature.reset();\n  ee.Collection.reset();\n  ee.ImageCollection.reset();\n  ee.FeatureCollection.reset();\n  ee.Filter.reset();\n  ee.Geometry.reset();\n  ee.List.reset();\n  ee.Number.reset();\n  ee.String.reset();\n  ee.Terrain.reset();\n  ee.resetGeneratedClasses_();\n  module$contents$goog$object_clear(ee.Algorithms);\n};\ngoog.exportSymbol(\"ee.reset\", ee.reset);\nee.InitState = {NOT_READY:\"not_ready\", LOADING:\"loading\", READY:\"ready\"};\ngoog.exportSymbol(\"ee.InitState\", ee.InitState);\ngoog.exportSymbol(\"ee.InitState.NOT_READY\", ee.InitState.NOT_READY);\ngoog.exportSymbol(\"ee.InitState.LOADING\", ee.InitState.LOADING);\ngoog.exportSymbol(\"ee.InitState.READY\", ee.InitState.READY);\nee.ready_ = ee.InitState.NOT_READY;\nee.successCallbacks_ = [];\nee.errorCallbacks_ = [];\nee.TILE_SIZE = 256;\ngoog.exportSymbol(\"ee.TILE_SIZE\", ee.TILE_SIZE);\nee.generatedClasses_ = [];\nee.Algorithms = {};\ngoog.exportSymbol(\"ee.Algorithms\", ee.Algorithms);\nee.ready = function() {\n  return ee.ready_;\n};\nee.call = function(func, var_args) {\n  \"string\" === typeof func && (func = new ee.ApiFunction(func));\n  var args = Array.prototype.slice.call(arguments, 1);\n  return ee.Function.prototype.call.apply(func, args);\n};\ngoog.exportSymbol(\"ee.call\", ee.call);\nee.apply = function(func, namedArgs) {\n  \"string\" === typeof func && (func = new ee.ApiFunction(func));\n  return func.apply(namedArgs);\n};\ngoog.exportSymbol(\"ee.apply\", ee.apply);\nee.initializationSuccess_ = function() {\n  if (ee.ready_ == ee.InitState.LOADING) {\n    try {\n      ee.Date.initialize(), ee.Dictionary.initialize(), ee.Element.initialize(), ee.Image.initialize(), ee.Feature.initialize(), ee.Collection.initialize(), ee.ImageCollection.initialize(), ee.FeatureCollection.initialize(), ee.Filter.initialize(), ee.Geometry.initialize(), ee.List.initialize(), ee.Number.initialize(), ee.String.initialize(), ee.Terrain.initialize(), ee.initializeGeneratedClasses_(), ee.initializeUnboundMethods_();\n    } catch (e) {\n      ee.initializationFailure_(e);\n      return;\n    }\n    ee.ready_ = ee.InitState.READY;\n    for (ee.errorCallbacks_ = []; 0 < ee.successCallbacks_.length;) {\n      ee.successCallbacks_.shift()();\n    }\n  }\n};\nee.initializationFailure_ = function(e) {\n  if (ee.ready_ == ee.InitState.LOADING) {\n    for (ee.ready_ = ee.InitState.NOT_READY, ee.successCallbacks_ = []; 0 < ee.errorCallbacks_.length;) {\n      ee.errorCallbacks_.shift()(e);\n    }\n  }\n};\nee.promote_ = function(arg, klass) {\n  if (null === arg) {\n    return null;\n  }\n  if (void 0 !== arg) {\n    var exportedEE = goog.global.ee;\n    switch(klass) {\n      case \"Image\":\n        return new ee.Image(arg);\n      case \"Feature\":\n        return arg instanceof ee.Collection ? ee.ApiFunction._call(\"Feature\", ee.ApiFunction._call(\"Collection.geometry\", arg)) : new ee.Feature(arg);\n      case \"Element\":\n        if (arg instanceof ee.Element) {\n          return arg;\n        }\n        if (arg instanceof ee.Geometry) {\n          return new ee.Feature(arg);\n        }\n        if (arg instanceof ee.ComputedObject) {\n          return new ee.Element(arg.func, arg.args, arg.varName);\n        }\n        throw Error(\"Cannot convert \" + arg + \" to Element.\");\n      case \"Geometry\":\n        return arg instanceof ee.FeatureCollection ? ee.ApiFunction._call(\"Collection.geometry\", arg) : new ee.Geometry(arg);\n      case \"FeatureCollection\":\n      case \"Collection\":\n        return arg instanceof ee.Collection ? arg : new ee.FeatureCollection(arg);\n      case \"ImageCollection\":\n        return new ee.ImageCollection(arg);\n      case \"Filter\":\n        return new ee.Filter(arg);\n      case \"Algorithm\":\n        if (\"string\" === typeof arg) {\n          return new ee.ApiFunction(arg);\n        }\n        if (\"function\" === typeof arg) {\n          return ee.CustomFunction.create(arg, \"Object\", module$contents$goog$array_repeat(\"Object\", arg.length));\n        }\n        if (arg instanceof ee.Encodable) {\n          return arg;\n        }\n        throw Error(\"Argument is not a function: \" + arg);\n      case \"String\":\n        return ee.Types.isString(arg) || arg instanceof ee.String || arg instanceof ee.ComputedObject ? new ee.String(arg) : arg;\n      case \"Dictionary\":\n        return ee.Types.isRegularObject(arg) ? arg : new ee.Dictionary(arg);\n      case \"List\":\n        return new ee.List(arg);\n      case \"Number\":\n      case \"Float\":\n      case \"Long\":\n      case \"Integer\":\n      case \"Short\":\n      case \"Byte\":\n        return new ee.Number(arg);\n      default:\n        if (klass in exportedEE) {\n          var ctor = ee.ApiFunction.lookupInternal(klass);\n          if (arg instanceof exportedEE[klass]) {\n            return arg;\n          }\n          if (ctor) {\n            return new exportedEE[klass](arg);\n          }\n          if (\"string\" === typeof arg) {\n            if (arg in exportedEE[klass]) {\n              return exportedEE[klass][arg].call();\n            }\n            throw Error(\"Unknown algorithm: \" + klass + \".\" + arg);\n          }\n          return new exportedEE[klass](arg);\n        }\n        return arg;\n    }\n  }\n};\nee.initializeUnboundMethods_ = function() {\n  var unbound = ee.ApiFunction.unboundFunctions();\n  module$contents$goog$object_getKeys(unbound).sort().forEach(function(name) {\n    var func = unbound[name], signature = func.getSignature();\n    if (!signature.hidden) {\n      var nameParts = name.split(\".\"), target = ee.Algorithms;\n      for (target.signature = {}; 1 < nameParts.length;) {\n        var first = nameParts[0];\n        first in target || (target[first] = {signature:{}});\n        target = target[first];\n        nameParts = module$contents$goog$array_slice(nameParts, 1);\n      }\n      var bound = function(var_args) {\n        return func.callOrApply(void 0, Array.prototype.slice.call(arguments, 0));\n      };\n      bound.signature = signature;\n      bound.toString = goog.bind(func.toString, func);\n      target[nameParts[0]] = bound;\n    }\n  });\n};\nee.initializeGeneratedClasses_ = function() {\n  var signatures = ee.ApiFunction.allSignatures(), names = {}, returnTypes = {}, sig;\n  for (sig in signatures) {\n    var type = -1 != sig.indexOf(\".\") ? sig.slice(0, sig.indexOf(\".\")) : sig;\n    names[type] = !0;\n    var rtype = signatures[sig].returns.replace(/<.*>/, \"\");\n    returnTypes[rtype] = !0;\n  }\n  var exportedEE = goog.global.ee, name;\n  for (name in names) {\n    name in returnTypes && !(name in exportedEE) && (exportedEE[name] = ee.makeClass_(name), ee.generatedClasses_.push(name), signatures[name] ? (exportedEE[name].signature = signatures[name], exportedEE[name].signature.isConstructor = !0, ee.ApiFunction.boundSignatures_[name] = !0) : exportedEE[name].signature = {});\n  }\n  ee.Types.registerClasses(exportedEE);\n};\nee.resetGeneratedClasses_ = function() {\n  for (var exportedEE = goog.global.ee, i = 0; i < ee.generatedClasses_.length; i++) {\n    var name = ee.generatedClasses_[i];\n    ee.ApiFunction.clearApi(exportedEE[name]);\n    delete exportedEE[name];\n  }\n  ee.generatedClasses_ = [];\n  ee.Types.registerClasses(exportedEE);\n};\nee.makeClass_ = function(name) {\n  var target = function(var_args) {\n    var klass = goog.global.ee[name], args = Array.prototype.slice.call(arguments), onlyOneArg = 1 == args.length;\n    if (onlyOneArg && args[0] instanceof klass) {\n      return args[0];\n    }\n    if (!(this instanceof klass)) {\n      return ee.ComputedObject.construct(klass, args);\n    }\n    var ctor = ee.ApiFunction.lookupInternal(name), firstArgIsPrimitive = !(args[0] instanceof ee.ComputedObject), shouldUseConstructor = !1;\n    ctor && (onlyOneArg ? firstArgIsPrimitive ? shouldUseConstructor = !0 : args[0].func && args[0].func.getSignature().returns == ctor.getSignature().returns || (shouldUseConstructor = !0) : shouldUseConstructor = !0);\n    if (shouldUseConstructor) {\n      var namedArgs = ee.Types.useKeywordArgs(args, ctor.getSignature()) ? args[0] : ctor.nameArgs(args);\n      ee.ComputedObject.call(this, ctor, ctor.promoteArgs(namedArgs));\n    } else {\n      if (!onlyOneArg) {\n        throw Error(\"Too many arguments for ee.\" + name + \"(): \" + args);\n      }\n      if (firstArgIsPrimitive) {\n        throw Error(\"Invalid argument for ee.\" + name + \"(): \" + args + \". Must be a ComputedObject.\");\n      }\n      var theOneArg = args[0];\n      ee.ComputedObject.call(this, theOneArg.func, theOneArg.args, theOneArg.varName);\n    }\n  };\n  goog.inherits(target, ee.ComputedObject);\n  target.prototype.name = function() {\n    return name;\n  };\n  ee.ApiFunction.importApi(target, name, name);\n  return target;\n};\nee.Function.registerPromoter(ee.promote_);\nee.FloatTileOverlay = function(url, mapId, token) {\n  ee.AbstractOverlay.call(this, url, mapId, token);\n  this.tileSize = new google.maps.Size(ee.FloatTileOverlay.TILE_EDGE_LENGTH, ee.FloatTileOverlay.TILE_EDGE_LENGTH);\n  this.floatTiles_ = new goog.structs.Map();\n  this.floatTileDivs_ = new goog.structs.Map();\n};\n$jscomp.inherits(ee.FloatTileOverlay, ee.AbstractOverlay);\nee.FloatTileOverlay.prototype.getTile = function(coord, zoom, ownerDocument) {\n  var tileId = this.getTileId(coord, zoom), src = [this.url, tileId].join(\"/\") + \"?token=\" + this.token, uniqueTileId = [tileId, this.tileCounter, this.token].join(\"/\");\n  this.tilesLoading.push(uniqueTileId);\n  this.tileCounter += 1;\n  var div = goog.dom.createDom(goog.dom.TagName.DIV), floatTile = this.loadFloatTile_(src, coord, uniqueTileId, div);\n  this.dispatchTileEvent_();\n  return div;\n};\nee.FloatTileOverlay.prototype.loadFloatTile_ = function(tileUrl, coord, tileId, div) {\n  var tileRequest = goog.net.XmlHttp();\n  tileRequest.open(\"GET\", tileUrl, !0);\n  tileRequest.responseType = \"arraybuffer\";\n  tileRequest.onreadystatechange = goog.bind(function() {\n    if (tileRequest.readyState === XMLHttpRequest.DONE && 200 === tileRequest.status) {\n      var tileResponse = tileRequest.response;\n      if (tileResponse) {\n        var floatBuffer = new Float32Array(tileResponse);\n        this.handleFloatTileLoaded_(floatBuffer, coord, tileId, div);\n      } else {\n        throw this.tilesFailed.add(tileId), Error(\"Unable to request floating point array buffers.\");\n      }\n    }\n  }, this);\n  tileRequest.send();\n};\nee.FloatTileOverlay.prototype.handleFloatTileLoaded_ = function(floatTile, coord, tileId, div) {\n  this.floatTiles_.set(coord, floatTile);\n  this.floatTileDivs_.set(coord, div);\n  module$contents$goog$array_remove(this.tilesLoading, tileId);\n  this.dispatchTileEvent_();\n};\nee.FloatTileOverlay.prototype.getAllFloatTiles = function() {\n  return this.floatTiles_;\n};\nee.FloatTileOverlay.prototype.getAllFloatTileDivs = function() {\n  return this.floatTileDivs_;\n};\nee.FloatTileOverlay.prototype.getLoadedFloatTilesCount = function() {\n  return this.floatTiles_.getCount();\n};\nee.FloatTileOverlay.prototype.dispatchTileEvent_ = function() {\n  this.dispatchEvent(new ee.TileEvent(this.tilesLoading.length));\n};\nee.FloatTileOverlay.prototype.disposeInternal = function() {\n  this.floatTileDivs_ = this.floatTiles_ = null;\n  ee.AbstractOverlay.prototype.disposeInternal.call(this);\n};\ngoog.exportSymbol(\"ee.FloatTileOverlay\", ee.FloatTileOverlay);\nee.FloatTileOverlay.TILE_EDGE_LENGTH = 256;\nee.layers = {};\nvar module$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats = function(uniqueId) {\n  this.statsByZoom_ = new Map();\n  this.uniqueId_ = uniqueId;\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.addTileStats = function(start, end, zoom) {\n  this.getStatsForZoom_(zoom).tileLatencies.push(end - start);\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.incrementThrottleCounter = function(zoom) {\n  this.getStatsForZoom_(zoom).throttleCount++;\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.incrementErrorCounter = function(zoom) {\n  this.getStatsForZoom_(zoom).errorCount++;\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.clear = function() {\n  this.statsByZoom_.clear();\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.hasData = function() {\n  return 0 < this.statsByZoom_.size;\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.getSummaryList = function() {\n  var $jscomp$this = this, summaryList = [];\n  this.statsByZoom_.forEach(function(stats, zoom) {\n    return summaryList.push({layerId:$jscomp$this.uniqueId_, zoomLevel:zoom, tileLatencies:stats.tileLatencies, throttleCount:stats.throttleCount, errorCount:stats.errorCount,});\n  });\n  return summaryList;\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.prototype.getStatsForZoom_ = function(zoom) {\n  this.statsByZoom_.has(zoom) || this.statsByZoom_.set(zoom, {throttleCount:0, errorCount:0, tileLatencies:[],});\n  return this.statsByZoom_.get(zoom);\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.LayerStatsForZoomLevel = function() {\n};\nmodule$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats.Summary = function() {\n};\nee.layers.AbstractOverlayStats = module$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats;\ngoog.events.EventHandler = function(opt_scope) {\n  goog.Disposable.call(this);\n  this.handler_ = opt_scope;\n  this.keys_ = {};\n};\ngoog.inherits(goog.events.EventHandler, goog.Disposable);\ngoog.events.EventHandler.typeArray_ = [];\ngoog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_options) {\n  return this.listen_(src, type, opt_fn, opt_options);\n};\ngoog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, options, scope) {\n  return this.listen_(src, type, fn, options, scope);\n};\ngoog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_options, opt_scope) {\n  Array.isArray(type) || (type && (goog.events.EventHandler.typeArray_[0] = type.toString()), type = goog.events.EventHandler.typeArray_);\n  for (var i = 0; i < type.length; i++) {\n    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_options || !1, opt_scope || this.handler_ || this);\n    if (!listenerObj) {\n      break;\n    }\n    this.keys_[listenerObj.key] = listenerObj;\n  }\n  return this;\n};\ngoog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_options) {\n  return this.listenOnce_(src, type, opt_fn, opt_options);\n};\ngoog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {\n  return this.listenOnce_(src, type, fn, capture, scope);\n};\ngoog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_options, opt_scope) {\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      this.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_options, opt_scope || this.handler_ || this);\n    if (!listenerObj) {\n      return this;\n    }\n    this.keys_[listenerObj.key] = listenerObj;\n  }\n  return this;\n};\ngoog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {\n  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);\n};\ngoog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {\n  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);\n};\ngoog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {\n  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);\n  return this;\n};\ngoog.events.EventHandler.prototype.getListenerCount = function() {\n  var count = 0, key;\n  for (key in this.keys_) {\n    Object.prototype.hasOwnProperty.call(this.keys_, key) && count++;\n  }\n  return count;\n};\ngoog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_options, opt_scope) {\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      this.unlisten(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options, opt_scope || this.handler_ || this);\n    listener && (goog.events.unlistenByKey(listener), delete this.keys_[listener.key]);\n  }\n  return this;\n};\ngoog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {\n  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);\n  return this;\n};\ngoog.events.EventHandler.prototype.removeAll = function() {\n  module$contents$goog$object_forEach(this.keys_, function(listenerObj, key) {\n    this.keys_.hasOwnProperty(key) && goog.events.unlistenByKey(listenerObj);\n  }, this);\n  this.keys_ = {};\n};\ngoog.events.EventHandler.prototype.disposeInternal = function() {\n  goog.events.EventHandler.superClass_.disposeInternal.call(this);\n  this.removeAll();\n};\ngoog.events.EventHandler.prototype.handleEvent = function(e) {\n  throw Error(\"EventHandler.handleEvent not implemented\");\n};\ngoog.fs.DOMErrorLike = function() {\n};\ngoog.fs.Error = function(error, action) {\n  if (void 0 !== error.name) {\n    this.name = error.name, this.code = goog.fs.Error.getCodeFromName_(error.name);\n  } else {\n    var code = goog.asserts.assertNumber(error.code);\n    this.code = code;\n    this.name = goog.fs.Error.getNameFromCode_(code);\n  }\n  module$contents$goog$debug$Error_DebugError.call(this, goog.string.subs(\"%s %s\", this.name, action));\n};\ngoog.inherits(goog.fs.Error, module$contents$goog$debug$Error_DebugError);\ngoog.fs.Error.ErrorName = {ABORT:\"AbortError\", ENCODING:\"EncodingError\", INVALID_MODIFICATION:\"InvalidModificationError\", INVALID_STATE:\"InvalidStateError\", NOT_FOUND:\"NotFoundError\", NOT_READABLE:\"NotReadableError\", NO_MODIFICATION_ALLOWED:\"NoModificationAllowedError\", PATH_EXISTS:\"PathExistsError\", QUOTA_EXCEEDED:\"QuotaExceededError\", SECURITY:\"SecurityError\", SYNTAX:\"SyntaxError\", TYPE_MISMATCH:\"TypeMismatchError\"};\ngoog.fs.Error.ErrorCode = {NOT_FOUND:1, SECURITY:2, ABORT:3, NOT_READABLE:4, ENCODING:5, NO_MODIFICATION_ALLOWED:6, INVALID_STATE:7, SYNTAX:8, INVALID_MODIFICATION:9, QUOTA_EXCEEDED:10, TYPE_MISMATCH:11, PATH_EXISTS:12};\ngoog.fs.Error.getNameFromCode_ = function(code) {\n  var name = module$contents$goog$object_findKey(goog.fs.Error.NameToCodeMap_, function(c) {\n    return code == c;\n  });\n  if (void 0 === name) {\n    throw Error(\"Invalid code: \" + code);\n  }\n  return name;\n};\ngoog.fs.Error.getCodeFromName_ = function(name) {\n  return goog.fs.Error.NameToCodeMap_[name];\n};\nvar $jscomp$compprop4 = {};\ngoog.fs.Error.NameToCodeMap_ = ($jscomp$compprop4[goog.fs.Error.ErrorName.ABORT] = goog.fs.Error.ErrorCode.ABORT, $jscomp$compprop4[goog.fs.Error.ErrorName.ENCODING] = goog.fs.Error.ErrorCode.ENCODING, $jscomp$compprop4[goog.fs.Error.ErrorName.INVALID_MODIFICATION] = goog.fs.Error.ErrorCode.INVALID_MODIFICATION, $jscomp$compprop4[goog.fs.Error.ErrorName.INVALID_STATE] = goog.fs.Error.ErrorCode.INVALID_STATE, $jscomp$compprop4[goog.fs.Error.ErrorName.NOT_FOUND] = goog.fs.Error.ErrorCode.NOT_FOUND, \n$jscomp$compprop4[goog.fs.Error.ErrorName.NOT_READABLE] = goog.fs.Error.ErrorCode.NOT_READABLE, $jscomp$compprop4[goog.fs.Error.ErrorName.NO_MODIFICATION_ALLOWED] = goog.fs.Error.ErrorCode.NO_MODIFICATION_ALLOWED, $jscomp$compprop4[goog.fs.Error.ErrorName.PATH_EXISTS] = goog.fs.Error.ErrorCode.PATH_EXISTS, $jscomp$compprop4[goog.fs.Error.ErrorName.QUOTA_EXCEEDED] = goog.fs.Error.ErrorCode.QUOTA_EXCEEDED, $jscomp$compprop4[goog.fs.Error.ErrorName.SECURITY] = goog.fs.Error.ErrorCode.SECURITY, $jscomp$compprop4[goog.fs.Error.ErrorName.SYNTAX] = \ngoog.fs.Error.ErrorCode.SYNTAX, $jscomp$compprop4[goog.fs.Error.ErrorName.TYPE_MISMATCH] = goog.fs.Error.ErrorCode.TYPE_MISMATCH, $jscomp$compprop4);\ngoog.fs.ProgressEvent = function(event, target) {\n  goog.events.Event.call(this, event.type, target);\n  this.event_ = event;\n};\ngoog.inherits(goog.fs.ProgressEvent, goog.events.Event);\ngoog.fs.ProgressEvent.prototype.isLengthComputable = function() {\n  return this.event_.lengthComputable;\n};\ngoog.fs.ProgressEvent.prototype.getLoaded = function() {\n  return this.event_.loaded;\n};\ngoog.fs.ProgressEvent.prototype.getTotal = function() {\n  return this.event_.total;\n};\ngoog.fs.FileReader = function() {\n  goog.events.EventTarget.call(this);\n  this.reader_ = new FileReader();\n  this.reader_.onloadstart = goog.bind(this.dispatchProgressEvent_, this);\n  this.reader_.onprogress = goog.bind(this.dispatchProgressEvent_, this);\n  this.reader_.onload = goog.bind(this.dispatchProgressEvent_, this);\n  this.reader_.onabort = goog.bind(this.dispatchProgressEvent_, this);\n  this.reader_.onerror = goog.bind(this.dispatchProgressEvent_, this);\n  this.reader_.onloadend = goog.bind(this.dispatchProgressEvent_, this);\n};\ngoog.inherits(goog.fs.FileReader, goog.events.EventTarget);\ngoog.fs.FileReader.ReadyState = {INIT:0, LOADING:1, DONE:2};\ngoog.fs.FileReader.EventType = {LOAD_START:\"loadstart\", PROGRESS:\"progress\", LOAD:\"load\", ABORT:\"abort\", ERROR:\"error\", LOAD_END:\"loadend\"};\ngoog.fs.FileReader.prototype.abort = function() {\n  try {\n    this.reader_.abort();\n  } catch (e) {\n    throw new goog.fs.Error(e, \"aborting read\");\n  }\n};\ngoog.fs.FileReader.prototype.getReadyState = function() {\n  return this.reader_.readyState;\n};\ngoog.fs.FileReader.prototype.getResult = function() {\n  return this.reader_.result;\n};\ngoog.fs.FileReader.prototype.getError = function() {\n  return this.reader_.error && new goog.fs.Error(this.reader_.error, \"reading file\");\n};\ngoog.fs.FileReader.prototype.dispatchProgressEvent_ = function(event) {\n  this.dispatchEvent(new goog.fs.ProgressEvent(event, this));\n};\ngoog.fs.FileReader.prototype.disposeInternal = function() {\n  goog.fs.FileReader.superClass_.disposeInternal.call(this);\n  delete this.reader_;\n};\ngoog.fs.FileReader.prototype.readAsBinaryString = function(blob) {\n  this.reader_.readAsBinaryString(blob);\n};\ngoog.fs.FileReader.readAsBinaryString = function(blob) {\n  var reader = new goog.fs.FileReader(), d = goog.fs.FileReader.createDeferred_(reader);\n  reader.readAsBinaryString(blob);\n  return d;\n};\ngoog.fs.FileReader.prototype.readAsArrayBuffer = function(blob) {\n  this.reader_.readAsArrayBuffer(blob);\n};\ngoog.fs.FileReader.readAsArrayBuffer = function(blob) {\n  var reader = new goog.fs.FileReader(), d = goog.fs.FileReader.createDeferred_(reader);\n  reader.readAsArrayBuffer(blob);\n  return d;\n};\ngoog.fs.FileReader.prototype.readAsText = function(blob, opt_encoding) {\n  this.reader_.readAsText(blob, opt_encoding);\n};\ngoog.fs.FileReader.readAsText = function(blob, opt_encoding) {\n  var reader = new goog.fs.FileReader(), d = goog.fs.FileReader.createDeferred_(reader);\n  reader.readAsText(blob, opt_encoding);\n  return d;\n};\ngoog.fs.FileReader.prototype.readAsDataUrl = function(blob) {\n  this.reader_.readAsDataURL(blob);\n};\ngoog.fs.FileReader.readAsDataUrl = function(blob) {\n  var reader = new goog.fs.FileReader(), d = goog.fs.FileReader.createDeferred_(reader);\n  reader.readAsDataUrl(blob);\n  return d;\n};\ngoog.fs.FileReader.createDeferred_ = function(reader) {\n  var deferred = new goog.async.Deferred();\n  reader.listen(goog.fs.FileReader.EventType.LOAD_END, goog.partial(function(d, r, e) {\n    var result = r.getResult(), error = r.getError();\n    null == result || error ? d.errback(error) : d.callback(result);\n    r.dispose();\n  }, deferred, reader));\n  return deferred;\n};\ngoog.dom.vendor = {};\ngoog.dom.vendor.getVendorJsPrefix = function() {\n  return goog.userAgent.WEBKIT ? \"Webkit\" : goog.userAgent.GECKO ? \"Moz\" : goog.userAgent.IE ? \"ms\" : null;\n};\ngoog.dom.vendor.getVendorPrefix = function() {\n  return goog.userAgent.WEBKIT ? \"-webkit\" : goog.userAgent.GECKO ? \"-moz\" : goog.userAgent.IE ? \"-ms\" : null;\n};\ngoog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {\n  if (opt_object && propertyName in opt_object) {\n    return propertyName;\n  }\n  var prefix = goog.dom.vendor.getVendorJsPrefix();\n  if (prefix) {\n    prefix = prefix.toLowerCase();\n    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);\n    return void 0 === opt_object || prefixedPropertyName in opt_object ? prefixedPropertyName : null;\n  }\n  return null;\n};\ngoog.dom.vendor.getPrefixedEventType = function(eventType) {\n  return ((goog.dom.vendor.getVendorJsPrefix() || \"\") + eventType).toLowerCase();\n};\ngoog.math.Box = function(top, right, bottom, left) {\n  this.top = top;\n  this.right = right;\n  this.bottom = bottom;\n  this.left = left;\n};\ngoog.math.Box.boundingBox = function(var_args) {\n  for (var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x), i = 1; i < arguments.length; i++) {\n    box.expandToIncludeCoordinate(arguments[i]);\n  }\n  return box;\n};\ngoog.math.Box.prototype.getWidth = function() {\n  return this.right - this.left;\n};\ngoog.math.Box.prototype.getHeight = function() {\n  return this.bottom - this.top;\n};\ngoog.math.Box.prototype.clone = function() {\n  return new goog.math.Box(this.top, this.right, this.bottom, this.left);\n};\ngoog.DEBUG && (goog.math.Box.prototype.toString = function() {\n  return \"(\" + this.top + \"t, \" + this.right + \"r, \" + this.bottom + \"b, \" + this.left + \"l)\";\n});\ngoog.math.Box.prototype.contains = function(other) {\n  return goog.math.Box.contains(this, other);\n};\ngoog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {\n  goog.isObject(top) ? (this.top -= top.top, this.right += top.right, this.bottom += top.bottom, this.left -= top.left) : (this.top -= top, this.right += Number(opt_right), this.bottom += Number(opt_bottom), this.left -= Number(opt_left));\n  return this;\n};\ngoog.math.Box.prototype.expandToInclude = function(box) {\n  this.left = Math.min(this.left, box.left);\n  this.top = Math.min(this.top, box.top);\n  this.right = Math.max(this.right, box.right);\n  this.bottom = Math.max(this.bottom, box.bottom);\n};\ngoog.math.Box.prototype.expandToIncludeCoordinate = function(coord) {\n  this.top = Math.min(this.top, coord.y);\n  this.right = Math.max(this.right, coord.x);\n  this.bottom = Math.max(this.bottom, coord.y);\n  this.left = Math.min(this.left, coord.x);\n};\ngoog.math.Box.equals = function(a, b) {\n  return a == b ? !0 : a && b ? a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left : !1;\n};\ngoog.math.Box.contains = function(box, other) {\n  return box && other ? other instanceof goog.math.Box ? other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom : other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom : !1;\n};\ngoog.math.Box.relativePositionX = function(box, coord) {\n  return coord.x < box.left ? coord.x - box.left : coord.x > box.right ? coord.x - box.right : 0;\n};\ngoog.math.Box.relativePositionY = function(box, coord) {\n  return coord.y < box.top ? coord.y - box.top : coord.y > box.bottom ? coord.y - box.bottom : 0;\n};\ngoog.math.Box.distance = function(box, coord) {\n  var x = goog.math.Box.relativePositionX(box, coord), y = goog.math.Box.relativePositionY(box, coord);\n  return Math.sqrt(x * x + y * y);\n};\ngoog.math.Box.intersects = function(a, b) {\n  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;\n};\ngoog.math.Box.intersectsWithPadding = function(a, b, padding) {\n  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;\n};\ngoog.math.Box.prototype.ceil = function() {\n  this.top = Math.ceil(this.top);\n  this.right = Math.ceil(this.right);\n  this.bottom = Math.ceil(this.bottom);\n  this.left = Math.ceil(this.left);\n  return this;\n};\ngoog.math.Box.prototype.floor = function() {\n  this.top = Math.floor(this.top);\n  this.right = Math.floor(this.right);\n  this.bottom = Math.floor(this.bottom);\n  this.left = Math.floor(this.left);\n  return this;\n};\ngoog.math.Box.prototype.round = function() {\n  this.top = Math.round(this.top);\n  this.right = Math.round(this.right);\n  this.bottom = Math.round(this.bottom);\n  this.left = Math.round(this.left);\n  return this;\n};\ngoog.math.Box.prototype.translate = function(tx, opt_ty) {\n  tx instanceof goog.math.Coordinate ? (this.left += tx.x, this.right += tx.x, this.top += tx.y, this.bottom += tx.y) : (goog.asserts.assertNumber(tx), this.left += tx, this.right += tx, \"number\" === typeof opt_ty && (this.top += opt_ty, this.bottom += opt_ty));\n  return this;\n};\ngoog.math.Box.prototype.scale = function(sx, opt_sy) {\n  var sy = \"number\" === typeof opt_sy ? opt_sy : sx;\n  this.left *= sx;\n  this.right *= sx;\n  this.top *= sy;\n  this.bottom *= sy;\n  return this;\n};\ngoog.math.IRect = function() {\n};\ngoog.math.Rect = function(x, y, w, h) {\n  this.left = x;\n  this.top = y;\n  this.width = w;\n  this.height = h;\n};\ngoog.math.Rect.prototype.clone = function() {\n  return new goog.math.Rect(this.left, this.top, this.width, this.height);\n};\ngoog.math.Rect.prototype.toBox = function() {\n  return new goog.math.Box(this.top, this.left + this.width, this.top + this.height, this.left);\n};\ngoog.math.Rect.createFromPositionAndSize = function(position, size) {\n  return new goog.math.Rect(position.x, position.y, size.width, size.height);\n};\ngoog.math.Rect.createFromBox = function(box) {\n  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);\n};\ngoog.DEBUG && (goog.math.Rect.prototype.toString = function() {\n  return \"(\" + this.left + \", \" + this.top + \" - \" + this.width + \"w x \" + this.height + \"h)\";\n});\ngoog.math.Rect.equals = function(a, b) {\n  return a == b ? !0 : a && b ? a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height : !1;\n};\ngoog.math.Rect.prototype.intersection = function(rect) {\n  var x0 = Math.max(this.left, rect.left), x1 = Math.min(this.left + this.width, rect.left + rect.width);\n  if (x0 <= x1) {\n    var y0 = Math.max(this.top, rect.top), y1 = Math.min(this.top + this.height, rect.top + rect.height);\n    if (y0 <= y1) {\n      return this.left = x0, this.top = y0, this.width = x1 - x0, this.height = y1 - y0, !0;\n    }\n  }\n  return !1;\n};\ngoog.math.Rect.intersection = function(a, b) {\n  var x0 = Math.max(a.left, b.left), x1 = Math.min(a.left + a.width, b.left + b.width);\n  if (x0 <= x1) {\n    var y0 = Math.max(a.top, b.top), y1 = Math.min(a.top + a.height, b.top + b.height);\n    if (y0 <= y1) {\n      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);\n    }\n  }\n  return null;\n};\ngoog.math.Rect.intersects = function(a, b) {\n  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;\n};\ngoog.math.Rect.prototype.intersects = function(rect) {\n  return goog.math.Rect.intersects(this, rect);\n};\ngoog.math.Rect.difference = function(a, b) {\n  var intersection = goog.math.Rect.intersection(a, b);\n  if (!intersection || !intersection.height || !intersection.width) {\n    return [a.clone()];\n  }\n  var result = [], top = a.top, height = a.height, ar = a.left + a.width, ab = a.top + a.height, br = b.left + b.width, bb = b.top + b.height;\n  b.top > a.top && (result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top)), top = b.top, height -= b.top - a.top);\n  bb < ab && (result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb)), height = bb - top);\n  b.left > a.left && result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));\n  br < ar && result.push(new goog.math.Rect(br, top, ar - br, height));\n  return result;\n};\ngoog.math.Rect.prototype.difference = function(rect) {\n  return goog.math.Rect.difference(this, rect);\n};\ngoog.math.Rect.prototype.boundingRect = function(rect) {\n  var right = Math.max(this.left + this.width, rect.left + rect.width), bottom = Math.max(this.top + this.height, rect.top + rect.height);\n  this.left = Math.min(this.left, rect.left);\n  this.top = Math.min(this.top, rect.top);\n  this.width = right - this.left;\n  this.height = bottom - this.top;\n};\ngoog.math.Rect.boundingRect = function(a, b) {\n  if (!a || !b) {\n    return null;\n  }\n  var newRect = new goog.math.Rect(a.left, a.top, a.width, a.height);\n  newRect.boundingRect(b);\n  return newRect;\n};\ngoog.math.Rect.prototype.contains = function(another) {\n  return another instanceof goog.math.Coordinate ? another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height : this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;\n};\ngoog.math.Rect.prototype.squaredDistance = function(point) {\n  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0), dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);\n  return dx * dx + dy * dy;\n};\ngoog.math.Rect.prototype.distance = function(point) {\n  return Math.sqrt(this.squaredDistance(point));\n};\ngoog.math.Rect.prototype.getSize = function() {\n  return new goog.math.Size(this.width, this.height);\n};\ngoog.math.Rect.prototype.getTopLeft = function() {\n  return new goog.math.Coordinate(this.left, this.top);\n};\ngoog.math.Rect.prototype.getCenter = function() {\n  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);\n};\ngoog.math.Rect.prototype.getBottomRight = function() {\n  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);\n};\ngoog.math.Rect.prototype.ceil = function() {\n  this.left = Math.ceil(this.left);\n  this.top = Math.ceil(this.top);\n  this.width = Math.ceil(this.width);\n  this.height = Math.ceil(this.height);\n  return this;\n};\ngoog.math.Rect.prototype.floor = function() {\n  this.left = Math.floor(this.left);\n  this.top = Math.floor(this.top);\n  this.width = Math.floor(this.width);\n  this.height = Math.floor(this.height);\n  return this;\n};\ngoog.math.Rect.prototype.round = function() {\n  this.left = Math.round(this.left);\n  this.top = Math.round(this.top);\n  this.width = Math.round(this.width);\n  this.height = Math.round(this.height);\n  return this;\n};\ngoog.math.Rect.prototype.translate = function(tx, opt_ty) {\n  tx instanceof goog.math.Coordinate ? (this.left += tx.x, this.top += tx.y) : (this.left += goog.asserts.assertNumber(tx), \"number\" === typeof opt_ty && (this.top += opt_ty));\n  return this;\n};\ngoog.math.Rect.prototype.scale = function(sx, opt_sy) {\n  var sy = \"number\" === typeof opt_sy ? opt_sy : sx;\n  this.left *= sx;\n  this.width *= sx;\n  this.top *= sy;\n  this.height *= sy;\n  return this;\n};\ngoog.style = {};\ngoog.style.setStyle = function(element, style, opt_value) {\n  if (\"string\" === typeof style) {\n    goog.style.setStyle_(element, opt_value, style);\n  } else {\n    for (var key in style) {\n      goog.style.setStyle_(element, style[key], key);\n    }\n  }\n};\ngoog.style.setStyle_ = function(element, value, style) {\n  var propertyName = goog.style.getVendorJsStyleName_(element, style);\n  propertyName && (element.style[propertyName] = value);\n};\ngoog.style.styleNameCache_ = {};\ngoog.style.getVendorJsStyleName_ = function(element, style) {\n  var propertyName = goog.style.styleNameCache_[style];\n  if (!propertyName) {\n    var camelStyle = goog.string.toCamelCase(style);\n    propertyName = camelStyle;\n    if (void 0 === element.style[camelStyle]) {\n      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);\n      void 0 !== element.style[prefixedStyle] && (propertyName = prefixedStyle);\n    }\n    goog.style.styleNameCache_[style] = propertyName;\n  }\n  return propertyName;\n};\ngoog.style.getVendorStyleName_ = function(element, style) {\n  var camelStyle = goog.string.toCamelCase(style);\n  if (void 0 === element.style[camelStyle]) {\n    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);\n    if (void 0 !== element.style[prefixedStyle]) {\n      return goog.dom.vendor.getVendorPrefix() + \"-\" + style;\n    }\n  }\n  return style;\n};\ngoog.style.getStyle = function(element, property) {\n  var styleValue = element.style[goog.string.toCamelCase(property)];\n  return \"undefined\" !== typeof styleValue ? styleValue : element.style[goog.style.getVendorJsStyleName_(element, property)] || \"\";\n};\ngoog.style.getComputedStyle = function(element, property) {\n  var doc = goog.dom.getOwnerDocument(element);\n  if (doc.defaultView && doc.defaultView.getComputedStyle) {\n    var styles = doc.defaultView.getComputedStyle(element, null);\n    if (styles) {\n      return styles[property] || styles.getPropertyValue(property) || \"\";\n    }\n  }\n  return \"\";\n};\ngoog.style.getCascadedStyle = function(element, style) {\n  return element.currentStyle ? element.currentStyle[style] : null;\n};\ngoog.style.getStyle_ = function(element, style) {\n  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];\n};\ngoog.style.getComputedBoxSizing = function(element) {\n  return goog.style.getStyle_(element, \"boxSizing\") || goog.style.getStyle_(element, \"MozBoxSizing\") || goog.style.getStyle_(element, \"WebkitBoxSizing\") || null;\n};\ngoog.style.getComputedPosition = function(element) {\n  return goog.style.getStyle_(element, \"position\");\n};\ngoog.style.getBackgroundColor = function(element) {\n  return goog.style.getStyle_(element, \"backgroundColor\");\n};\ngoog.style.getComputedOverflowX = function(element) {\n  return goog.style.getStyle_(element, \"overflowX\");\n};\ngoog.style.getComputedOverflowY = function(element) {\n  return goog.style.getStyle_(element, \"overflowY\");\n};\ngoog.style.getComputedZIndex = function(element) {\n  return goog.style.getStyle_(element, \"zIndex\");\n};\ngoog.style.getComputedTextAlign = function(element) {\n  return goog.style.getStyle_(element, \"textAlign\");\n};\ngoog.style.getComputedCursor = function(element) {\n  return goog.style.getStyle_(element, \"cursor\");\n};\ngoog.style.getComputedTransform = function(element) {\n  var property = goog.style.getVendorStyleName_(element, \"transform\");\n  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, \"transform\");\n};\ngoog.style.setPosition = function(el, arg1, opt_arg2) {\n  if (arg1 instanceof goog.math.Coordinate) {\n    var x = arg1.x;\n    var y = arg1.y;\n  } else {\n    x = arg1, y = opt_arg2;\n  }\n  el.style.left = goog.style.getPixelStyleValue_(x, !1);\n  el.style.top = goog.style.getPixelStyleValue_(y, !1);\n};\ngoog.style.getPosition = function(element) {\n  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);\n};\ngoog.style.getClientViewportElement = function(opt_node) {\n  var doc = opt_node ? goog.dom.getOwnerDocument(opt_node) : goog.dom.getDocument();\n  return !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9) || goog.dom.getDomHelper(doc).isCss1CompatMode() ? doc.documentElement : doc.body;\n};\ngoog.style.getViewportPageOffset = function(doc) {\n  var body = doc.body, documentElement = doc.documentElement;\n  return new goog.math.Coordinate(body.scrollLeft || documentElement.scrollLeft, body.scrollTop || documentElement.scrollTop);\n};\ngoog.style.getBoundingClientRect_ = function(el) {\n  try {\n    return el.getBoundingClientRect();\n  } catch (e) {\n    return {left:0, top:0, right:0, bottom:0};\n  }\n};\ngoog.style.getOffsetParent = function(element) {\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {\n    return goog.asserts.assert(element && \"offsetParent\" in element), element.offsetParent;\n  }\n  for (var doc = goog.dom.getOwnerDocument(element), positionStyle = goog.style.getStyle_(element, \"position\"), skipStatic = \"fixed\" == positionStyle || \"absolute\" == positionStyle, parent = element.parentNode; parent && parent != doc; parent = parent.parentNode) {\n    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host && (parent = parent.host), positionStyle = goog.style.getStyle_(parent, \"position\"), skipStatic = skipStatic && \"static\" == positionStyle && parent != doc.documentElement && parent != doc.body, !skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || \"fixed\" == positionStyle || \"absolute\" == positionStyle || \"relative\" == positionStyle)) {\n      return parent;\n    }\n  }\n  return null;\n};\ngoog.style.getVisibleRectForElement = function(element) {\n  for (var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0), dom = goog.dom.getDomHelper(element), body = dom.getDocument().body, documentElement = dom.getDocument().documentElement, scrollEl = dom.getDocumentScrollElement(), el = element; el = goog.style.getOffsetParent(el);) {\n    if (!(goog.userAgent.IE && 0 == el.clientWidth || goog.userAgent.WEBKIT && 0 == el.clientHeight && el == body) && el != body && el != documentElement && \"visible\" != goog.style.getStyle_(el, \"overflow\")) {\n      var pos = goog.style.getPageOffset(el), client = goog.style.getClientLeftTop(el);\n      pos.x += client.x;\n      pos.y += client.y;\n      visibleRect.top = Math.max(visibleRect.top, pos.y);\n      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.x);\n    }\n  }\n  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;\n  visibleRect.left = Math.max(visibleRect.left, scrollX);\n  visibleRect.top = Math.max(visibleRect.top, scrollY);\n  var winSize = dom.getViewportSize();\n  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);\n  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);\n  return 0 <= visibleRect.top && 0 <= visibleRect.left && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n};\ngoog.style.getContainerOffsetToScrollInto = function(element, opt_container, opt_center) {\n  var container = opt_container || goog.dom.getDocumentScrollElement(), elementPos = goog.style.getPageOffset(element), containerPos = goog.style.getPageOffset(container), containerBorder = goog.style.getBorderBox(container);\n  if (container == goog.dom.getDocumentScrollElement()) {\n    var relX = elementPos.x - container.scrollLeft, relY = elementPos.y - container.scrollTop;\n    goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10) && (relX += containerBorder.left, relY += containerBorder.top);\n  } else {\n    relX = elementPos.x - containerPos.x - containerBorder.left, relY = elementPos.y - containerPos.y - containerBorder.top;\n  }\n  var elementSize = goog.style.getSizeWithDisplay_(element), spaceX = container.clientWidth - elementSize.width, spaceY = container.clientHeight - elementSize.height, scrollLeft = container.scrollLeft, scrollTop = container.scrollTop;\n  opt_center ? (scrollLeft += relX - spaceX / 2, scrollTop += relY - spaceY / 2) : (scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0)), scrollTop += Math.min(relY, Math.max(relY - spaceY, 0)));\n  return new goog.math.Coordinate(scrollLeft, scrollTop);\n};\ngoog.style.scrollIntoContainerView = function(element, opt_container, opt_center) {\n  var container = opt_container || goog.dom.getDocumentScrollElement(), offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);\n  container.scrollLeft = offset.x;\n  container.scrollTop = offset.y;\n};\ngoog.style.getClientLeftTop = function(el) {\n  return new goog.math.Coordinate(el.clientLeft, el.clientTop);\n};\ngoog.style.getPageOffset = function(el) {\n  var doc = goog.dom.getOwnerDocument(el);\n  goog.asserts.assertObject(el, \"Parameter is required\");\n  var pos = new goog.math.Coordinate(0, 0), viewportElement = goog.style.getClientViewportElement(doc);\n  if (el == viewportElement) {\n    return pos;\n  }\n  var box = goog.style.getBoundingClientRect_(el), scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();\n  pos.x = box.left + scrollCoord.x;\n  pos.y = box.top + scrollCoord.y;\n  return pos;\n};\ngoog.style.getPageOffsetLeft = function(el) {\n  return goog.style.getPageOffset(el).x;\n};\ngoog.style.getPageOffsetTop = function(el) {\n  return goog.style.getPageOffset(el).y;\n};\ngoog.style.getFramedPageOffset = function(el, relativeWin) {\n  var position = new goog.math.Coordinate(0, 0), currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));\n  if (!goog.reflect.canAccessProperty(currentWin, \"parent\")) {\n    return position;\n  }\n  var currentEl = el;\n  do {\n    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));\n    position.x += offset.x;\n    position.y += offset.y;\n  } while (currentWin && currentWin != relativeWin && currentWin != currentWin.parent && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));\n  return position;\n};\ngoog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {\n  if (origBase.getDocument() != newBase.getDocument()) {\n    var body = origBase.getDocument().body, pos = goog.style.getFramedPageOffset(body, newBase.getWindow());\n    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));\n    !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9) || origBase.isCss1CompatMode() || (pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll()));\n    rect.left += pos.x;\n    rect.top += pos.y;\n  }\n};\ngoog.style.getRelativePosition = function(a, b) {\n  var ap = goog.style.getClientPosition(a), bp = goog.style.getClientPosition(b);\n  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);\n};\ngoog.style.getClientPositionForElement_ = function(el) {\n  var box = goog.style.getBoundingClientRect_(el);\n  return new goog.math.Coordinate(box.left, box.top);\n};\ngoog.style.getClientPosition = function(el) {\n  goog.asserts.assert(el);\n  if (el.nodeType == goog.dom.NodeType.ELEMENT) {\n    return goog.style.getClientPositionForElement_(el);\n  }\n  var targetEvent = el.changedTouches ? el.changedTouches[0] : el;\n  return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);\n};\ngoog.style.setPageOffset = function(el, x, opt_y) {\n  var cur = goog.style.getPageOffset(el);\n  x instanceof goog.math.Coordinate && (opt_y = x.y, x = x.x);\n  var dx = goog.asserts.assertNumber(x) - cur.x;\n  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + (Number(opt_y) - cur.y));\n};\ngoog.style.setSize = function(element, w, opt_h) {\n  if (w instanceof goog.math.Size) {\n    var h = w.height;\n    w = w.width;\n  } else {\n    if (void 0 == opt_h) {\n      throw Error(\"missing height argument\");\n    }\n    h = opt_h;\n  }\n  goog.style.setWidth(element, w);\n  goog.style.setHeight(element, h);\n};\ngoog.style.getPixelStyleValue_ = function(value, round) {\n  \"number\" == typeof value && (value = (round ? Math.round(value) : value) + \"px\");\n  return value;\n};\ngoog.style.setHeight = function(element, height) {\n  element.style.height = goog.style.getPixelStyleValue_(height, !0);\n};\ngoog.style.setWidth = function(element, width) {\n  element.style.width = goog.style.getPixelStyleValue_(width, !0);\n};\ngoog.style.getSize = function(element) {\n  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, element);\n};\ngoog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {\n  if (\"none\" != goog.style.getStyle_(element, \"display\")) {\n    return fn(element);\n  }\n  var style = element.style, originalDisplay = style.display, originalVisibility = style.visibility, originalPosition = style.position;\n  style.visibility = \"hidden\";\n  style.position = \"absolute\";\n  style.display = \"inline\";\n  var retVal = fn(element);\n  style.display = originalDisplay;\n  style.position = originalPosition;\n  style.visibility = originalVisibility;\n  return retVal;\n};\ngoog.style.getSizeWithDisplay_ = function(element) {\n  var offsetWidth = element.offsetWidth, offsetHeight = element.offsetHeight, webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;\n  if ((void 0 === offsetWidth || webkitOffsetsZero) && element.getBoundingClientRect) {\n    var clientRect = goog.style.getBoundingClientRect_(element);\n    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);\n  }\n  return new goog.math.Size(offsetWidth, offsetHeight);\n};\ngoog.style.getTransformedSize = function(element) {\n  if (!element.getBoundingClientRect) {\n    return null;\n  }\n  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);\n  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);\n};\ngoog.style.getBounds = function(element) {\n  var o = goog.style.getPageOffset(element), s = goog.style.getSize(element);\n  return new goog.math.Rect(o.x, o.y, s.width, s.height);\n};\ngoog.style.toCamelCase = function(selector) {\n  return goog.string.toCamelCase(String(selector));\n};\ngoog.style.toSelectorCase = function(selector) {\n  return goog.string.toSelectorCase(selector);\n};\ngoog.style.getOpacity = function(el) {\n  goog.asserts.assert(el);\n  var style = el.style, result = \"\";\n  if (\"opacity\" in style) {\n    result = style.opacity;\n  } else {\n    if (\"MozOpacity\" in style) {\n      result = style.MozOpacity;\n    } else {\n      if (\"filter\" in style) {\n        var match = style.filter.match(/alpha\\(opacity=([\\d.]+)\\)/);\n        match && (result = String(match[1] / 100));\n      }\n    }\n  }\n  return \"\" == result ? result : Number(result);\n};\ngoog.style.setOpacity = function(el, alpha) {\n  goog.asserts.assert(el);\n  var style = el.style;\n  \"opacity\" in style ? style.opacity = alpha : \"MozOpacity\" in style ? style.MozOpacity = alpha : \"filter\" in style && (style.filter = \"\" === alpha ? \"\" : \"alpha(opacity=\" + 100 * Number(alpha) + \")\");\n};\ngoog.style.setTransparentBackgroundImage = function(el, src) {\n  var style = el.style;\n  style.backgroundImage = \"url(\" + src + \")\";\n  style.backgroundPosition = \"top left\";\n  style.backgroundRepeat = \"no-repeat\";\n};\ngoog.style.clearTransparentBackgroundImage = function(el) {\n  var style = el.style;\n  \"filter\" in style ? style.filter = \"\" : style.backgroundImage = \"none\";\n};\ngoog.style.showElement = function(el, display) {\n  goog.style.setElementShown(el, display);\n};\ngoog.style.setElementShown = function(el, isShown) {\n  el.style.display = isShown ? \"\" : \"none\";\n};\ngoog.style.isElementShown = function(el) {\n  return \"none\" != el.style.display;\n};\ngoog.style.installSafeStyleSheet = function(safeStyleSheet, opt_node) {\n  var dh = goog.dom.getDomHelper(opt_node), doc = dh.getDocument();\n  if (goog.userAgent.IE && doc.createStyleSheet) {\n    var styleSheet = doc.createStyleSheet();\n    goog.style.setSafeStyleSheet(styleSheet, safeStyleSheet);\n    return styleSheet;\n  }\n  var head = dh.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];\n  if (!head) {\n    var body = dh.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];\n    head = dh.createDom(goog.dom.TagName.HEAD);\n    body.parentNode.insertBefore(head, body);\n  }\n  var el = dh.createDom(goog.dom.TagName.STYLE), nonce = goog.dom.safe.getStyleNonce();\n  nonce && el.setAttribute(\"nonce\", nonce);\n  goog.style.setSafeStyleSheet(el, safeStyleSheet);\n  dh.appendChild(head, el);\n  return el;\n};\ngoog.style.uninstallStyles = function(styleSheet) {\n  goog.dom.removeNode(styleSheet.ownerNode || styleSheet.owningElement || styleSheet);\n};\ngoog.style.setSafeStyleSheet = function(element, safeStyleSheet) {\n  var stylesString = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(safeStyleSheet);\n  goog.userAgent.IE && void 0 !== element.cssText ? element.cssText = stylesString : goog.global.trustedTypes ? goog.dom.setTextContent(element, stylesString) : element.innerHTML = stylesString;\n};\ngoog.style.setPreWrap = function(el) {\n  el.style.whiteSpace = goog.userAgent.GECKO ? \"-moz-pre-wrap\" : \"pre-wrap\";\n};\ngoog.style.setInlineBlock = function(el) {\n  var style = el.style;\n  style.position = \"relative\";\n  style.display = \"inline-block\";\n};\ngoog.style.isRightToLeft = function(el) {\n  return \"rtl\" == goog.style.getStyle_(el, \"direction\");\n};\ngoog.style.unselectableStyle_ = goog.userAgent.GECKO ? \"MozUserSelect\" : goog.userAgent.WEBKIT || goog.userAgent.EDGE ? \"WebkitUserSelect\" : null;\ngoog.style.isUnselectable = function(el) {\n  return goog.style.unselectableStyle_ ? \"none\" == el.style[goog.style.unselectableStyle_].toLowerCase() : goog.userAgent.IE ? \"on\" == el.getAttribute(\"unselectable\") : !1;\n};\ngoog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {\n  var descendants = opt_noRecurse ? null : el.getElementsByTagName(\"*\"), name = goog.style.unselectableStyle_;\n  if (name) {\n    var value = unselectable ? \"none\" : \"\";\n    el.style && (el.style[name] = value);\n    if (descendants) {\n      for (var i = 0, descendant; descendant = descendants[i]; i++) {\n        descendant.style && (descendant.style[name] = value);\n      }\n    }\n  } else {\n    if (goog.userAgent.IE && (value = unselectable ? \"on\" : \"\", el.setAttribute(\"unselectable\", value), descendants)) {\n      for (i = 0; descendant = descendants[i]; i++) {\n        descendant.setAttribute(\"unselectable\", value);\n      }\n    }\n  }\n};\ngoog.style.getBorderBoxSize = function(element) {\n  return new goog.math.Size(element.offsetWidth, element.offsetHeight);\n};\ngoog.style.setBorderBoxSize = function(element, size) {\n  var doc = goog.dom.getOwnerDocument(element), isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();\n  if (!goog.userAgent.IE || goog.userAgent.isVersionOrHigher(\"10\") || isCss1CompatMode) {\n    goog.style.setBoxSizingSize_(element, size, \"border-box\");\n  } else {\n    var style = element.style;\n    if (isCss1CompatMode) {\n      var paddingBox = goog.style.getPaddingBox(element), borderBox = goog.style.getBorderBox(element);\n      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;\n      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;\n    } else {\n      style.pixelWidth = size.width, style.pixelHeight = size.height;\n    }\n  }\n};\ngoog.style.getContentBoxSize = function(element) {\n  var doc = goog.dom.getOwnerDocument(element), ieCurrentStyle = goog.userAgent.IE && element.currentStyle;\n  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && \"auto\" != ieCurrentStyle.width && \"auto\" != ieCurrentStyle.height && !ieCurrentStyle.boxSizing) {\n    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, \"width\", \"pixelWidth\"), height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, \"height\", \"pixelHeight\");\n    return new goog.math.Size(width, height);\n  }\n  var borderBoxSize = goog.style.getBorderBoxSize(element), paddingBox = goog.style.getPaddingBox(element), borderBox = goog.style.getBorderBox(element);\n  return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);\n};\ngoog.style.setContentBoxSize = function(element, size) {\n  var doc = goog.dom.getOwnerDocument(element), isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();\n  if (!goog.userAgent.IE || goog.userAgent.isVersionOrHigher(\"10\") || isCss1CompatMode) {\n    goog.style.setBoxSizingSize_(element, size, \"content-box\");\n  } else {\n    var style = element.style;\n    if (isCss1CompatMode) {\n      style.pixelWidth = size.width, style.pixelHeight = size.height;\n    } else {\n      var paddingBox = goog.style.getPaddingBox(element), borderBox = goog.style.getBorderBox(element);\n      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;\n      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;\n    }\n  }\n};\ngoog.style.setBoxSizingSize_ = function(element, size, boxSizing) {\n  var style = element.style;\n  goog.userAgent.GECKO ? style.MozBoxSizing = boxSizing : goog.userAgent.WEBKIT ? style.WebkitBoxSizing = boxSizing : style.boxSizing = boxSizing;\n  style.width = Math.max(size.width, 0) + \"px\";\n  style.height = Math.max(size.height, 0) + \"px\";\n};\ngoog.style.getIePixelValue_ = function(element, value, name, pixelName) {\n  if (/^\\d+px?$/.test(value)) {\n    return parseInt(value, 10);\n  }\n  var oldStyleValue = element.style[name], oldRuntimeValue = element.runtimeStyle[name];\n  element.runtimeStyle[name] = element.currentStyle[name];\n  element.style[name] = value;\n  var pixelValue = element.style[pixelName];\n  element.style[name] = oldStyleValue;\n  element.runtimeStyle[name] = oldRuntimeValue;\n  return +pixelValue;\n};\ngoog.style.getIePixelDistance_ = function(element, propName) {\n  var value = goog.style.getCascadedStyle(element, propName);\n  return value ? goog.style.getIePixelValue_(element, value, \"left\", \"pixelLeft\") : 0;\n};\ngoog.style.getBox_ = function(element, stylePrefix) {\n  if (goog.userAgent.IE) {\n    var left = goog.style.getIePixelDistance_(element, stylePrefix + \"Left\"), right = goog.style.getIePixelDistance_(element, stylePrefix + \"Right\"), top = goog.style.getIePixelDistance_(element, stylePrefix + \"Top\"), bottom = goog.style.getIePixelDistance_(element, stylePrefix + \"Bottom\");\n    return new goog.math.Box(top, right, bottom, left);\n  }\n  left = goog.style.getComputedStyle(element, stylePrefix + \"Left\");\n  right = goog.style.getComputedStyle(element, stylePrefix + \"Right\");\n  top = goog.style.getComputedStyle(element, stylePrefix + \"Top\");\n  bottom = goog.style.getComputedStyle(element, stylePrefix + \"Bottom\");\n  return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));\n};\ngoog.style.getPaddingBox = function(element) {\n  return goog.style.getBox_(element, \"padding\");\n};\ngoog.style.getMarginBox = function(element) {\n  return goog.style.getBox_(element, \"margin\");\n};\ngoog.style.ieBorderWidthKeywords_ = {thin:2, medium:4, thick:6};\ngoog.style.getIePixelBorder_ = function(element, prop) {\n  if (\"none\" == goog.style.getCascadedStyle(element, prop + \"Style\")) {\n    return 0;\n  }\n  var width = goog.style.getCascadedStyle(element, prop + \"Width\");\n  return width in goog.style.ieBorderWidthKeywords_ ? goog.style.ieBorderWidthKeywords_[width] : goog.style.getIePixelValue_(element, width, \"left\", \"pixelLeft\");\n};\ngoog.style.getBorderBox = function(element) {\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    var left = goog.style.getIePixelBorder_(element, \"borderLeft\"), right = goog.style.getIePixelBorder_(element, \"borderRight\"), top = goog.style.getIePixelBorder_(element, \"borderTop\"), bottom = goog.style.getIePixelBorder_(element, \"borderBottom\");\n    return new goog.math.Box(top, right, bottom, left);\n  }\n  left = goog.style.getComputedStyle(element, \"borderLeftWidth\");\n  right = goog.style.getComputedStyle(element, \"borderRightWidth\");\n  top = goog.style.getComputedStyle(element, \"borderTopWidth\");\n  bottom = goog.style.getComputedStyle(element, \"borderBottomWidth\");\n  return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));\n};\ngoog.style.getFontFamily = function(el) {\n  var doc = goog.dom.getOwnerDocument(el), font = \"\";\n  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {\n    var range = doc.body.createTextRange();\n    range.moveToElementText(el);\n    try {\n      font = range.queryCommandValue(\"FontName\");\n    } catch (e) {\n      font = \"\";\n    }\n  }\n  font || (font = goog.style.getStyle_(el, \"fontFamily\"));\n  var fontsArray = font.split(\",\");\n  1 < fontsArray.length && (font = fontsArray[0]);\n  return goog.string.stripQuotes(font, \"\\\"'\");\n};\ngoog.style.lengthUnitRegex_ = /[^\\d]+$/;\ngoog.style.getLengthUnits = function(value) {\n  var units = value.match(goog.style.lengthUnitRegex_);\n  return units && units[0] || null;\n};\ngoog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {cm:1, \"in\":1, mm:1, pc:1, pt:1};\ngoog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {em:1, ex:1};\ngoog.style.getFontSize = function(el) {\n  var fontSize = goog.style.getStyle_(el, \"fontSize\"), sizeUnits = goog.style.getLengthUnits(fontSize);\n  if (fontSize && \"px\" == sizeUnits) {\n    return parseInt(fontSize, 10);\n  }\n  if (goog.userAgent.IE) {\n    if (String(sizeUnits) in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {\n      return goog.style.getIePixelValue_(el, fontSize, \"left\", \"pixelLeft\");\n    }\n    if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && String(sizeUnits) in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {\n      var parentElement = el.parentNode, parentSize = goog.style.getStyle_(parentElement, \"fontSize\");\n      return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? \"1em\" : fontSize, \"left\", \"pixelLeft\");\n    }\n  }\n  var sizeElement = goog.dom.createDom(goog.dom.TagName.SPAN, {style:\"visibility:hidden;position:absolute;line-height:0;padding:0;margin:0;border:0;height:1em;\"});\n  goog.dom.appendChild(el, sizeElement);\n  fontSize = sizeElement.offsetHeight;\n  goog.dom.removeNode(sizeElement);\n  return fontSize;\n};\ngoog.style.parseStyleAttribute = function(value) {\n  var result = {};\n  value.split(/\\s*;\\s*/).forEach(function(pair) {\n    var keyValue = pair.match(/\\s*([\\w-]+)\\s*:(.+)/);\n    if (keyValue) {\n      var styleValue = goog.string.trim(keyValue[2]);\n      result[goog.string.toCamelCase(keyValue[1].toLowerCase())] = styleValue;\n    }\n  });\n  return result;\n};\ngoog.style.toStyleAttribute = function(obj) {\n  var buffer = [];\n  module$contents$goog$object_forEach(obj, function(value, key) {\n    buffer.push(goog.string.toSelectorCase(key), \":\", value, \";\");\n  });\n  return buffer.join(\"\");\n};\ngoog.style.setFloat = function(el, value) {\n  el.style[goog.userAgent.IE ? \"styleFloat\" : \"cssFloat\"] = value;\n};\ngoog.style.getFloat = function(el) {\n  return el.style[goog.userAgent.IE ? \"styleFloat\" : \"cssFloat\"] || \"\";\n};\ngoog.style.getScrollbarWidth = function(opt_className) {\n  var outerDiv = goog.dom.createElement(goog.dom.TagName.DIV);\n  opt_className && (outerDiv.className = opt_className);\n  outerDiv.style.cssText = \"overflow:auto;position:absolute;top:0;width:100px;height:100px\";\n  var innerDiv = goog.dom.createElement(goog.dom.TagName.DIV);\n  goog.style.setSize(innerDiv, \"200px\", \"200px\");\n  outerDiv.appendChild(innerDiv);\n  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);\n  var width = outerDiv.offsetWidth - outerDiv.clientWidth;\n  goog.dom.removeNode(outerDiv);\n  return width;\n};\ngoog.style.MATRIX_TRANSLATION_REGEX_ = RegExp(\"matrix\\\\([0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, ([0-9\\\\.\\\\-]+)p?x?, ([0-9\\\\.\\\\-]+)p?x?\\\\)\");\ngoog.style.getCssTranslation = function(element) {\n  var transform = goog.style.getComputedTransform(element);\n  if (!transform) {\n    return new goog.math.Coordinate(0, 0);\n  }\n  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);\n  return matches ? new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2])) : new goog.math.Coordinate(0, 0);\n};\nee.layers.AbstractOverlay = function(tileSource, opt_options) {\n  goog.events.EventTarget.call(this);\n  var options = opt_options || {};\n  this.minZoom = options.minZoom || 0;\n  this.maxZoom = options.maxZoom || 20;\n  if (!window.google || !window.google.maps) {\n    throw Error(\"Google Maps API hasn't been initialized.\");\n  }\n  this.tileSize = options.tileSize || new google.maps.Size(ee.layers.AbstractOverlay.DEFAULT_TILE_EDGE_LENGTH, ee.layers.AbstractOverlay.DEFAULT_TILE_EDGE_LENGTH);\n  this.isPng = \"isPng\" in options ? options.isPng : !0;\n  this.name = options.name;\n  this.opacity = \"opacity\" in options ? options.opacity : 1;\n  this.stats = new module$contents$ee$layers$AbstractOverlayStats_AbstractOverlayStats(tileSource.getUniqueId());\n  this.tilesById = new goog.structs.Map();\n  this.tileCounter = 0;\n  this.tileSource = tileSource;\n  this.handler = new goog.events.EventHandler(this);\n  this.projection = null;\n  this.radius = 0;\n  this.alt = null;\n};\n$jscomp.inherits(ee.layers.AbstractOverlay, goog.events.EventTarget);\nee.layers.AbstractOverlay.prototype.addTileCallback = function(callback) {\n  return goog.events.listen(this, ee.layers.AbstractOverlay.EventType.TILE_LOAD, callback);\n};\nee.layers.AbstractOverlay.prototype.removeTileCallback = function(callbackId) {\n  goog.events.unlistenByKey(callbackId);\n};\nee.layers.AbstractOverlay.prototype.getLoadingTilesCount = function() {\n  return this.getTileCountForStatus_(ee.layers.AbstractTile.Status.THROTTLED) + this.getTileCountForStatus_(ee.layers.AbstractTile.Status.LOADING) + this.getTileCountForStatus_(ee.layers.AbstractTile.Status.NEW);\n};\nee.layers.AbstractOverlay.prototype.getFailedTilesCount = function() {\n  return this.getTileCountForStatus_(ee.layers.AbstractTile.Status.FAILED);\n};\nee.layers.AbstractOverlay.prototype.getLoadedTilesCount = function() {\n  return this.getTileCountForStatus_(ee.layers.AbstractTile.Status.LOADED);\n};\nee.layers.AbstractOverlay.prototype.setOpacity = function(opacity) {\n  this.opacity = opacity;\n  this.tilesById.forEach(function(tile) {\n    goog.style.setOpacity(tile.div, this.opacity);\n  }, this);\n};\nee.layers.AbstractOverlay.prototype.getStats = function() {\n  return this.stats;\n};\nee.layers.AbstractOverlay.prototype.getTile = function(coord, zoom, ownerDocument) {\n  var maxCoord = 1 << zoom;\n  if (zoom < this.minZoom || 0 > coord.y || coord.y >= maxCoord) {\n    return ownerDocument.createElement(\"div\");\n  }\n  var x = coord.x % maxCoord;\n  0 > x && (x += maxCoord);\n  var normalizedCoord = new google.maps.Point(x, coord.y), uniqueId = this.getUniqueTileId_(coord, zoom), tile = this.createTile(normalizedCoord, zoom, ownerDocument, uniqueId);\n  tile.tileSize = this.tileSize;\n  goog.style.setOpacity(tile.div, this.opacity);\n  this.tilesById.set(uniqueId, tile);\n  this.registerStatusChangeListener_(tile);\n  this.dispatchEvent(new ee.layers.TileStartEvent(this.getLoadingTilesCount()));\n  this.tileSource.loadTile(tile, (new Date()).getTime() / 1000);\n  return tile.div;\n};\nee.layers.AbstractOverlay.prototype.releaseTile = function(tileDiv) {\n  var tile = this.tilesById.get(tileDiv.id);\n  this.tilesById.remove(tileDiv.id);\n  tile && (tile.abort(), module$contents$goog$dispose_dispose(tile));\n};\nee.layers.AbstractOverlay.prototype.registerStatusChangeListener_ = function(tile) {\n  this.handler.listen(tile, ee.layers.AbstractTile.EventType.STATUS_CHANGED, function() {\n    var Status = ee.layers.AbstractTile.Status;\n    switch(tile.getStatus()) {\n      case Status.LOADED:\n        this.stats.addTileStats(tile.loadingStartTs_, (new Date()).getTime(), tile.zoom);\n        this.dispatchEvent(new ee.layers.TileLoadEvent(this.getLoadingTilesCount()));\n        break;\n      case Status.THROTTLED:\n        this.stats.incrementThrottleCounter(tile.zoom);\n        this.dispatchEvent(new ee.layers.TileThrottleEvent(tile.sourceUrl));\n        break;\n      case Status.FAILED:\n        this.stats.incrementErrorCounter(tile.zoom);\n        this.dispatchEvent(new ee.layers.TileFailEvent(tile.sourceUrl, tile.errorMessage_));\n        break;\n      case Status.ABORTED:\n        this.dispatchEvent(new ee.layers.TileAbortEvent(this.getLoadingTilesCount()));\n    }\n  });\n};\nee.layers.AbstractOverlay.prototype.getUniqueTileId_ = function(coord, z) {\n  var tileId = [coord.x, coord.y, z, this.tileCounter++].join(\"-\"), sourceId = this.tileSource.getUniqueId();\n  return [tileId, sourceId].join(\"-\");\n};\nee.layers.AbstractOverlay.prototype.disposeInternal = function() {\n  goog.events.EventTarget.prototype.disposeInternal.call(this);\n  this.tilesById.forEach(module$contents$goog$dispose_dispose);\n  this.tilesById.clear();\n  this.tilesById = null;\n  module$contents$goog$dispose_dispose(this.handler);\n  this.tileSource = this.handler = null;\n};\nee.layers.AbstractOverlay.prototype.getTileCountForStatus_ = function(status) {\n  return module$contents$goog$array_count(this.tilesById.getValues(), function(tile) {\n    return tile.getStatus() == status;\n  });\n};\ngoog.exportSymbol(\"ee.layers.AbstractOverlay\", ee.layers.AbstractOverlay);\ngoog.exportProperty(ee.layers.AbstractOverlay.prototype, \"removeTileCallback\", ee.layers.AbstractOverlay.prototype.removeTileCallback);\ngoog.exportProperty(ee.layers.AbstractOverlay.prototype, \"addTileCallback\", ee.layers.AbstractOverlay.prototype.addTileCallback);\nee.layers.AbstractOverlay.EventType = {TILE_FAIL:\"tile-fail\", TILE_ABORT:\"tile-abort\", TILE_THROTTLE:\"tile-throttle\", TILE_LOAD:\"tile-load\", TILE_START:\"tile-start\",};\nee.layers.AbstractOverlay.DEFAULT_TILE_EDGE_LENGTH = 256;\nee.layers.TileLoadEvent = function(loadingTileCount) {\n  goog.events.Event.call(this, ee.layers.AbstractOverlay.EventType.TILE_LOAD);\n  this.loadingTileCount = loadingTileCount;\n};\n$jscomp.inherits(ee.layers.TileLoadEvent, goog.events.Event);\nee.layers.TileStartEvent = function(loadingTileCount) {\n  goog.events.Event.call(this, ee.layers.AbstractOverlay.EventType.TILE_START);\n  this.loadingTileCount = loadingTileCount;\n};\n$jscomp.inherits(ee.layers.TileStartEvent, goog.events.Event);\nee.layers.TileThrottleEvent = function(tileUrl) {\n  goog.events.Event.call(this, ee.layers.AbstractOverlay.EventType.TILE_THROTTLE);\n  this.tileUrl = tileUrl;\n};\n$jscomp.inherits(ee.layers.TileThrottleEvent, goog.events.Event);\nee.layers.TileFailEvent = function(tileUrl, opt_errorMessage) {\n  goog.events.Event.call(this, ee.layers.AbstractOverlay.EventType.TILE_FAIL);\n  this.tileUrl = tileUrl;\n  this.errorMessage = opt_errorMessage;\n};\n$jscomp.inherits(ee.layers.TileFailEvent, goog.events.Event);\nee.layers.TileAbortEvent = function(loadingTileCount) {\n  goog.events.Event.call(this, ee.layers.AbstractOverlay.EventType.TILE_ABORT);\n  this.loadingTileCount = loadingTileCount;\n};\n$jscomp.inherits(ee.layers.TileAbortEvent, goog.events.Event);\nee.layers.AbstractTile = function(coord, zoom, ownerDocument, uniqueId) {\n  goog.events.EventTarget.call(this);\n  this.coord = coord;\n  this.zoom = zoom;\n  this.div = ownerDocument.createElement(\"div\");\n  this.div.id = uniqueId;\n  this.maxRetries = ee.layers.AbstractTile.DEFAULT_MAX_LOAD_RETRIES_;\n  this.renderer = function() {\n  };\n  this.status_ = ee.layers.AbstractTile.Status.NEW;\n  this.retryAttemptCount_ = 0;\n  this.isRetrying_ = !1;\n};\n$jscomp.inherits(ee.layers.AbstractTile, goog.events.EventTarget);\nee.layers.AbstractTile.prototype.startLoad = function() {\n  var $jscomp$this = this;\n  if (!this.isRetrying_ && this.getStatus() == ee.layers.AbstractTile.Status.LOADING) {\n    throw Error(\"startLoad() can only be invoked once. Use retryLoad() after the first attempt.\");\n  }\n  this.setStatus(ee.layers.AbstractTile.Status.LOADING);\n  this.loadingStartTs_ = (new Date()).getTime();\n  this.xhrIo_ = new goog.net.XhrIo();\n  this.xhrIo_.setResponseType(goog.net.XhrIo.ResponseType.BLOB);\n  this.xhrIo_.listen(goog.net.EventType.COMPLETE, function(event) {\n    var blob = $jscomp$this.xhrIo_.getResponse(), status = $jscomp$this.xhrIo_.getStatus(), HttpStatus = goog.net.HttpStatus;\n    status == HttpStatus.TOO_MANY_REQUESTS && $jscomp$this.setStatus(ee.layers.AbstractTile.Status.THROTTLED);\n    if (HttpStatus.isSuccess(status)) {\n      var sourceResponseHeaders = {};\n      module$contents$goog$object_forEach($jscomp$this.xhrIo_.getResponseHeaders(), function(value, name) {\n        sourceResponseHeaders[name.toLowerCase()] = value;\n      });\n      $jscomp$this.sourceResponseHeaders = sourceResponseHeaders;\n      $jscomp$this.sourceData = blob;\n      $jscomp$this.finishLoad();\n    } else {\n      if (blob) {\n        var reader = new goog.fs.FileReader();\n        reader.listen(goog.fs.FileReader.EventType.LOAD_END, function() {\n          $jscomp$this.retryLoad(reader.getResult());\n        }, void 0);\n        reader.readAsText(blob);\n      } else {\n        $jscomp$this.retryLoad(\"Failed to load tile.\");\n      }\n    }\n  }, !1);\n  this.xhrIo_.listenOnce(goog.net.EventType.READY, goog.partial(module$contents$goog$dispose_dispose, this.xhrIo_));\n  this.sourceUrl && this.sourceUrl.endsWith(\"&profiling=1\") && (this.sourceUrl = this.sourceUrl.replace(\"&profiling=1\", \"\"), this.xhrIo_.headers.set(module$contents$ee$apiclient_apiclient.PROFILE_REQUEST_HEADER, \"1\"));\n  this.xhrIo_.send(this.sourceUrl, \"GET\");\n};\nee.layers.AbstractTile.prototype.finishLoad = function() {\n  this.renderer(this);\n  this.setStatus(ee.layers.AbstractTile.Status.LOADED);\n};\nee.layers.AbstractTile.prototype.cancelLoad = function() {\n  module$contents$goog$dispose_dispose(this.xhrIo_);\n};\nee.layers.AbstractTile.prototype.retryLoad = function(opt_errorMessage) {\n  var parseError = function(error) {\n    try {\n      if (error = JSON.parse(error), error.error && error.error.message) {\n        return error.error.message;\n      }\n    } catch (e) {\n    }\n    return error;\n  };\n  this.retryAttemptCount_ >= this.maxRetries ? (this.errorMessage_ = parseError(opt_errorMessage), this.setStatus(ee.layers.AbstractTile.Status.FAILED)) : (this.cancelLoad(), setTimeout(goog.bind(function() {\n    this.isDisposed() || (this.isRetrying_ = !0, this.startLoad(), this.isRetrying_ = !1);\n  }, this), 1000 * Math.pow(2, this.retryAttemptCount_++)));\n};\nee.layers.AbstractTile.prototype.abort = function() {\n  this.cancelLoad();\n  this.getStatus() != ee.layers.AbstractTile.Status.ABORTED && this.getStatus() != ee.layers.AbstractTile.Status.REMOVED && this.setStatus(this.isDone() ? ee.layers.AbstractTile.Status.REMOVED : ee.layers.AbstractTile.Status.ABORTED);\n};\nee.layers.AbstractTile.prototype.isDone = function() {\n  return this.status_ in ee.layers.AbstractTile.DONE_STATUS_SET_;\n};\nee.layers.AbstractTile.prototype.getStatus = function() {\n  return this.status_;\n};\nee.layers.AbstractTile.prototype.setStatus = function(status) {\n  this.status_ = status;\n  this.dispatchEvent(ee.layers.AbstractTile.EventType.STATUS_CHANGED);\n};\nee.layers.AbstractTile.prototype.disposeInternal = function() {\n  goog.events.EventTarget.prototype.disposeInternal.call(this);\n  this.cancelLoad();\n  this.div.remove();\n  this.renderer = null;\n};\nee.layers.AbstractTile.EventType = {STATUS_CHANGED:\"status-changed\"};\nee.layers.AbstractTile.Status = {NEW:\"new\", LOADING:\"loading\", THROTTLED:\"throttled\", LOADED:\"loaded\", FAILED:\"failed\", ABORTED:\"aborted\", REMOVED:\"removed\",};\nee.layers.AbstractTile.DONE_STATUS_SET_ = module$contents$goog$object_createSet(ee.layers.AbstractTile.Status.ABORTED, ee.layers.AbstractTile.Status.FAILED, ee.layers.AbstractTile.Status.LOADED, ee.layers.AbstractTile.Status.REMOVED);\nee.layers.AbstractTile.DEFAULT_MAX_LOAD_RETRIES_ = 5;\nvar module$exports$ee$layers$AbstractTileSource = function() {\n  goog.Disposable.call(this);\n};\n$jscomp.inherits(module$exports$ee$layers$AbstractTileSource, goog.Disposable);\nee.layers.BinaryOverlay = function(tileSource, opt_options) {\n  ee.layers.AbstractOverlay.call(this, tileSource, opt_options);\n  this.buffersByCoord_ = new goog.structs.Map();\n  this.divsByCoord_ = new goog.structs.Map();\n};\n$jscomp.inherits(ee.layers.BinaryOverlay, ee.layers.AbstractOverlay);\nee.layers.BinaryOverlay.prototype.createTile = function(coord, zoom, ownerDocument, uniqueId) {\n  var tile = new ee.layers.BinaryTile(coord, zoom, ownerDocument, uniqueId);\n  this.handler.listen(tile, ee.layers.AbstractTile.EventType.STATUS_CHANGED, function() {\n    tile.getStatus() == ee.layers.AbstractTile.Status.LOADED && (this.buffersByCoord_.set(coord, new Float32Array(tile.buffer_)), this.divsByCoord_.set(coord, tile.div));\n  });\n  return tile;\n};\nee.layers.BinaryOverlay.prototype.getBuffersByCoord = function() {\n  return this.buffersByCoord_;\n};\nee.layers.BinaryOverlay.prototype.getDivsByCoord = function() {\n  return this.divsByCoord_;\n};\nee.layers.BinaryOverlay.prototype.disposeInternal = function() {\n  ee.layers.AbstractOverlay.prototype.disposeInternal.call(this);\n  this.divsByCoord_ = this.buffersByCoord_ = null;\n};\ngoog.exportSymbol(\"ee.layers.BinaryOverlay\", ee.layers.BinaryOverlay);\nee.layers.BinaryTile = function(coord, zoom, ownerDocument, uniqueId) {\n  ee.layers.AbstractTile.call(this, coord, zoom, ownerDocument, uniqueId);\n};\n$jscomp.inherits(ee.layers.BinaryTile, ee.layers.AbstractTile);\nee.layers.BinaryTile.prototype.finishLoad = function() {\n  var reader = new goog.fs.FileReader();\n  reader.listen(goog.fs.FileReader.EventType.LOAD_END, function() {\n    this.buffer_ = reader.getResult();\n    ee.layers.AbstractTile.prototype.finishLoad.call(this);\n  }, void 0, this);\n  reader.readAsArrayBuffer(this.sourceData);\n};\ngoog.net.ImageLoader = function(opt_parent) {\n  goog.events.EventTarget.call(this);\n  this.imageIdToRequestMap_ = {};\n  this.imageIdToImageMap_ = {};\n  this.handler_ = new goog.events.EventHandler(this);\n  this.parent_ = opt_parent;\n  this.completionFired_ = !1;\n};\ngoog.inherits(goog.net.ImageLoader, goog.events.EventTarget);\ngoog.net.ImageLoader.CorsRequestType = {ANONYMOUS:\"anonymous\", USE_CREDENTIALS:\"use-credentials\",};\ngoog.net.ImageLoader.IMAGE_LOAD_EVENTS_ = [goog.userAgent.IE && !goog.userAgent.isVersionOrHigher(\"11\") ? goog.net.EventType.READY_STATE_CHANGE : goog.events.EventType.LOAD, goog.net.EventType.ABORT, goog.net.EventType.ERROR,];\ngoog.net.ImageLoader.prototype.addImage = function(id, image, opt_corsRequestType) {\n  var src = \"string\" === typeof image ? image : image.src;\n  src && (this.completionFired_ = !1, this.imageIdToRequestMap_[id] = {src:src, corsRequestType:void 0 !== opt_corsRequestType ? opt_corsRequestType : null,});\n};\ngoog.net.ImageLoader.prototype.removeImage = function(id) {\n  delete this.imageIdToRequestMap_[id];\n  var image = this.imageIdToImageMap_[id];\n  image && (delete this.imageIdToImageMap_[id], this.handler_.unlisten(image, goog.net.ImageLoader.IMAGE_LOAD_EVENTS_, this.onNetworkEvent_));\n};\ngoog.net.ImageLoader.prototype.start = function() {\n  var imageIdToRequestMap = this.imageIdToRequestMap_;\n  module$contents$goog$object_getKeys(imageIdToRequestMap).forEach(function(id) {\n    var imageRequest = imageIdToRequestMap[id];\n    imageRequest && (delete imageIdToRequestMap[id], this.loadImage_(imageRequest, id));\n  }, this);\n};\ngoog.net.ImageLoader.prototype.loadImage_ = function(imageRequest, id) {\n  if (!this.isDisposed()) {\n    var image = this.parent_ ? goog.dom.getDomHelper(this.parent_).createDom(goog.dom.TagName.IMG) : new Image();\n    imageRequest.corsRequestType && (image.crossOrigin = imageRequest.corsRequestType);\n    this.handler_.listen(image, goog.net.ImageLoader.IMAGE_LOAD_EVENTS_, this.onNetworkEvent_);\n    this.imageIdToImageMap_[id] = image;\n    image.id = id;\n    image.src = imageRequest.src;\n  }\n};\ngoog.net.ImageLoader.prototype.onNetworkEvent_ = function(evt) {\n  var image = evt.currentTarget;\n  if (image) {\n    if (evt.type == goog.net.EventType.READY_STATE_CHANGE) {\n      if (image.readyState == goog.net.EventType.COMPLETE) {\n        evt.type = goog.events.EventType.LOAD;\n      } else {\n        return;\n      }\n    }\n    \"undefined\" == typeof image.naturalWidth && (evt.type == goog.events.EventType.LOAD ? (image.naturalWidth = image.width, image.naturalHeight = image.height) : (image.naturalWidth = 0, image.naturalHeight = 0));\n    this.removeImage(image.id);\n    this.dispatchEvent({type:evt.type, target:image});\n    this.isDisposed() || this.maybeFireCompletionEvent_();\n  }\n};\ngoog.net.ImageLoader.prototype.maybeFireCompletionEvent_ = function() {\n  module$contents$goog$object_isEmpty(this.imageIdToImageMap_) && module$contents$goog$object_isEmpty(this.imageIdToRequestMap_) && !this.completionFired_ && (this.completionFired_ = !0, this.dispatchEvent(goog.net.EventType.COMPLETE));\n};\ngoog.net.ImageLoader.prototype.disposeInternal = function() {\n  delete this.imageIdToRequestMap_;\n  delete this.imageIdToImageMap_;\n  module$contents$goog$dispose_dispose(this.handler_);\n  goog.net.ImageLoader.superClass_.disposeInternal.call(this);\n};\nee.layers.ImageOverlay = function(tileSource, opt_options) {\n  ee.layers.AbstractOverlay.call(this, tileSource, opt_options);\n};\n$jscomp.inherits(ee.layers.ImageOverlay, ee.layers.AbstractOverlay);\nee.layers.ImageOverlay.prototype.createTile = function(coord, zoom, ownerDocument, uniqueId) {\n  return new ee.layers.ImageTile(coord, zoom, ownerDocument, uniqueId);\n};\ngoog.exportSymbol(\"ee.layers.ImageOverlay\", ee.layers.ImageOverlay);\nee.layers.ImageTile = function(coord, zoom, ownerDocument, uniqueId) {\n  ee.layers.AbstractTile.call(this, coord, zoom, ownerDocument, uniqueId);\n  this.renderer = ee.layers.ImageTile.defaultRenderer_;\n  this.imageLoaderListenerKey_ = this.imageLoader_ = this.imageEl = null;\n  this.objectUrl_ = \"\";\n};\n$jscomp.inherits(ee.layers.ImageTile, ee.layers.AbstractTile);\nee.layers.ImageTile.prototype.finishLoad = function() {\n  try {\n    var safeUrl = goog.html.SafeUrl.fromBlob(this.sourceData);\n    this.objectUrl_ = goog.html.SafeUrl.unwrap(safeUrl);\n    var imageUrl = this.objectUrl_ !== goog.html.SafeUrl.INNOCUOUS_STRING ? this.objectUrl_ : this.sourceUrl;\n  } catch (e) {\n    imageUrl = this.sourceUrl;\n  }\n  this.imageLoader_ = new goog.net.ImageLoader();\n  this.imageLoader_.addImage(this.div.id + \"-image\", imageUrl);\n  this.imageLoaderListenerKey_ = goog.events.listenOnce(this.imageLoader_, ee.layers.ImageTile.IMAGE_LOADER_EVENTS_, function(event) {\n    event.type == goog.events.EventType.LOAD ? (this.imageEl = event.target, ee.layers.AbstractTile.prototype.finishLoad.call(this)) : this.retryLoad();\n  }, void 0, this);\n  this.imageLoader_.start();\n};\nee.layers.ImageTile.prototype.cancelLoad = function() {\n  ee.layers.AbstractTile.prototype.cancelLoad.call(this);\n  this.imageLoader_ && (goog.events.unlistenByKey(this.imageLoaderListenerKey_), module$contents$goog$dispose_dispose(this.imageLoader_));\n};\nee.layers.ImageTile.prototype.disposeInternal = function() {\n  ee.layers.AbstractTile.prototype.disposeInternal.call(this);\n  this.objectUrl_ && URL.revokeObjectURL(this.objectUrl_);\n};\nee.layers.ImageTile.defaultRenderer_ = function(tile) {\n  tile.div.appendChild(tile.imageEl);\n};\nee.layers.ImageTile.IMAGE_LOADER_EVENTS_ = [goog.events.EventType.LOAD, goog.net.EventType.ABORT, goog.net.EventType.ERROR];\ngoog.string.path = {};\ngoog.string.path.baseName = function(path) {\n  var i = path.lastIndexOf(\"/\") + 1;\n  return path.slice(i);\n};\ngoog.string.path.basename = goog.string.path.baseName;\ngoog.string.path.dirname = function(path) {\n  var i = path.lastIndexOf(\"/\") + 1, head = path.slice(0, i);\n  /^\\/+$/.test(head) || (head = head.replace(/\\/+$/, \"\"));\n  return head;\n};\ngoog.string.path.extension = function(path) {\n  var baseName = goog.string.path.baseName(path).replace(/\\.+/g, \".\"), separatorIndex = baseName.lastIndexOf(\".\");\n  return 0 >= separatorIndex ? \"\" : baseName.substr(separatorIndex + 1);\n};\ngoog.string.path.join = function(var_args) {\n  for (var path = arguments[0], i = 1; i < arguments.length; i++) {\n    var arg = arguments[i];\n    path = goog.string.startsWith(arg, \"/\") ? arg : \"\" == path || goog.string.endsWith(path, \"/\") ? path + arg : path + (\"/\" + arg);\n  }\n  return path;\n};\ngoog.string.path.normalizePath = function(path) {\n  if (\"\" == path) {\n    return \".\";\n  }\n  var initialSlashes = \"\";\n  goog.string.startsWith(path, \"/\") && (initialSlashes = \"/\", goog.string.startsWith(path, \"//\") && !goog.string.startsWith(path, \"///\") && (initialSlashes = \"//\"));\n  for (var parts = path.split(\"/\"), newParts = [], i = 0; i < parts.length; i++) {\n    var part = parts[i];\n    \"\" != part && \".\" != part && (\"..\" != part || !initialSlashes && !newParts.length || \"..\" == module$contents$goog$array_peek(newParts) ? newParts.push(part) : newParts.pop());\n  }\n  return initialSlashes + newParts.join(\"/\") || \".\";\n};\ngoog.string.path.split = function(path) {\n  var head = goog.string.path.dirname(path), tail = goog.string.path.baseName(path);\n  return [head, tail];\n};\nvar module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource = function(bucket, path, maxZoom, opt_suffix) {\n  module$exports$ee$layers$AbstractTileSource.call(this);\n  this.bucket_ = bucket;\n  this.path_ = path;\n  this.suffix_ = opt_suffix || \"\";\n  this.maxZoom_ = maxZoom;\n};\n$jscomp.inherits(module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource, module$exports$ee$layers$AbstractTileSource);\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.prototype.loadTile = function(tile, opt_priority) {\n  if (tile.zoom <= this.maxZoom_) {\n    tile.sourceUrl = this.getTileUrl_(tile.coord, tile.zoom);\n  } else {\n    var zoomSteps = tile.zoom - this.maxZoom_, zoomFactor = Math.pow(2, zoomSteps), upperCoord = new google.maps.Point(Math.floor(tile.coord.x / zoomFactor), Math.floor(tile.coord.y / zoomFactor));\n    tile.sourceUrl = this.getTileUrl_(upperCoord, tile.zoom - zoomSteps);\n    tile.renderer = goog.partial(module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.zoomTileRenderer_, this.maxZoom_);\n  }\n  var originalRetryLoad = goog.bind(tile.retryLoad, tile);\n  tile.retryLoad = goog.bind(function(opt_errorMessage) {\n    opt_errorMessage && (opt_errorMessage.includes(module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.MISSING_TILE_ERROR_) || opt_errorMessage.includes(module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.ACCESS_DENIED_ERROR_)) ? tile.setStatus(ee.layers.AbstractTile.Status.LOADED) : originalRetryLoad(opt_errorMessage);\n  }, tile);\n  tile.startLoad();\n};\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.prototype.getUniqueId = function() {\n  return [this.bucket_, this.path_, this.maxZoom_, this.suffix_].join(\"-\");\n};\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.prototype.getTileUrl_ = function(coord, zoom) {\n  var url = goog.string.path.join(module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.BASE_URL, this.bucket_, this.path_, String(zoom), String(coord.x), String(coord.y));\n  this.suffix_ && (url += this.suffix_);\n  return url;\n};\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.zoomTileRenderer_ = function(maxZoom, tile) {\n  if (!tile.imageEl) {\n    throw Error(\"Tile must have an image element to be rendered.\");\n  }\n  var zoomFactor = Math.pow(2, tile.zoom - maxZoom), sideLength = tile.tileSize.width, canv = tile.div.ownerDocument.createElement(\"canvas\");\n  canv.setAttribute(\"width\", sideLength);\n  canv.setAttribute(\"height\", sideLength);\n  tile.div.appendChild(canv);\n  var context = canv.getContext(\"2d\");\n  context.imageSmoothingEnabled = !1;\n  context.mozImageSmoothingEnabled = !1;\n  context.webkitImageSmoothingEnabled = !1;\n  context.drawImage(tile.imageEl, sideLength / zoomFactor * (tile.coord.x % zoomFactor), sideLength / zoomFactor * (tile.coord.y % zoomFactor), sideLength / zoomFactor, sideLength / zoomFactor, 0, 0, sideLength, sideLength);\n};\ngoog.exportSymbol(\"ee.layers.CloudStorageTileSource\", module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource);\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.BASE_URL = \"https://storage.googleapis.com\";\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.MISSING_TILE_ERROR_ = \"The specified key does not exist.\";\nmodule$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource.ACCESS_DENIED_ERROR_ = \"AccessDenied\";\nee.layers.CloudStorageTileSource = module$contents$ee$layers$CloudStorageTileSource_CloudStorageTileSource;\ngoog.structs.Queue = function() {\n  this.front_ = [];\n  this.back_ = [];\n};\ngoog.structs.Queue.prototype.maybeFlip_ = function() {\n  0 === this.front_.length && (this.front_ = this.back_, this.front_.reverse(), this.back_ = []);\n};\ngoog.structs.Queue.prototype.enqueue = function(element) {\n  this.back_.push(element);\n};\ngoog.structs.Queue.prototype.dequeue = function() {\n  this.maybeFlip_();\n  return this.front_.pop();\n};\ngoog.structs.Queue.prototype.peek = function() {\n  this.maybeFlip_();\n  return module$contents$goog$array_peek(this.front_);\n};\ngoog.structs.Queue.prototype.getCount = function() {\n  return this.front_.length + this.back_.length;\n};\ngoog.structs.Queue.prototype.isEmpty = function() {\n  return 0 === this.front_.length && 0 === this.back_.length;\n};\ngoog.structs.Queue.prototype.clear = function() {\n  this.front_ = [];\n  this.back_ = [];\n};\ngoog.structs.Queue.prototype.contains = function(obj) {\n  return module$contents$goog$array_contains(this.front_, obj) || module$contents$goog$array_contains(this.back_, obj);\n};\ngoog.structs.Queue.prototype.remove = function(obj) {\n  return module$contents$goog$array_removeLast(this.front_, obj) || module$contents$goog$array_remove(this.back_, obj);\n};\ngoog.structs.Queue.prototype.getValues = function() {\n  for (var res = [], i = this.front_.length - 1; 0 <= i; --i) {\n    res.push(this.front_[i]);\n  }\n  var len = this.back_.length;\n  for (i = 0; i < len; ++i) {\n    res.push(this.back_[i]);\n  }\n  return res;\n};\ngoog.structs.Pool = function(opt_minCount, opt_maxCount) {\n  goog.Disposable.call(this);\n  this.minCount_ = opt_minCount || 0;\n  this.maxCount_ = opt_maxCount || 10;\n  if (this.minCount_ > this.maxCount_) {\n    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);\n  }\n  this.freeQueue_ = new goog.structs.Queue();\n  this.inUseSet_ = new goog.structs.Set();\n  this.delay = 0;\n  this.lastAccess = null;\n  this.adjustForMinMax();\n};\ngoog.inherits(goog.structs.Pool, goog.Disposable);\ngoog.structs.Pool.ERROR_MIN_MAX_ = \"[goog.structs.Pool] Min can not be greater than max\";\ngoog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = \"[goog.structs.Pool] Objects not released\";\ngoog.structs.Pool.prototype.setMinimumCount = function(min) {\n  if (min > this.maxCount_) {\n    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);\n  }\n  this.minCount_ = min;\n  this.adjustForMinMax();\n};\ngoog.structs.Pool.prototype.setMaximumCount = function(max) {\n  if (max < this.minCount_) {\n    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);\n  }\n  this.maxCount_ = max;\n  this.adjustForMinMax();\n};\ngoog.structs.Pool.prototype.setDelay = function(delay) {\n  this.delay = delay;\n};\ngoog.structs.Pool.prototype.getObject = function() {\n  var time = Date.now();\n  if (!(null != this.lastAccess && time - this.lastAccess < this.delay)) {\n    var obj = this.removeFreeObject_();\n    obj && (this.lastAccess = time, this.inUseSet_.add(obj));\n    return obj;\n  }\n};\ngoog.structs.Pool.prototype.releaseObject = function(obj) {\n  return this.inUseSet_.remove(obj) ? (this.addFreeObject(obj), !0) : !1;\n};\ngoog.structs.Pool.prototype.removeFreeObject_ = function() {\n  for (var obj; 0 < this.getFreeCount() && (obj = this.freeQueue_.dequeue(), !this.objectCanBeReused(obj));) {\n    this.adjustForMinMax();\n  }\n  !obj && this.getCount() < this.maxCount_ && (obj = this.createObject());\n  return obj;\n};\ngoog.structs.Pool.prototype.addFreeObject = function(obj) {\n  this.inUseSet_.remove(obj);\n  this.objectCanBeReused(obj) && this.getCount() < this.maxCount_ ? this.freeQueue_.enqueue(obj) : this.disposeObject(obj);\n};\ngoog.structs.Pool.prototype.adjustForMinMax = function() {\n  for (var freeQueue = this.freeQueue_; this.getCount() < this.minCount_;) {\n    freeQueue.enqueue(this.createObject());\n  }\n  for (; this.getCount() > this.maxCount_ && 0 < this.getFreeCount();) {\n    this.disposeObject(freeQueue.dequeue());\n  }\n};\ngoog.structs.Pool.prototype.createObject = function() {\n  return {};\n};\ngoog.structs.Pool.prototype.disposeObject = function(obj) {\n  if (\"function\" == typeof obj.dispose) {\n    obj.dispose();\n  } else {\n    for (var i in obj) {\n      obj[i] = null;\n    }\n  }\n};\ngoog.structs.Pool.prototype.objectCanBeReused = function(obj) {\n  return \"function\" == typeof obj.canBeReused ? obj.canBeReused() : !0;\n};\ngoog.structs.Pool.prototype.contains = function(obj) {\n  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);\n};\ngoog.structs.Pool.prototype.getCount = function() {\n  return this.freeQueue_.getCount() + this.inUseSet_.getCount();\n};\ngoog.structs.Pool.prototype.getInUseCount = function() {\n  return this.inUseSet_.getCount();\n};\ngoog.structs.Pool.prototype.getFreeCount = function() {\n  return this.freeQueue_.getCount();\n};\ngoog.structs.Pool.prototype.isEmpty = function() {\n  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();\n};\ngoog.structs.Pool.prototype.disposeInternal = function() {\n  goog.structs.Pool.superClass_.disposeInternal.call(this);\n  if (0 < this.getInUseCount()) {\n    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);\n  }\n  delete this.inUseSet_;\n  for (var freeQueue = this.freeQueue_; !freeQueue.isEmpty();) {\n    this.disposeObject(freeQueue.dequeue());\n  }\n  delete this.freeQueue_;\n};\ngoog.structs.Node = function(key, value) {\n  this.key_ = key;\n  this.value_ = value;\n};\ngoog.structs.Node.prototype.getKey = function() {\n  return this.key_;\n};\ngoog.structs.Node.prototype.getValue = function() {\n  return this.value_;\n};\ngoog.structs.Node.prototype.clone = function() {\n  return new goog.structs.Node(this.key_, this.value_);\n};\ngoog.structs.Heap = function(opt_heap) {\n  this.nodes_ = [];\n  opt_heap && this.insertAll(opt_heap);\n};\ngoog.structs.Heap.prototype.insert = function(key, value) {\n  var node = new goog.structs.Node(key, value), nodes = this.nodes_;\n  nodes.push(node);\n  this.moveUp_(nodes.length - 1);\n};\ngoog.structs.Heap.prototype.insertAll = function(heap) {\n  if (heap instanceof goog.structs.Heap) {\n    var keys = heap.getKeys();\n    var values = heap.getValues();\n    if (0 >= this.getCount()) {\n      for (var nodes = this.nodes_, i = 0; i < keys.length; i++) {\n        nodes.push(new goog.structs.Node(keys[i], values[i]));\n      }\n      return;\n    }\n  } else {\n    keys = module$contents$goog$object_getKeys(heap), values = module$contents$goog$object_getValues(heap);\n  }\n  for (i = 0; i < keys.length; i++) {\n    this.insert(keys[i], values[i]);\n  }\n};\ngoog.structs.Heap.prototype.remove = function() {\n  var nodes = this.nodes_, count = nodes.length, rootNode = nodes[0];\n  if (!(0 >= count)) {\n    return 1 == count ? module$contents$goog$array_clear(nodes) : (nodes[0] = nodes.pop(), this.moveDown_(0)), rootNode.getValue();\n  }\n};\ngoog.structs.Heap.prototype.peek = function() {\n  var nodes = this.nodes_;\n  if (0 != nodes.length) {\n    return nodes[0].getValue();\n  }\n};\ngoog.structs.Heap.prototype.peekKey = function() {\n  return this.nodes_[0] && this.nodes_[0].getKey();\n};\ngoog.structs.Heap.prototype.moveDown_ = function(index) {\n  for (var nodes = this.nodes_, count = nodes.length, node = nodes[index]; index < count >> 1;) {\n    var leftChildIndex = this.getLeftChildIndex_(index), rightChildIndex = this.getRightChildIndex_(index), smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;\n    if (nodes[smallerChildIndex].getKey() > node.getKey()) {\n      break;\n    }\n    nodes[index] = nodes[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n  nodes[index] = node;\n};\ngoog.structs.Heap.prototype.moveUp_ = function(index) {\n  for (var nodes = this.nodes_, node = nodes[index]; 0 < index;) {\n    var parentIndex = this.getParentIndex_(index);\n    if (nodes[parentIndex].getKey() > node.getKey()) {\n      nodes[index] = nodes[parentIndex], index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  nodes[index] = node;\n};\ngoog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {\n  return 2 * index + 1;\n};\ngoog.structs.Heap.prototype.getRightChildIndex_ = function(index) {\n  return 2 * index + 2;\n};\ngoog.structs.Heap.prototype.getParentIndex_ = function(index) {\n  return index - 1 >> 1;\n};\ngoog.structs.Heap.prototype.getValues = function() {\n  for (var nodes = this.nodes_, rv = [], l = nodes.length, i = 0; i < l; i++) {\n    rv.push(nodes[i].getValue());\n  }\n  return rv;\n};\ngoog.structs.Heap.prototype.getKeys = function() {\n  for (var nodes = this.nodes_, rv = [], l = nodes.length, i = 0; i < l; i++) {\n    rv.push(nodes[i].getKey());\n  }\n  return rv;\n};\ngoog.structs.Heap.prototype.containsValue = function(val) {\n  return module$contents$goog$array_some(this.nodes_, function(node) {\n    return node.getValue() == val;\n  });\n};\ngoog.structs.Heap.prototype.containsKey = function(key) {\n  return module$contents$goog$array_some(this.nodes_, function(node) {\n    return node.getKey() == key;\n  });\n};\ngoog.structs.Heap.prototype.clone = function() {\n  return new goog.structs.Heap(this);\n};\ngoog.structs.Heap.prototype.getCount = function() {\n  return this.nodes_.length;\n};\ngoog.structs.Heap.prototype.isEmpty = function() {\n  return 0 === this.nodes_.length;\n};\ngoog.structs.Heap.prototype.clear = function() {\n  module$contents$goog$array_clear(this.nodes_);\n};\ngoog.structs.PriorityQueue = function() {\n  goog.structs.Heap.call(this);\n};\ngoog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);\ngoog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {\n  this.insert(priority, value);\n};\ngoog.structs.PriorityQueue.prototype.dequeue = function() {\n  return this.remove();\n};\ngoog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {\n  this.delayTimeout_ = void 0;\n  this.requestQueue_ = new goog.structs.PriorityQueue();\n  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);\n};\ngoog.inherits(goog.structs.PriorityPool, goog.structs.Pool);\ngoog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;\ngoog.structs.PriorityPool.prototype.setDelay = function(delay) {\n  goog.structs.PriorityPool.superClass_.setDelay.call(this, delay);\n  null != this.lastAccess && (goog.global.clearTimeout(this.delayTimeout_), this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - Date.now()), this.handleQueueRequests_());\n};\ngoog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {\n  if (!opt_callback) {\n    var result = goog.structs.PriorityPool.superClass_.getObject.call(this);\n    result && this.delay && (this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay));\n    return result;\n  }\n  this.requestQueue_.enqueue(void 0 !== opt_priority ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_, opt_callback);\n  this.handleQueueRequests_();\n};\ngoog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {\n  for (var requestQueue = this.requestQueue_; 0 < requestQueue.getCount();) {\n    var obj = this.getObject();\n    if (obj) {\n      requestQueue.dequeue().apply(this, [obj]);\n    } else {\n      break;\n    }\n  }\n};\ngoog.structs.PriorityPool.prototype.addFreeObject = function(obj) {\n  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);\n  this.handleQueueRequests_();\n};\ngoog.structs.PriorityPool.prototype.adjustForMinMax = function() {\n  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);\n  this.handleQueueRequests_();\n};\ngoog.structs.PriorityPool.prototype.disposeInternal = function() {\n  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);\n  goog.global.clearTimeout(this.delayTimeout_);\n  this.requestQueue_.clear();\n  this.requestQueue_ = null;\n};\nvar module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource = function(mapId, opt_profiler) {\n  module$exports$ee$layers$AbstractTileSource.call(this);\n  this.mapId_ = mapId;\n  this.profiler_ = opt_profiler || null;\n};\n$jscomp.inherits(module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource, module$exports$ee$layers$AbstractTileSource);\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.prototype.loadTile = function(tile, opt_priority) {\n  var ProfilerHeader = module$contents$ee$apiclient_apiclient.PROFILE_HEADER.toLowerCase(), key = goog.events.listen(tile, ee.layers.AbstractTile.EventType.STATUS_CHANGED, function() {\n    switch(tile.getStatus()) {\n      case ee.layers.AbstractTile.Status.LOADED:\n        var profileId = tile.sourceResponseHeaders[ProfilerHeader];\n        this.profiler_ && profileId && this.profiler_.addTile(tile.div.id, profileId);\n        break;\n      case ee.layers.AbstractTile.Status.FAILED:\n      case ee.layers.AbstractTile.Status.ABORTED:\n        this.profiler_ && \"\" !== tile.div.id && this.profiler_.removeTile(tile.div.id), goog.events.unlistenByKey(key);\n    }\n  }, void 0, this);\n  tile.sourceUrl = this.getTileUrl_(tile.coord, tile.zoom);\n  var handleAvailableToken = goog.bind(this.handleAvailableToken_, this, tile);\n  module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.getGlobalTokenPool_().getObject(handleAvailableToken, opt_priority);\n};\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.prototype.getUniqueId = function() {\n  return this.mapId_.mapid + \"-\" + this.mapId_.token;\n};\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.prototype.handleAvailableToken_ = function(tile, token) {\n  var tokenPool = module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.getGlobalTokenPool_();\n  if (tile.isDisposed() || tile.getStatus() == ee.layers.AbstractTile.Status.ABORTED) {\n    tokenPool.releaseObject(token);\n  } else {\n    var key = goog.events.listen(tile, ee.layers.AbstractTile.EventType.STATUS_CHANGED, function() {\n      tile.isDone() && (goog.events.unlistenByKey(key), tokenPool.releaseObject(token));\n    });\n    tile.startLoad();\n  }\n};\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.prototype.getTileUrl_ = function(coord, zoom) {\n  var url = ee.data.getTileUrl(this.mapId_, coord.x, coord.y, zoom);\n  return this.profiler_ && this.profiler_.isEnabled() ? url + \"&profiling=1\" : url;\n};\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.getGlobalTokenPool_ = function() {\n  module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.TOKEN_POOL_ || (module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.TOKEN_POOL_ = new goog.structs.PriorityPool(0, module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.TOKEN_COUNT_));\n  return module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.TOKEN_POOL_;\n};\ngoog.exportSymbol(\"ee.layers.EarthEngineTileSource\", module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource);\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.TOKEN_POOL_ = null;\nmodule$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource.TOKEN_COUNT_ = 4;\nee.layers.EarthEngineTileSource = module$contents$ee$layers$EarthEngineTileSource_EarthEngineTileSource;\ngoog.singleton = {};\nvar module$contents$goog$singleton_instantiatedSingletons = [], module$contents$goog$singleton_Singleton = function() {\n};\ngoog.singleton.getInstance = function(ctor) {\n  (0,goog.asserts.assert)(!Object.isSealed(ctor), \"Cannot use getInstance() with a sealed constructor.\");\n  if (ctor.instance_ && ctor.hasOwnProperty(\"instance_\")) {\n    return ctor.instance_;\n  }\n  goog.DEBUG && module$contents$goog$singleton_instantiatedSingletons.push(ctor);\n  var instance = new ctor();\n  ctor.instance_ = instance;\n  (0,goog.asserts.assert)(ctor.hasOwnProperty(\"instance_\"), \"Could not instantiate singleton.\");\n  return instance;\n};\ngoog.singleton.instantiatedSingletons = module$contents$goog$singleton_instantiatedSingletons;\nee.MapTileManager = function() {\n  goog.events.EventTarget.call(this);\n  this.tokenPool_ = new ee.MapTileManager.TokenPool_(0, 60);\n  this.requests_ = new goog.structs.Map();\n};\n$jscomp.inherits(ee.MapTileManager, goog.events.EventTarget);\nee.MapTileManager.prototype.getOutstandingCount = function() {\n  return this.requests_.getCount();\n};\nee.MapTileManager.prototype.send = function(id, url, opt_priority, opt_imageCompletedCallback, opt_maxRetries) {\n  if (this.requests_.get(id)) {\n    throw Error(ee.MapTileManager.ERROR_ID_IN_USE_);\n  }\n  var request = new ee.MapTileManager.Request_(id, url, opt_imageCompletedCallback, goog.bind(this.releaseRequest_, this), void 0 !== opt_maxRetries ? opt_maxRetries : ee.MapTileManager.MAX_RETRIES);\n  this.requests_.set(id, request);\n  var callback = goog.bind(this.handleAvailableToken_, this, request);\n  this.tokenPool_.getObject(callback, opt_priority);\n  return request;\n};\nee.MapTileManager.prototype.abort = function(id) {\n  var request = this.requests_.get(id);\n  request && (request.setAborted(!0), this.releaseRequest_(request));\n};\nee.MapTileManager.prototype.handleAvailableToken_ = function(request, token) {\n  if (request.getImageLoader() || request.getAborted()) {\n    this.releaseObject_(token);\n  } else {\n    if (request.setToken(token), token.setActive(!0), request.setImageLoader(new goog.net.ImageLoader()), !request.retry()) {\n      throw Error(\"Cannot dispatch first request!\");\n    }\n  }\n};\nee.MapTileManager.prototype.releaseRequest_ = function(request) {\n  this.requests_.remove(request.getId());\n  request.getImageLoader() && (this.releaseObject_(request.getToken()), request.getImageLoader().dispose());\n  request.fireImageEventCallback();\n};\nee.MapTileManager.prototype.releaseObject_ = function(token) {\n  token.setActive(!1);\n  if (!this.tokenPool_.releaseObject(token)) {\n    throw Error(\"Object not released\");\n  }\n};\nee.MapTileManager.prototype.disposeInternal = function() {\n  goog.events.EventTarget.prototype.disposeInternal.call(this);\n  this.tokenPool_.dispose();\n  this.tokenPool_ = null;\n  var requests = this.requests_;\n  module$contents$goog$array_forEach(requests.getValues(), function(value) {\n    value.dispose();\n  });\n  requests.clear();\n  this.requests_ = null;\n};\nee.MapTileManager.getInstance = function() {\n  return goog.singleton.getInstance(ee.MapTileManager);\n};\ngoog.exportSymbol(\"ee.MapTileManager\", ee.MapTileManager);\nee.MapTileManager.MAX_RETRIES = 1;\nee.MapTileManager.ERROR_ID_IN_USE_ = \"[ee.MapTileManager] ID in use\";\nee.MapTileManager.Request_ = function(id, url, opt_imageEventCallback, opt_requestCompleteCallback, opt_maxRetries) {\n  goog.Disposable.call(this);\n  this.id_ = id;\n  this.url_ = url;\n  this.maxRetries_ = void 0 !== opt_maxRetries ? opt_maxRetries : ee.MapTileManager.MAX_RETRIES;\n  this.imageEventCallback_ = opt_imageEventCallback;\n  this.requestCompleteCallback_ = opt_requestCompleteCallback;\n};\n$jscomp.inherits(ee.MapTileManager.Request_, goog.Disposable);\nee.MapTileManager.Request_.prototype.getImageLoader = function() {\n  return this.imageLoader_;\n};\nee.MapTileManager.Request_.prototype.setImageLoader = function(imageLoader) {\n  this.imageLoader_ = imageLoader;\n};\nee.MapTileManager.Request_.prototype.getToken = function() {\n  return this.token_;\n};\nee.MapTileManager.Request_.prototype.setToken = function(token) {\n  this.token_ = token;\n};\nee.MapTileManager.Request_.prototype.addImageEventListener = function() {\n  goog.events.listenOnce(this.imageLoader_, ee.MapTileManager.Request_.IMAGE_LOADER_EVENT_TYPES_, goog.bind(this.handleImageEvent_, this));\n};\nee.MapTileManager.Request_.prototype.fireImageEventCallback = function() {\n  this.imageEventCallback_ && this.imageEventCallback_(this.event_, this.profileId_);\n};\nee.MapTileManager.Request_.prototype.getId = function() {\n  return this.id_;\n};\nee.MapTileManager.Request_.prototype.getUrl = function() {\n  return this.url_;\n};\nee.MapTileManager.Request_.prototype.getMaxRetries = function() {\n  return this.maxRetries_;\n};\nee.MapTileManager.Request_.prototype.getAttemptCount = function() {\n  return this.attemptCount_;\n};\nee.MapTileManager.Request_.prototype.increaseAttemptCount = function() {\n  this.attemptCount_++;\n};\nee.MapTileManager.Request_.prototype.hasReachedMaxRetries = function() {\n  return this.attemptCount_ > this.maxRetries_;\n};\nee.MapTileManager.Request_.prototype.setAborted = function(aborted) {\n  aborted && !this.aborted_ && (this.aborted_ = aborted, this.event_ = new goog.events.Event(goog.net.EventType.ABORT));\n};\nee.MapTileManager.Request_.prototype.getAborted = function() {\n  return this.aborted_;\n};\nee.MapTileManager.Request_.prototype.handleImageEvent_ = function(e) {\n  if (this.getAborted()) {\n    this.markCompleted_();\n  } else {\n    switch(e.type) {\n      case goog.events.EventType.LOAD:\n        this.handleSuccess_(e);\n        this.markCompleted_();\n        break;\n      case goog.net.EventType.ERROR:\n      case goog.net.EventType.ABORT:\n        this.handleError_(e);\n    }\n  }\n};\nee.MapTileManager.Request_.prototype.markCompleted_ = function() {\n  this.requestCompleteCallback_ && this.requestCompleteCallback_(this);\n};\nee.MapTileManager.Request_.prototype.handleSuccess_ = function(e) {\n  this.event_ = e;\n};\nee.MapTileManager.Request_.prototype.handleError_ = function(e) {\n  this.retry() || (this.event_ = e, this.markCompleted_());\n};\nee.MapTileManager.Request_.prototype.disposeInternal = function() {\n  goog.Disposable.prototype.disposeInternal.call(this);\n  delete this.imageEventCallback_;\n  delete this.requestCompleteCallback_;\n};\nee.MapTileManager.Request_.prototype.retry = function() {\n  if (this.hasReachedMaxRetries()) {\n    return !1;\n  }\n  this.increaseAttemptCount();\n  this.imageLoader_.removeImage(this.id_);\n  setTimeout(goog.bind(this.start_, this), 0);\n  return !0;\n};\nee.MapTileManager.Request_.prototype.start_ = function() {\n  if (!this.getAborted()) {\n    var actuallyLoadImage = goog.bind(function(imageUrl) {\n      this.getAborted() || (this.imageLoader_.addImage(this.id_, imageUrl), this.addImageEventListener(), this.imageLoader_.start());\n    }, this), sourceUrl = this.getUrl();\n    if (goog.Uri.parse(sourceUrl).getQueryData().containsKey(\"profiling\")) {\n      var xhrIo = new goog.net.XhrIo();\n      xhrIo.setResponseType(goog.net.XhrIo.ResponseType.BLOB);\n      xhrIo.listen(goog.net.EventType.COMPLETE, goog.bind(function(event) {\n        this.profileId_ = xhrIo.getResponseHeader(module$contents$ee$apiclient_apiclient.PROFILE_HEADER) || null;\n        if (200 <= xhrIo.getStatus() && 300 > xhrIo.getStatus()) {\n          try {\n            var objectUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.fromBlob(xhrIo.getResponse()));\n            var ok = objectUrl !== goog.html.SafeUrl.INNOCUOUS_STRING;\n          } catch (e) {\n          }\n        }\n        actuallyLoadImage(ok ? objectUrl : sourceUrl);\n      }, this));\n      xhrIo.listenOnce(goog.net.EventType.READY, goog.bind(xhrIo.dispose, xhrIo));\n      xhrIo.send(sourceUrl, \"GET\");\n    } else {\n      actuallyLoadImage(sourceUrl);\n    }\n  }\n};\nee.MapTileManager.Request_.prototype.attemptCount_ = 0;\nee.MapTileManager.Request_.prototype.aborted_ = !1;\nee.MapTileManager.Request_.prototype.imageLoader_ = null;\nee.MapTileManager.Request_.prototype.token_ = null;\nee.MapTileManager.Request_.prototype.event_ = null;\nee.MapTileManager.Request_.prototype.profileId_ = null;\nee.MapTileManager.Request_.IMAGE_LOADER_EVENT_TYPES_ = [goog.events.EventType.LOAD, goog.net.EventType.ABORT, goog.net.EventType.ERROR];\nee.MapTileManager.Token_ = function() {\n  goog.Disposable.call(this);\n  this.active_ = !1;\n};\n$jscomp.inherits(ee.MapTileManager.Token_, goog.Disposable);\nee.MapTileManager.Token_.prototype.setActive = function(val) {\n  this.active_ = val;\n};\nee.MapTileManager.Token_.prototype.isActive = function() {\n  return this.active_;\n};\nee.MapTileManager.TokenPool_ = function(opt_minCount, opt_maxCount) {\n  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);\n};\n$jscomp.inherits(ee.MapTileManager.TokenPool_, goog.structs.PriorityPool);\nee.MapTileManager.TokenPool_.prototype.createObject = function() {\n  return new ee.MapTileManager.Token_();\n};\nee.MapTileManager.TokenPool_.prototype.disposeObject = function(obj) {\n  obj.dispose();\n};\nee.MapTileManager.TokenPool_.prototype.objectCanBeReused = function(obj) {\n  return !obj.isDisposed() && !obj.isActive();\n};\nee.MapLayerOverlay = function(url, mapId, token, init, opt_profiler) {\n  ee.AbstractOverlay.call(this, url, mapId, token, init, opt_profiler);\n  this.minZoom = init.minZoom || 0;\n  this.maxZoom = init.maxZoom || 20;\n  if (!window.google || !window.google.maps) {\n    throw Error(\"Google Maps API hasn't been initialized.\");\n  }\n  this.tileSize = init.tileSize || new google.maps.Size(256, 256);\n  this.isPng = void 0 !== init.isPng ? init.isPng : !0;\n  this.name = init.name;\n  this.tiles_ = new goog.structs.Set();\n  this.opacity_ = 1.0;\n  this.visible_ = !0;\n  this.profiler_ = opt_profiler || null;\n};\n$jscomp.inherits(ee.MapLayerOverlay, ee.AbstractOverlay);\nee.MapLayerOverlay.prototype.addTileCallback = function(callback) {\n  return goog.events.listen(this, ee.AbstractOverlay.EventType.TILE_LOADED, callback);\n};\nee.MapLayerOverlay.prototype.removeTileCallback = function(callbackId) {\n  goog.events.unlistenByKey(callbackId);\n};\nee.MapLayerOverlay.prototype.dispatchTileEvent_ = function() {\n  this.dispatchEvent(new ee.TileEvent(this.tilesLoading.length));\n};\nee.MapLayerOverlay.prototype.getTile = function(coord, zoom, ownerDocument) {\n  var maxCoord;\n  if (zoom < this.minZoom || 0 > coord.y || coord.y >= 1 << zoom) {\n    var img = ownerDocument.createElement(\"IMG\");\n    img.style.width = \"0px\";\n    img.style.height = \"0px\";\n    return img;\n  }\n  var profiling = this.profiler_ && this.profiler_.isEnabled(), tileId = this.getTileId(coord, zoom), src = [this.url, tileId].join(\"/\") + \"?token=\" + this.token;\n  profiling && (src += \"&profiling=1\");\n  var uniqueTileId = [tileId, this.tileCounter, this.token].join(\"/\");\n  this.tileCounter += 1;\n  var div = goog.dom.createDom(goog.dom.TagName.DIV, {id:uniqueTileId}), priority = (new Date()).getTime() / 1000;\n  this.tilesLoading.push(uniqueTileId);\n  ee.MapTileManager.getInstance().send(uniqueTileId, src, priority, goog.bind(this.handleImageCompleted_, this, div, uniqueTileId));\n  this.dispatchTileEvent_();\n  return div;\n};\nee.MapLayerOverlay.prototype.getLoadedTilesCount = function() {\n  return this.tiles_.getCount();\n};\nee.MapLayerOverlay.prototype.getLoadingTilesCount = function() {\n  return this.tilesLoading.length;\n};\nee.MapLayerOverlay.prototype.releaseTile = function(tileDiv) {\n  ee.MapTileManager.getInstance().abort(tileDiv.id);\n  this.tiles_.remove(goog.dom.getFirstElementChild(tileDiv));\n  \"\" !== tileDiv.id && (this.tilesFailed.remove(tileDiv.id), this.profiler_ && this.profiler_.removeTile(tileDiv.id));\n};\nee.MapLayerOverlay.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n  var iter = this.tiles_.__iterator__();\n  goog.iter.forEach(iter, function(tile) {\n    goog.style.setOpacity(tile, opacity);\n  });\n};\nee.MapLayerOverlay.prototype.handleImageCompleted_ = function(div, tileId, e, profileId) {\n  if (e.type == goog.net.EventType.ERROR) {\n    module$contents$goog$array_remove(this.tilesLoading, tileId), this.tilesFailed.add(tileId), this.dispatchEvent(e);\n  } else {\n    module$contents$goog$array_remove(this.tilesLoading, tileId);\n    if (e.target && e.type == goog.events.EventType.LOAD) {\n      var tile = e.target;\n      this.tiles_.add(tile);\n      1.0 != this.opacity_ && goog.style.setOpacity(tile, this.opacity_);\n      div.appendChild(tile);\n    }\n    this.dispatchTileEvent_();\n  }\n  this.profiler_ && null !== profileId && this.profiler_.addTile(tileId, profileId);\n};\ngoog.exportSymbol(\"ee.MapLayerOverlay\", ee.MapLayerOverlay);\ngoog.exportProperty(ee.MapLayerOverlay.prototype, \"removeTileCallback\", ee.MapLayerOverlay.prototype.removeTileCallback);\ngoog.exportProperty(ee.MapLayerOverlay.prototype, \"addTileCallback\", ee.MapLayerOverlay.prototype.addTileCallback);\ngoog.exportProperty(ee.MapLayerOverlay.prototype, \"getTile\", ee.MapLayerOverlay.prototype.getTile);\ngoog.exportProperty(ee.MapLayerOverlay.prototype, \"setOpacity\", ee.MapLayerOverlay.prototype.setOpacity);\ngoog.exportProperty(ee.MapLayerOverlay.prototype, \"releaseTile\", ee.MapLayerOverlay.prototype.releaseTile);\ngoog.async.Delay = function(listener, opt_interval, opt_handler) {\n  goog.Disposable.call(this);\n  this.listener_ = listener;\n  this.interval_ = opt_interval || 0;\n  this.handler_ = opt_handler;\n  this.callback_ = goog.bind(this.doAction_, this);\n};\ngoog.inherits(goog.async.Delay, goog.Disposable);\ngoog.async.Delay.prototype.id_ = 0;\ngoog.async.Delay.prototype.disposeInternal = function() {\n  goog.async.Delay.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.listener_;\n  delete this.handler_;\n};\ngoog.async.Delay.prototype.start = function(opt_interval) {\n  this.stop();\n  this.id_ = goog.Timer.callOnce(this.callback_, void 0 !== opt_interval ? opt_interval : this.interval_);\n};\ngoog.async.Delay.prototype.startIfNotActive = function(opt_interval) {\n  this.isActive() || this.start(opt_interval);\n};\ngoog.async.Delay.prototype.stop = function() {\n  this.isActive() && goog.Timer.clear(this.id_);\n  this.id_ = 0;\n};\ngoog.async.Delay.prototype.fire = function() {\n  this.stop();\n  this.doAction_();\n};\ngoog.async.Delay.prototype.fireIfActive = function() {\n  this.isActive() && this.fire();\n};\ngoog.async.Delay.prototype.isActive = function() {\n  return 0 != this.id_;\n};\ngoog.async.Delay.prototype.doAction_ = function() {\n  this.id_ = 0;\n  this.listener_ && this.listener_.call(this.handler_);\n};\nee.data.Profiler = function(format) {\n  goog.events.EventTarget.call(this);\n  this.format_ = format;\n  this.isEnabled_ = !1;\n  this.lastRefreshToken_ = null;\n  this.profileIds_ = Object.create(null);\n  this.tileProfileIds_ = Object.create(null);\n  this.showInternal_ = !1;\n  this.profileError_ = null;\n  this.throttledRefresh_ = new goog.async.Delay(goog.bind(this.refresh_, this), ee.data.Profiler.DELAY_BEFORE_REFRESH_);\n  this.profileData_ = ee.data.Profiler.getEmptyProfile_(format);\n  this.MAX_RETRY_COUNT_ = 5;\n};\n$jscomp.inherits(ee.data.Profiler, goog.events.EventTarget);\nee.data.Profiler.prototype.isEnabled = function() {\n  return this.isEnabled_;\n};\nee.data.Profiler.prototype.setEnabled = function(value) {\n  this.isEnabled_ = !!value;\n  this.dispatchEvent(new goog.events.Event(ee.data.Profiler.EventType.STATE_CHANGED));\n};\nee.data.Profiler.prototype.isLoading = function() {\n  return null !== this.lastRefreshToken_;\n};\nee.data.Profiler.prototype.isError = function() {\n  return null != this.profileError_;\n};\nee.data.Profiler.prototype.getStatusText = function() {\n  if (this.profileError_) {\n    return this.profileError_;\n  }\n  if (this.lastRefreshToken_) {\n    return \"Loading...\";\n  }\n  var profiles = 0, nonTileProfiles = 0, tileProfiles = 0;\n  module$contents$goog$object_forEach(this.profileIds_, function(refCount) {\n    profiles++;\n    Infinity === refCount ? nonTileProfiles++ : tileProfiles++;\n  }, this);\n  return \"Viewing \" + profiles + \" profiles, \" + nonTileProfiles + \" from API calls and \" + tileProfiles + \" from map tiles.\";\n};\nee.data.Profiler.prototype.getProfileData = function() {\n  return this.profileData_;\n};\nee.data.Profiler.prototype.clearAndDrop = function() {\n  this.profileIds_ = Object.create(null);\n  this.tileProfileIds_ = Object.create(null);\n  this.refresh_();\n};\nee.data.Profiler.prototype.getProfileHook = function() {\n  var profileIds = this.profileIds_;\n  return this.isEnabled_ ? goog.bind(function(profileId) {\n    profileIds[profileId] = Infinity;\n    this.throttledRefresh_.start();\n  }, this) : null;\n};\nee.data.Profiler.prototype.removeProfile_ = function(profileId) {\n  var count = this.profileIds_[profileId];\n  1 < count ? this.profileIds_[profileId]-- : void 0 !== count && (delete this.profileIds_[profileId], this.throttledRefresh_.start());\n};\nee.data.Profiler.prototype.refresh_ = function(retryAttempt) {\n  var $jscomp$this = this;\n  retryAttempt = void 0 === retryAttempt ? 0 : retryAttempt;\n  var marker = {};\n  this.lastRefreshToken_ = marker;\n  var handleResponse = function(result, error) {\n    marker == $jscomp$this.lastRefreshToken_ && (error && \"number\" === typeof retryAttempt && retryAttempt < $jscomp$this.MAX_RETRY_COUNT_ ? goog.Timer.callOnce(goog.bind($jscomp$this.refresh_, $jscomp$this, retryAttempt + 1), 2 * ee.data.Profiler.DELAY_BEFORE_REFRESH_) : ($jscomp$this.profileError_ = error || null, $jscomp$this.profileData_ = error ? ee.data.Profiler.getEmptyProfile_($jscomp$this.format_) : result, $jscomp$this.lastRefreshToken_ = null, $jscomp$this.dispatchEvent(ee.data.Profiler.EventType.STATE_CHANGED), \n    $jscomp$this.dispatchEvent(ee.data.Profiler.EventType.DATA_CHANGED)));\n  }, ids = module$contents$goog$object_getKeys(this.profileIds_);\n  0 === ids.length ? handleResponse(ee.data.Profiler.getEmptyProfile_(this.format_), void 0) : (ee.ApiFunction._apply(this.showInternal_ ? \"Profile.getProfilesInternal\" : \"Profile.getProfiles\", {ids:ids, format:this.format_.toString(),}).getInfo(handleResponse), this.dispatchEvent(ee.data.Profiler.EventType.STATE_CHANGED));\n};\nee.data.Profiler.prototype.addTile = function(tileId, profileId) {\n  this.tileProfileIds_[tileId] || (this.tileProfileIds_[tileId] = profileId, this.profileIds_[profileId] = (this.profileIds_[profileId] || 0) + 1, this.throttledRefresh_.start());\n};\nee.data.Profiler.prototype.removeTile = function(tileId) {\n  var profileId = this.tileProfileIds_[tileId];\n  profileId && (delete this.tileProfileIds_[tileId], this.removeProfile_(profileId));\n};\nee.data.Profiler.prototype.getShowInternal = function() {\n  return this.showInternal_;\n};\nee.data.Profiler.prototype.setShowInternal = function(value) {\n  this.showInternal_ = !!value;\n  this.throttledRefresh_.fire();\n};\nee.data.Profiler.prototype.setParentEventTarget = function(parent) {\n  throw Error(\"not applicable\");\n};\nee.data.Profiler.getEmptyProfile_ = function(format) {\n  switch(format) {\n    case ee.data.Profiler.Format.TEXT:\n      return \"\";\n    case ee.data.Profiler.Format.JSON:\n      return ee.data.Profiler.EMPTY_JSON_PROFILE_;\n    default:\n      throw Error(\"Invalid Profiler data format: \" + format);\n  }\n};\nee.data.Profiler.DELAY_BEFORE_REFRESH_ = 500;\nee.data.Profiler.EMPTY_JSON_PROFILE_ = {cols:[], rows:[]};\nee.data.Profiler.EventType = {STATE_CHANGED:\"statechanged\", DATA_CHANGED:\"datachanged\"};\nee.data.Profiler.Format = function(format) {\n  this.format_ = format;\n};\nee.data.Profiler.Format.prototype.toString = function() {\n  return this.format_;\n};\nee.data.Profiler.Format.TEXT = new ee.data.Profiler.Format(\"text\");\nee.data.Profiler.Format.JSON = new ee.data.Profiler.Format(\"json\");\n(function() {\n  var exportedFnInfo = {}, orderedFnNames = \"ee.ApiFunction._apply ee.ApiFunction.lookup ee.ApiFunction._call ee.batch.Export.table.toFeatureView ee.batch.Export.video.toCloudStorage ee.batch.Export.videoMap.toCloudStorage ee.batch.Export.image.toAsset ee.batch.Export.table.toAsset ee.batch.Export.classifier.toAsset ee.batch.Export.video.toDrive ee.batch.Export.image.toCloudStorage ee.batch.Export.image.toDrive ee.batch.Export.map.toCloudStorage ee.batch.Export.table.toCloudStorage ee.batch.Export.table.toDrive ee.Collection.prototype.limit ee.Collection.prototype.map ee.Collection.prototype.filterMetadata ee.Collection.prototype.sort ee.Collection.prototype.filterDate ee.Collection.prototype.filter ee.Collection.prototype.iterate ee.Collection.prototype.filterBounds ee.ComputedObject.prototype.aside ee.ComputedObject.prototype.evaluate ee.ComputedObject.prototype.getInfo ee.ComputedObject.prototype.serialize ee.data.deleteAsset ee.data.startIngestion ee.data.getVideoThumbId ee.data.getList ee.data.getFilmstripThumbId ee.data.listAssets ee.data.makeThumbUrl ee.data.authenticateViaOauth ee.data.startTableIngestion ee.data.getDownloadId ee.data.getAssetAcl ee.data.listImages ee.data.getAssetRoots ee.data.setAssetAcl ee.data.updateAsset ee.data.getTableDownloadId ee.data.getAsset ee.data.getInfo ee.data.makeDownloadUrl ee.data.listBuckets ee.data.makeTableDownloadUrl ee.data.setAssetProperties ee.data.authenticateViaPopup ee.data.createAssetHome ee.data.getAssetRootQuota ee.data.newTaskId ee.data.authenticateViaPrivateKey ee.data.cancelOperation ee.data.createAsset ee.data.getOperation ee.data.getTaskStatus ee.data.createFolder ee.data.getMapId ee.data.listOperations ee.data.renameAsset ee.data.getFeatureViewTilesKey ee.data.updateTask ee.data.cancelTask ee.data.getTaskListWithLimit ee.data.getThumbId ee.data.computeValue ee.data.startProcessing ee.data.authenticate ee.data.getTaskList ee.data.copyAsset ee.data.getTileUrl ee.Date ee.Deserializer.fromCloudApiJSON ee.Deserializer.decode ee.Deserializer.fromJSON ee.Deserializer.decodeCloudApi ee.Dictionary ee.call ee.reset ee.TILE_SIZE ee.InitState ee.apply ee.initialize ee.Algorithms ee.Element.prototype.set ee.Feature.prototype.getInfo ee.Feature ee.Feature.prototype.getMap ee.FeatureCollection.prototype.select ee.FeatureCollection.prototype.getDownloadURL ee.FeatureCollection ee.FeatureCollection.prototype.getMap ee.FeatureCollection.prototype.getInfo ee.Filter ee.Filter.or ee.Filter.lt ee.Filter.date ee.Filter.eq ee.Filter.gte ee.Filter.lte ee.Filter.neq ee.Filter.and ee.Filter.metadata ee.Filter.inList ee.Filter.bounds ee.Filter.gt ee.Filter.prototype.not ee.Function.prototype.apply ee.Function.prototype.call ee.Geometry.LineString ee.Geometry ee.Geometry.prototype.toGeoJSONString ee.Geometry.BBox ee.Geometry.MultiPolygon ee.Geometry.MultiLineString ee.Geometry.Point ee.Geometry.prototype.serialize ee.Geometry.Rectangle ee.Geometry.LinearRing ee.Geometry.prototype.toGeoJSON ee.Geometry.MultiPoint ee.Geometry.Polygon ee.Image.prototype.rename ee.Image.prototype.getDownloadURL ee.Image.prototype.select ee.Image.prototype.getMap ee.Image.prototype.getThumbURL ee.Image ee.Image.prototype.getThumbId ee.Image.prototype.expression ee.Image.prototype.clip ee.Image.rgb ee.Image.cat ee.Image.prototype.getInfo ee.ImageCollection.prototype.getFilmstripThumbURL ee.ImageCollection.prototype.getInfo ee.ImageCollection.prototype.getVideoThumbURL ee.ImageCollection.prototype.first ee.ImageCollection ee.ImageCollection.prototype.getMap ee.ImageCollection.prototype.select ee.List ee.Number ee.Serializer.encodeCloudApiPretty ee.Serializer.toCloudApiJSON ee.Serializer.encode ee.Serializer.toJSON ee.Serializer.encodeCloudApi ee.Serializer.toReadableCloudApiJSON ee.Serializer.toReadableJSON ee.String ee.Terrain\".split(\" \"), \n  orderedParamLists = [[\"name\", \"namedArgs\"], [\"name\"], [\"name\", \"var_args\"], [\"collection\", \"opt_description\", \"opt_assetId\"], \"collection opt_description opt_bucket opt_fileNamePrefix opt_framesPerSecond opt_dimensions opt_region opt_scale opt_crs opt_crsTransform opt_maxPixels opt_maxFrames\".split(\" \"), \"collection opt_description opt_bucket opt_fileNamePrefix opt_framesPerSecond opt_writePublicTiles opt_minZoom opt_maxZoom opt_scale opt_region opt_skipEmptyTiles opt_minTimeMachineZoomSubset opt_maxTimeMachineZoomSubset opt_tileWidth opt_tileHeight opt_tileStride opt_videoFormat opt_version opt_mapsApiKey opt_bucketCorsUris\".split(\" \"), \n  \"image opt_description opt_assetId opt_pyramidingPolicy opt_dimensions opt_region opt_scale opt_crs opt_crsTransform opt_maxPixels opt_shardSize\".split(\" \"), [\"collection\", \"opt_description\", \"opt_assetId\", \"opt_maxVertices\"], [\"classifier\", \"opt_description\", \"opt_assetId\"], \"collection opt_description opt_folder opt_fileNamePrefix opt_framesPerSecond opt_dimensions opt_region opt_scale opt_crs opt_crsTransform opt_maxPixels opt_maxFrames\".split(\" \"), \"image opt_description opt_bucket opt_fileNamePrefix opt_dimensions opt_region opt_scale opt_crs opt_crsTransform opt_maxPixels opt_shardSize opt_fileDimensions opt_skipEmptyTiles opt_fileFormat opt_formatOptions\".split(\" \"), \n  \"image opt_description opt_folder opt_fileNamePrefix opt_dimensions opt_region opt_scale opt_crs opt_crsTransform opt_maxPixels opt_shardSize opt_fileDimensions opt_skipEmptyTiles opt_fileFormat opt_formatOptions\".split(\" \"), \"image opt_description opt_bucket opt_fileFormat opt_path opt_writePublicTiles opt_scale opt_maxZoom opt_minZoom opt_region opt_skipEmptyTiles opt_mapsApiKey opt_bucketCorsUris\".split(\" \"), \"collection opt_description opt_bucket opt_fileNamePrefix opt_fileFormat opt_selectors opt_maxVertices\".split(\" \"), \n  \"collection opt_description opt_folder opt_fileNamePrefix opt_fileFormat opt_selectors opt_maxVertices\".split(\" \"), [\"max\", \"opt_property\", \"opt_ascending\"], [\"algorithm\", \"opt_dropNulls\"], [\"name\", \"operator\", \"value\"], [\"property\", \"opt_ascending\"], [\"start\", \"opt_end\"], [\"filter\"], [\"algorithm\", \"opt_first\"], [\"geometry\"], [\"func\", \"var_args\"], [\"callback\"], [\"opt_callback\"], [\"legacy\"], [\"assetId\", \"opt_callback\"], [\"taskId\", \"request\", \"opt_callback\"], [\"params\", \"opt_callback\"], [\"params\", \n  \"opt_callback\"], [\"params\", \"opt_callback\"], [\"parent\", \"params\", \"opt_callback\"], [\"id\"], \"clientId success opt_error opt_extraScopes opt_onImmediateFailed opt_suppressDefaultScopes\".split(\" \"), [\"taskId\", \"request\", \"opt_callback\"], [\"params\", \"opt_callback\"], [\"assetId\", \"opt_callback\"], [\"parent\", \"params\", \"opt_callback\"], [\"opt_callback\"], [\"assetId\", \"aclUpdate\", \"opt_callback\"], [\"assetId\", \"asset\", \"updateFields\", \"opt_callback\"], [\"params\", \"opt_callback\"], [\"id\", \"opt_callback\"], [\"id\", \n  \"opt_callback\"], [\"id\"], [\"project\", \"opt_callback\"], [\"id\"], [\"assetId\", \"properties\", \"opt_callback\"], [\"opt_success\", \"opt_error\"], [\"requestedId\", \"opt_callback\"], [\"rootId\", \"opt_callback\"], [\"opt_count\", \"opt_callback\"], [\"privateKey\", \"opt_success\", \"opt_error\", \"opt_extraScopes\", \"opt_suppressDefaultScopes\"], [\"operationName\", \"opt_callback\"], [\"value\", \"opt_path\", \"opt_force\", \"opt_properties\", \"opt_callback\"], [\"operationName\", \"opt_callback\"], [\"taskId\", \"opt_callback\"], [\"path\", \"opt_force\", \n  \"opt_callback\"], [\"params\", \"opt_callback\"], [\"opt_limit\", \"opt_callback\"], [\"sourceId\", \"destinationId\", \"opt_callback\"], [\"params\", \"opt_callback\"], [\"taskId\", \"action\", \"opt_callback\"], [\"taskId\", \"opt_callback\"], [\"opt_limit\", \"opt_callback\"], [\"params\", \"opt_callback\"], [\"obj\", \"opt_callback\"], [\"taskId\", \"params\", \"opt_callback\"], [\"clientId\", \"success\", \"opt_error\", \"opt_extraScopes\", \"opt_onImmediateFailed\"], [\"opt_callback\"], [\"sourceId\", \"destinationId\", \"opt_overwrite\", \"opt_callback\"], \n  [\"id\", \"x\", \"y\", \"z\"], [\"date\", \"opt_tz\"], [\"json\"], [\"json\"], [\"json\"], [\"json\"], [\"opt_dict\"], [\"func\", \"var_args\"], [], [], [], [\"func\", \"namedArgs\"], \"opt_baseurl opt_tileurl opt_successCallback opt_errorCallback opt_xsrfToken opt_project\".split(\" \"), [], [\"var_args\"], [\"opt_callback\"], [\"geometry\", \"opt_properties\"], [\"opt_visParams\", \"opt_callback\"], [\"propertySelectors\", \"opt_newProperties\", \"opt_retainGeometry\"], [\"opt_format\", \"opt_selectors\", \"opt_filename\", \"opt_callback\"], [\"args\", \n  \"opt_column\"], [\"opt_visParams\", \"opt_callback\"], [\"opt_callback\"], [\"opt_filter\"], [\"var_args\"], [\"name\", \"value\"], [\"start\", \"opt_end\"], [\"name\", \"value\"], [\"name\", \"value\"], [\"name\", \"value\"], [\"name\", \"value\"], [\"var_args\"], [\"name\", \"operator\", \"value\"], [\"opt_leftField\", \"opt_rightValue\", \"opt_rightField\", \"opt_leftValue\"], [\"geometry\", \"opt_errorMargin\"], [\"name\", \"value\"], [], [\"namedArgs\"], [\"var_args\"], [\"coords\", \"opt_proj\", \"opt_geodesic\", \"opt_maxError\"], [\"geoJson\", \"opt_proj\", \"opt_geodesic\", \n  \"opt_evenOdd\"], [], [\"west\", \"south\", \"east\", \"north\"], [\"coords\", \"opt_proj\", \"opt_geodesic\", \"opt_maxError\", \"opt_evenOdd\"], [\"coords\", \"opt_proj\", \"opt_geodesic\", \"opt_maxError\"], [\"coords\", \"opt_proj\"], [\"legacy\"], [\"coords\", \"opt_proj\", \"opt_geodesic\", \"opt_evenOdd\"], [\"coords\", \"opt_proj\", \"opt_geodesic\", \"opt_maxError\"], [], [\"coords\", \"opt_proj\"], [\"coords\", \"opt_proj\", \"opt_geodesic\", \"opt_maxError\", \"opt_evenOdd\"], [\"var_args\"], [\"params\", \"opt_callback\"], [\"var_args\"], [\"opt_visParams\", \n  \"opt_callback\"], [\"params\", \"opt_callback\"], [\"opt_args\"], [\"params\", \"opt_callback\"], [\"expression\", \"opt_map\"], [\"geometry\"], [\"r\", \"g\", \"b\"], [\"var_args\"], [\"opt_callback\"], [\"params\", \"opt_callback\"], [\"opt_callback\"], [\"params\", \"opt_callback\"], [], [\"args\"], [\"opt_visParams\", \"opt_callback\"], [\"selectors\", \"opt_names\"], [\"list\"], [\"number\"], [\"obj\"], [\"obj\"], [\"obj\", \"opt_isCompound\"], [\"obj\"], [\"obj\"], [\"obj\"], [\"obj\"], [\"string\"], []];\n  [ee.ApiFunction._apply, ee.ApiFunction.lookup, ee.ApiFunction._call, module$contents$ee$batch_Export.table.toFeatureView, module$contents$ee$batch_Export.video.toCloudStorage, module$contents$ee$batch_Export.videoMap.toCloudStorage, module$contents$ee$batch_Export.image.toAsset, module$contents$ee$batch_Export.table.toAsset, module$contents$ee$batch_Export.classifier.toAsset, module$contents$ee$batch_Export.video.toDrive, module$contents$ee$batch_Export.image.toCloudStorage, module$contents$ee$batch_Export.image.toDrive, \n  module$contents$ee$batch_Export.map.toCloudStorage, module$contents$ee$batch_Export.table.toCloudStorage, module$contents$ee$batch_Export.table.toDrive, ee.Collection.prototype.limit, ee.Collection.prototype.map, ee.Collection.prototype.filterMetadata, ee.Collection.prototype.sort, ee.Collection.prototype.filterDate, ee.Collection.prototype.filter, ee.Collection.prototype.iterate, ee.Collection.prototype.filterBounds, ee.ComputedObject.prototype.aside, ee.ComputedObject.prototype.evaluate, ee.ComputedObject.prototype.getInfo, \n  ee.ComputedObject.prototype.serialize, ee.data.deleteAsset, ee.data.startIngestion, ee.data.getVideoThumbId, ee.data.getList, ee.data.getFilmstripThumbId, ee.data.listAssets, ee.data.makeThumbUrl, ee.data.authenticateViaOauth, ee.data.startTableIngestion, ee.data.getDownloadId, ee.data.getAssetAcl, ee.data.listImages, ee.data.getAssetRoots, ee.data.setAssetAcl, ee.data.updateAsset, ee.data.getTableDownloadId, ee.data.getAsset, ee.data.getInfo, ee.data.makeDownloadUrl, ee.data.listBuckets, ee.data.makeTableDownloadUrl, \n  ee.data.setAssetProperties, ee.data.authenticateViaPopup, ee.data.createAssetHome, ee.data.getAssetRootQuota, ee.data.newTaskId, ee.data.authenticateViaPrivateKey, ee.data.cancelOperation, ee.data.createAsset, ee.data.getOperation, ee.data.getTaskStatus, ee.data.createFolder, ee.data.getMapId, ee.data.listOperations, ee.data.renameAsset, ee.data.getFeatureViewTilesKey, ee.data.updateTask, ee.data.cancelTask, ee.data.getTaskListWithLimit, ee.data.getThumbId, ee.data.computeValue, ee.data.startProcessing, \n  ee.data.authenticate, ee.data.getTaskList, ee.data.copyAsset, ee.data.getTileUrl, ee.Date, ee.Deserializer.fromCloudApiJSON, ee.Deserializer.decode, ee.Deserializer.fromJSON, ee.Deserializer.decodeCloudApi, ee.Dictionary, ee.call, ee.reset, ee.TILE_SIZE, ee.InitState, ee.apply, ee.initialize, ee.Algorithms, ee.Element.prototype.set, ee.Feature.prototype.getInfo, ee.Feature, ee.Feature.prototype.getMap, ee.FeatureCollection.prototype.select, ee.FeatureCollection.prototype.getDownloadURL, ee.FeatureCollection, \n  ee.FeatureCollection.prototype.getMap, ee.FeatureCollection.prototype.getInfo, ee.Filter, ee.Filter.or, ee.Filter.lt, ee.Filter.date, ee.Filter.eq, ee.Filter.gte, ee.Filter.lte, ee.Filter.neq, ee.Filter.and, ee.Filter.metadata, ee.Filter.inList, ee.Filter.bounds, ee.Filter.gt, ee.Filter.prototype.not, ee.Function.prototype.apply, ee.Function.prototype.call, ee.Geometry.LineString, ee.Geometry, ee.Geometry.prototype.toGeoJSONString, ee.Geometry.BBox, ee.Geometry.MultiPolygon, ee.Geometry.MultiLineString, \n  ee.Geometry.Point, ee.Geometry.prototype.serialize, ee.Geometry.Rectangle, ee.Geometry.LinearRing, ee.Geometry.prototype.toGeoJSON, ee.Geometry.MultiPoint, ee.Geometry.Polygon, ee.Image.prototype.rename, ee.Image.prototype.getDownloadURL, ee.Image.prototype.select, ee.Image.prototype.getMap, ee.Image.prototype.getThumbURL, ee.Image, ee.Image.prototype.getThumbId, ee.Image.prototype.expression, ee.Image.prototype.clip, ee.Image.rgb, ee.Image.cat, ee.Image.prototype.getInfo, ee.ImageCollection.prototype.getFilmstripThumbURL, \n  ee.ImageCollection.prototype.getInfo, ee.ImageCollection.prototype.getVideoThumbURL, ee.ImageCollection.prototype.first, ee.ImageCollection, ee.ImageCollection.prototype.getMap, ee.ImageCollection.prototype.select, ee.List, ee.Number, ee.Serializer.encodeCloudApiPretty, ee.Serializer.toCloudApiJSON, ee.Serializer.encode, ee.Serializer.toJSON, ee.Serializer.encodeCloudApi, ee.Serializer.toReadableCloudApiJSON, ee.Serializer.toReadableJSON, ee.String, ee.Terrain].forEach(function(fn, i) {\n    fn && (exportedFnInfo[fn.toString()] = {name:orderedFnNames[i], paramNames:orderedParamLists[i]});\n  });\n  goog.global.EXPORTED_FN_INFO = exportedFnInfo;\n})();\n\ngoog.global = window;\ngoog.Timer.defaultTimerObject = window;\nmodule.exports = ee;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@google/earthengine/build/browser.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3BvX3Byb2ZpbGVyLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _google_earthengine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/earthengine */ \"./node_modules/@google/earthengine/build/browser.js\");\n\nwindow.ee = _google_earthengine__WEBPACK_IMPORTED_MODULE_0__;\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log('content loaded');\n  var body = document.querySelector(\"body\");\n  var list = document.createElement(\"ul\");\n  body.append(list); // ul showed up on page so webpack is working\n\n  var image = new _google_earthengine__WEBPACK_IMPORTED_MODULE_0__.Image('srtm90_v4');\n  image.getMap({\n    min: 0,\n    max: 1000\n  }, function (map) {\n    console.log(map);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBQyxNQUFNLENBQUNELEVBQVAsR0FBWUEsZ0RBQVo7QUFHQUUsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOEMsWUFBTTtBQUNoREMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVo7QUFDQSxNQUFNQyxJQUFJLEdBQUdKLFFBQVEsQ0FBQ0ssYUFBVCxDQUF1QixNQUF2QixDQUFiO0FBQ0EsTUFBTUMsSUFBSSxHQUFHTixRQUFRLENBQUNPLGFBQVQsQ0FBdUIsSUFBdkIsQ0FBYjtBQUNBSCxFQUFBQSxJQUFJLENBQUNJLE1BQUwsQ0FBWUYsSUFBWixFQUpnRCxDQUk5Qjs7QUFFbEIsTUFBSUcsS0FBSyxHQUFHLElBQUlYLHNEQUFKLENBQWEsV0FBYixDQUFaO0FBQ0FXLEVBQUFBLEtBQUssQ0FBQ0UsTUFBTixDQUFhO0FBQUVDLElBQUFBLEdBQUcsRUFBRSxDQUFQO0FBQVVDLElBQUFBLEdBQUcsRUFBRTtBQUFmLEdBQWIsRUFBb0MsVUFBVUMsR0FBVixFQUFlO0FBQy9DWixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVcsR0FBWjtBQUNILEdBRkQ7QUFHSCxDQVZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wb19wcm9maWxlci8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlZSBmcm9tICdAZ29vZ2xlL2VhcnRoZW5naW5lJztcbndpbmRvdy5lZSA9IGVlXG5cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdjb250ZW50IGxvYWRlZCcpXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpXG4gICAgY29uc3QgbGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKVxuICAgIGJvZHkuYXBwZW5kKGxpc3QpIC8vIHVsIHNob3dlZCB1cCBvbiBwYWdlIHNvIHdlYnBhY2sgaXMgd29ya2luZ1xuXG4gICAgdmFyIGltYWdlID0gbmV3IGVlLkltYWdlKCdzcnRtOTBfdjQnKTtcbiAgICBpbWFnZS5nZXRNYXAoeyBtaW46IDAsIG1heDogMTAwMCB9LCBmdW5jdGlvbiAobWFwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKG1hcCk7XG4gICAgfSk7XG59KSJdLCJuYW1lcyI6WyJlZSIsIndpbmRvdyIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwicXVlcnlTZWxlY3RvciIsImxpc3QiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kIiwiaW1hZ2UiLCJJbWFnZSIsImdldE1hcCIsIm1pbiIsIm1heCIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;